"use strict";
(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __esm = (fn, res) => function __init() {
    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
  };
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));

  // node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js
  var require_base64_js = __commonJS({
    "node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js"(exports) {
      "use strict";
      init_dist();
      exports.byteLength = byteLength;
      exports.toByteArray = toByteArray;
      exports.fromByteArray = fromByteArray;
      var lookup = [];
      var revLookup = [];
      var Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
      var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
      for (i = 0, len = code.length; i < len; ++i) {
        lookup[i] = code[i];
        revLookup[code.charCodeAt(i)] = i;
      }
      var i;
      var len;
      revLookup["-".charCodeAt(0)] = 62;
      revLookup["_".charCodeAt(0)] = 63;
      function getLens(b64) {
        var len2 = b64.length;
        if (len2 % 4 > 0) {
          throw new Error("Invalid string. Length must be a multiple of 4");
        }
        var validLen = b64.indexOf("=");
        if (validLen === -1)
          validLen = len2;
        var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;
        return [validLen, placeHoldersLen];
      }
      function byteLength(b64) {
        var lens = getLens(b64);
        var validLen = lens[0];
        var placeHoldersLen = lens[1];
        return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
      }
      function _byteLength(b64, validLen, placeHoldersLen) {
        return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
      }
      function toByteArray(b64) {
        var tmp;
        var lens = getLens(b64);
        var validLen = lens[0];
        var placeHoldersLen = lens[1];
        var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
        var curByte = 0;
        var len2 = placeHoldersLen > 0 ? validLen - 4 : validLen;
        var i2;
        for (i2 = 0; i2 < len2; i2 += 4) {
          tmp = revLookup[b64.charCodeAt(i2)] << 18 | revLookup[b64.charCodeAt(i2 + 1)] << 12 | revLookup[b64.charCodeAt(i2 + 2)] << 6 | revLookup[b64.charCodeAt(i2 + 3)];
          arr[curByte++] = tmp >> 16 & 255;
          arr[curByte++] = tmp >> 8 & 255;
          arr[curByte++] = tmp & 255;
        }
        if (placeHoldersLen === 2) {
          tmp = revLookup[b64.charCodeAt(i2)] << 2 | revLookup[b64.charCodeAt(i2 + 1)] >> 4;
          arr[curByte++] = tmp & 255;
        }
        if (placeHoldersLen === 1) {
          tmp = revLookup[b64.charCodeAt(i2)] << 10 | revLookup[b64.charCodeAt(i2 + 1)] << 4 | revLookup[b64.charCodeAt(i2 + 2)] >> 2;
          arr[curByte++] = tmp >> 8 & 255;
          arr[curByte++] = tmp & 255;
        }
        return arr;
      }
      function tripletToBase64(num) {
        return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];
      }
      function encodeChunk(uint8, start, end) {
        var tmp;
        var output = [];
        for (var i2 = start; i2 < end; i2 += 3) {
          tmp = (uint8[i2] << 16 & 16711680) + (uint8[i2 + 1] << 8 & 65280) + (uint8[i2 + 2] & 255);
          output.push(tripletToBase64(tmp));
        }
        return output.join("");
      }
      function fromByteArray(uint8) {
        var tmp;
        var len2 = uint8.length;
        var extraBytes = len2 % 3;
        var parts = [];
        var maxChunkLength = 16383;
        for (var i2 = 0, len22 = len2 - extraBytes; i2 < len22; i2 += maxChunkLength) {
          parts.push(encodeChunk(uint8, i2, i2 + maxChunkLength > len22 ? len22 : i2 + maxChunkLength));
        }
        if (extraBytes === 1) {
          tmp = uint8[len2 - 1];
          parts.push(
            lookup[tmp >> 2] + lookup[tmp << 4 & 63] + "=="
          );
        } else if (extraBytes === 2) {
          tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1];
          parts.push(
            lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + "="
          );
        }
        return parts.join("");
      }
    }
  });

  // node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js
  var require_ieee754 = __commonJS({
    "node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js"(exports) {
      init_dist();
      exports.read = function(buffer, offset, isLE, mLen, nBytes) {
        var e, m;
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var nBits = -7;
        var i = isLE ? nBytes - 1 : 0;
        var d = isLE ? -1 : 1;
        var s2 = buffer[offset + i];
        i += d;
        e = s2 & (1 << -nBits) - 1;
        s2 >>= -nBits;
        nBits += eLen;
        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {
        }
        m = e & (1 << -nBits) - 1;
        e >>= -nBits;
        nBits += mLen;
        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {
        }
        if (e === 0) {
          e = 1 - eBias;
        } else if (e === eMax) {
          return m ? NaN : (s2 ? -1 : 1) * Infinity;
        } else {
          m = m + Math.pow(2, mLen);
          e = e - eBias;
        }
        return (s2 ? -1 : 1) * m * Math.pow(2, e - mLen);
      };
      exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
        var e, m, c;
        var eLen = nBytes * 8 - mLen - 1;
        var eMax = (1 << eLen) - 1;
        var eBias = eMax >> 1;
        var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
        var i = isLE ? 0 : nBytes - 1;
        var d = isLE ? 1 : -1;
        var s2 = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
        value = Math.abs(value);
        if (isNaN(value) || value === Infinity) {
          m = isNaN(value) ? 1 : 0;
          e = eMax;
        } else {
          e = Math.floor(Math.log(value) / Math.LN2);
          if (value * (c = Math.pow(2, -e)) < 1) {
            e--;
            c *= 2;
          }
          if (e + eBias >= 1) {
            value += rt / c;
          } else {
            value += rt * Math.pow(2, 1 - eBias);
          }
          if (value * c >= 2) {
            e++;
            c /= 2;
          }
          if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
          } else if (e + eBias >= 1) {
            m = (value * c - 1) * Math.pow(2, mLen);
            e = e + eBias;
          } else {
            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
            e = 0;
          }
        }
        for (; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {
        }
        e = e << mLen | m;
        eLen += mLen;
        for (; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {
        }
        buffer[offset + i - d] |= s2 * 128;
      };
    }
  });

  // node_modules/.pnpm/buffer@6.0.3_patch_hash=zkkuxompt5d553skpnegwi5wuy/node_modules/buffer/index.js
  var require_buffer = __commonJS({
    "node_modules/.pnpm/buffer@6.0.3_patch_hash=zkkuxompt5d553skpnegwi5wuy/node_modules/buffer/index.js"(exports) {
      "use strict";
      init_dist();
      var base64 = require_base64_js();
      var ieee754 = require_ieee754();
      var customInspectSymbol = typeof Symbol === "function" && typeof Symbol["for"] === "function" ? Symbol["for"]("nodejs.util.inspect.custom") : null;
      exports.Buffer = Buffer2;
      exports.SlowBuffer = SlowBuffer;
      exports.INSPECT_MAX_BYTES = 50;
      var K_MAX_LENGTH = 2147483647;
      exports.kMaxLength = K_MAX_LENGTH;
      var { Uint8Array: GlobalUint8Array, ArrayBuffer: GlobalArrayBuffer, SharedArrayBuffer: GlobalSharedArrayBuffer } = globalThis;
      Buffer2.TYPED_ARRAY_SUPPORT = typedArraySupport();
      if (!Buffer2.TYPED_ARRAY_SUPPORT && typeof console !== "undefined" && typeof console.error === "function") {
        console.error(
          "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
        );
      }
      function typedArraySupport() {
        try {
          const arr = new GlobalUint8Array(1);
          const proto = { foo: function() {
            return 42;
          } };
          Object.setPrototypeOf(proto, GlobalUint8Array.prototype);
          Object.setPrototypeOf(arr, proto);
          return arr.foo() === 42;
        } catch (e) {
          return false;
        }
      }
      Object.defineProperty(Buffer2.prototype, "parent", {
        enumerable: true,
        get: function() {
          if (!Buffer2.isBuffer(this))
            return void 0;
          return this.buffer;
        }
      });
      Object.defineProperty(Buffer2.prototype, "offset", {
        enumerable: true,
        get: function() {
          if (!Buffer2.isBuffer(this))
            return void 0;
          return this.byteOffset;
        }
      });
      function createBuffer(length) {
        if (length > K_MAX_LENGTH) {
          throw new RangeError('The value "' + length + '" is invalid for option "size"');
        }
        const buf = new GlobalUint8Array(length);
        Object.setPrototypeOf(buf, Buffer2.prototype);
        return buf;
      }
      function Buffer2(arg, encodingOrOffset, length) {
        if (typeof arg === "number") {
          if (typeof encodingOrOffset === "string") {
            throw new TypeError(
              'The "string" argument must be of type string. Received type number'
            );
          }
          return allocUnsafe(arg);
        }
        return from(arg, encodingOrOffset, length);
      }
      Buffer2.poolSize = 8192;
      function from(value, encodingOrOffset, length) {
        if (typeof value === "string") {
          return fromString(value, encodingOrOffset);
        }
        if (GlobalArrayBuffer.isView(value)) {
          return fromArrayView(value);
        }
        if (value == null) {
          throw new TypeError(
            "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value
          );
        }
        if (isInstance(value, GlobalArrayBuffer) || value && isInstance(value.buffer, GlobalArrayBuffer)) {
          return fromArrayBuffer(value, encodingOrOffset, length);
        }
        if (typeof GlobalSharedArrayBuffer !== "undefined" && (isInstance(value, GlobalSharedArrayBuffer) || value && isInstance(value.buffer, GlobalSharedArrayBuffer))) {
          return fromArrayBuffer(value, encodingOrOffset, length);
        }
        if (typeof value === "number") {
          throw new TypeError(
            'The "value" argument must not be of type number. Received type number'
          );
        }
        const valueOf = value.valueOf && value.valueOf();
        if (valueOf != null && valueOf !== value) {
          return Buffer2.from(valueOf, encodingOrOffset, length);
        }
        const b = fromObject(value);
        if (b)
          return b;
        if (typeof Symbol !== "undefined" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === "function") {
          return Buffer2.from(value[Symbol.toPrimitive]("string"), encodingOrOffset, length);
        }
        throw new TypeError(
          "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value
        );
      }
      Buffer2.from = function(value, encodingOrOffset, length) {
        return from(value, encodingOrOffset, length);
      };
      Object.setPrototypeOf(Buffer2.prototype, GlobalUint8Array.prototype);
      Object.setPrototypeOf(Buffer2, GlobalUint8Array);
      function assertSize(size) {
        if (typeof size !== "number") {
          throw new TypeError('"size" argument must be of type number');
        } else if (size < 0) {
          throw new RangeError('The value "' + size + '" is invalid for option "size"');
        }
      }
      function alloc(size, fill, encoding) {
        assertSize(size);
        if (size <= 0) {
          return createBuffer(size);
        }
        if (fill !== void 0) {
          return typeof encoding === "string" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
        }
        return createBuffer(size);
      }
      Buffer2.alloc = function(size, fill, encoding) {
        return alloc(size, fill, encoding);
      };
      function allocUnsafe(size) {
        assertSize(size);
        return createBuffer(size < 0 ? 0 : checked(size) | 0);
      }
      Buffer2.allocUnsafe = function(size) {
        return allocUnsafe(size);
      };
      Buffer2.allocUnsafeSlow = function(size) {
        return allocUnsafe(size);
      };
      function fromString(string, encoding) {
        if (typeof encoding !== "string" || encoding === "") {
          encoding = "utf8";
        }
        if (!Buffer2.isEncoding(encoding)) {
          throw new TypeError("Unknown encoding: " + encoding);
        }
        const length = byteLength(string, encoding) | 0;
        let buf = createBuffer(length);
        const actual = buf.write(string, encoding);
        if (actual !== length) {
          buf = buf.slice(0, actual);
        }
        return buf;
      }
      function fromArrayLike(array) {
        const length = array.length < 0 ? 0 : checked(array.length) | 0;
        const buf = createBuffer(length);
        for (let i = 0; i < length; i += 1) {
          buf[i] = array[i] & 255;
        }
        return buf;
      }
      function fromArrayView(arrayView) {
        if (isInstance(arrayView, GlobalUint8Array)) {
          const copy = new GlobalUint8Array(arrayView);
          return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
        }
        return fromArrayLike(arrayView);
      }
      function fromArrayBuffer(array, byteOffset, length) {
        if (byteOffset < 0 || array.byteLength < byteOffset) {
          throw new RangeError('"offset" is outside of buffer bounds');
        }
        if (array.byteLength < byteOffset + (length || 0)) {
          throw new RangeError('"length" is outside of buffer bounds');
        }
        let buf;
        if (byteOffset === void 0 && length === void 0) {
          buf = new GlobalUint8Array(array);
        } else if (length === void 0) {
          buf = new GlobalUint8Array(array, byteOffset);
        } else {
          buf = new GlobalUint8Array(array, byteOffset, length);
        }
        Object.setPrototypeOf(buf, Buffer2.prototype);
        return buf;
      }
      function fromObject(obj) {
        if (Buffer2.isBuffer(obj)) {
          const len = checked(obj.length) | 0;
          const buf = createBuffer(len);
          if (buf.length === 0) {
            return buf;
          }
          obj.copy(buf, 0, 0, len);
          return buf;
        }
        if (obj.length !== void 0) {
          if (typeof obj.length !== "number" || numberIsNaN(obj.length)) {
            return createBuffer(0);
          }
          return fromArrayLike(obj);
        }
        if (obj.type === "Buffer" && Array.isArray(obj.data)) {
          return fromArrayLike(obj.data);
        }
      }
      function checked(length) {
        if (length >= K_MAX_LENGTH) {
          throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
        }
        return length | 0;
      }
      function SlowBuffer(length) {
        if (+length != length) {
          length = 0;
        }
        return Buffer2.alloc(+length);
      }
      Buffer2.isBuffer = function isBuffer(b) {
        return b != null && b._isBuffer === true && b !== Buffer2.prototype;
      };
      Buffer2.compare = function compare(a, b) {
        if (isInstance(a, GlobalUint8Array))
          a = Buffer2.from(a, a.offset, a.byteLength);
        if (isInstance(b, GlobalUint8Array))
          b = Buffer2.from(b, b.offset, b.byteLength);
        if (!Buffer2.isBuffer(a) || !Buffer2.isBuffer(b)) {
          throw new TypeError(
            'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
          );
        }
        if (a === b)
          return 0;
        let x = a.length;
        let y = b.length;
        for (let i = 0, len = Math.min(x, y); i < len; ++i) {
          if (a[i] !== b[i]) {
            x = a[i];
            y = b[i];
            break;
          }
        }
        if (x < y)
          return -1;
        if (y < x)
          return 1;
        return 0;
      };
      Buffer2.isEncoding = function isEncoding(encoding) {
        switch (String(encoding).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return true;
          default:
            return false;
        }
      };
      Buffer2.concat = function concat(list, length) {
        if (!Array.isArray(list)) {
          throw new TypeError('"list" argument must be an Array of Buffers');
        }
        if (list.length === 0) {
          return Buffer2.alloc(0);
        }
        let i;
        if (length === void 0) {
          length = 0;
          for (i = 0; i < list.length; ++i) {
            length += list[i].length;
          }
        }
        const buffer = Buffer2.allocUnsafe(length);
        let pos = 0;
        for (i = 0; i < list.length; ++i) {
          let buf = list[i];
          if (isInstance(buf, GlobalUint8Array)) {
            if (pos + buf.length > buffer.length) {
              if (!Buffer2.isBuffer(buf))
                buf = Buffer2.from(buf);
              buf.copy(buffer, pos);
            } else {
              GlobalUint8Array.prototype.set.call(
                buffer,
                buf,
                pos
              );
            }
          } else if (!Buffer2.isBuffer(buf)) {
            throw new TypeError('"list" argument must be an Array of Buffers');
          } else {
            buf.copy(buffer, pos);
          }
          pos += buf.length;
        }
        return buffer;
      };
      function byteLength(string, encoding) {
        if (Buffer2.isBuffer(string)) {
          return string.length;
        }
        if (GlobalArrayBuffer.isView(string) || isInstance(string, GlobalArrayBuffer)) {
          return string.byteLength;
        }
        if (typeof string !== "string") {
          throw new TypeError(
            'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string
          );
        }
        const len = string.length;
        const mustMatch = arguments.length > 2 && arguments[2] === true;
        if (!mustMatch && len === 0)
          return 0;
        let loweredCase = false;
        for (; ; ) {
          switch (encoding) {
            case "ascii":
            case "latin1":
            case "binary":
              return len;
            case "utf8":
            case "utf-8":
              return utf8ToBytes(string).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return len * 2;
            case "hex":
              return len >>> 1;
            case "base64":
              return base64ToBytes(string).length;
            default:
              if (loweredCase) {
                return mustMatch ? -1 : utf8ToBytes(string).length;
              }
              encoding = ("" + encoding).toLowerCase();
              loweredCase = true;
          }
        }
      }
      Buffer2.byteLength = byteLength;
      function slowToString(encoding, start, end) {
        let loweredCase = false;
        if (start === void 0 || start < 0) {
          start = 0;
        }
        if (start > this.length) {
          return "";
        }
        if (end === void 0 || end > this.length) {
          end = this.length;
        }
        if (end <= 0) {
          return "";
        }
        end >>>= 0;
        start >>>= 0;
        if (end <= start) {
          return "";
        }
        if (!encoding)
          encoding = "utf8";
        while (true) {
          switch (encoding) {
            case "hex":
              return hexSlice(this, start, end);
            case "utf8":
            case "utf-8":
              return utf8Slice(this, start, end);
            case "ascii":
              return asciiSlice(this, start, end);
            case "latin1":
            case "binary":
              return latin1Slice(this, start, end);
            case "base64":
              return base64Slice(this, start, end);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return utf16leSlice(this, start, end);
            default:
              if (loweredCase)
                throw new TypeError("Unknown encoding: " + encoding);
              encoding = (encoding + "").toLowerCase();
              loweredCase = true;
          }
        }
      }
      Buffer2.prototype._isBuffer = true;
      function swap(b, n, m) {
        const i = b[n];
        b[n] = b[m];
        b[m] = i;
      }
      Buffer2.prototype.swap16 = function swap16() {
        const len = this.length;
        if (len % 2 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 16-bits");
        }
        for (let i = 0; i < len; i += 2) {
          swap(this, i, i + 1);
        }
        return this;
      };
      Buffer2.prototype.swap32 = function swap32() {
        const len = this.length;
        if (len % 4 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 32-bits");
        }
        for (let i = 0; i < len; i += 4) {
          swap(this, i, i + 3);
          swap(this, i + 1, i + 2);
        }
        return this;
      };
      Buffer2.prototype.swap64 = function swap64() {
        const len = this.length;
        if (len % 8 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 64-bits");
        }
        for (let i = 0; i < len; i += 8) {
          swap(this, i, i + 7);
          swap(this, i + 1, i + 6);
          swap(this, i + 2, i + 5);
          swap(this, i + 3, i + 4);
        }
        return this;
      };
      Buffer2.prototype.toString = function toString() {
        const length = this.length;
        if (length === 0)
          return "";
        if (arguments.length === 0)
          return utf8Slice(this, 0, length);
        return slowToString.apply(this, arguments);
      };
      Buffer2.prototype.toLocaleString = Buffer2.prototype.toString;
      Buffer2.prototype.equals = function equals(b) {
        if (!Buffer2.isBuffer(b))
          throw new TypeError("Argument must be a Buffer");
        if (this === b)
          return true;
        return Buffer2.compare(this, b) === 0;
      };
      Buffer2.prototype.inspect = function inspect() {
        let str = "";
        const max = exports.INSPECT_MAX_BYTES;
        str = this.toString("hex", 0, max).replace(/(.{2})/g, "$1 ").trim();
        if (this.length > max)
          str += " ... ";
        return "<Buffer " + str + ">";
      };
      if (customInspectSymbol) {
        Buffer2.prototype[customInspectSymbol] = Buffer2.prototype.inspect;
      }
      Buffer2.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
        if (isInstance(target, GlobalUint8Array)) {
          target = Buffer2.from(target, target.offset, target.byteLength);
        }
        if (!Buffer2.isBuffer(target)) {
          throw new TypeError(
            'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target
          );
        }
        if (start === void 0) {
          start = 0;
        }
        if (end === void 0) {
          end = target ? target.length : 0;
        }
        if (thisStart === void 0) {
          thisStart = 0;
        }
        if (thisEnd === void 0) {
          thisEnd = this.length;
        }
        if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
          throw new RangeError("out of range index");
        }
        if (thisStart >= thisEnd && start >= end) {
          return 0;
        }
        if (thisStart >= thisEnd) {
          return -1;
        }
        if (start >= end) {
          return 1;
        }
        start >>>= 0;
        end >>>= 0;
        thisStart >>>= 0;
        thisEnd >>>= 0;
        if (this === target)
          return 0;
        let x = thisEnd - thisStart;
        let y = end - start;
        const len = Math.min(x, y);
        const thisCopy = this.slice(thisStart, thisEnd);
        const targetCopy = target.slice(start, end);
        for (let i = 0; i < len; ++i) {
          if (thisCopy[i] !== targetCopy[i]) {
            x = thisCopy[i];
            y = targetCopy[i];
            break;
          }
        }
        if (x < y)
          return -1;
        if (y < x)
          return 1;
        return 0;
      };
      function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
        if (buffer.length === 0)
          return -1;
        if (typeof byteOffset === "string") {
          encoding = byteOffset;
          byteOffset = 0;
        } else if (byteOffset > 2147483647) {
          byteOffset = 2147483647;
        } else if (byteOffset < -2147483648) {
          byteOffset = -2147483648;
        }
        byteOffset = +byteOffset;
        if (numberIsNaN(byteOffset)) {
          byteOffset = dir ? 0 : buffer.length - 1;
        }
        if (byteOffset < 0)
          byteOffset = buffer.length + byteOffset;
        if (byteOffset >= buffer.length) {
          if (dir)
            return -1;
          else
            byteOffset = buffer.length - 1;
        } else if (byteOffset < 0) {
          if (dir)
            byteOffset = 0;
          else
            return -1;
        }
        if (typeof val === "string") {
          val = Buffer2.from(val, encoding);
        }
        if (Buffer2.isBuffer(val)) {
          if (val.length === 0) {
            return -1;
          }
          return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
        } else if (typeof val === "number") {
          val = val & 255;
          if (typeof GlobalUint8Array.prototype.indexOf === "function") {
            if (dir) {
              return GlobalUint8Array.prototype.indexOf.call(buffer, val, byteOffset);
            } else {
              return GlobalUint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
            }
          }
          return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
        }
        throw new TypeError("val must be string, number or Buffer");
      }
      function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
        let indexSize = 1;
        let arrLength = arr.length;
        let valLength = val.length;
        if (encoding !== void 0) {
          encoding = String(encoding).toLowerCase();
          if (encoding === "ucs2" || encoding === "ucs-2" || encoding === "utf16le" || encoding === "utf-16le") {
            if (arr.length < 2 || val.length < 2) {
              return -1;
            }
            indexSize = 2;
            arrLength /= 2;
            valLength /= 2;
            byteOffset /= 2;
          }
        }
        function read(buf, i2) {
          if (indexSize === 1) {
            return buf[i2];
          } else {
            return buf.readUInt16BE(i2 * indexSize);
          }
        }
        let i;
        if (dir) {
          let foundIndex = -1;
          for (i = byteOffset; i < arrLength; i++) {
            if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
              if (foundIndex === -1)
                foundIndex = i;
              if (i - foundIndex + 1 === valLength)
                return foundIndex * indexSize;
            } else {
              if (foundIndex !== -1)
                i -= i - foundIndex;
              foundIndex = -1;
            }
          }
        } else {
          if (byteOffset + valLength > arrLength)
            byteOffset = arrLength - valLength;
          for (i = byteOffset; i >= 0; i--) {
            let found = true;
            for (let j = 0; j < valLength; j++) {
              if (read(arr, i + j) !== read(val, j)) {
                found = false;
                break;
              }
            }
            if (found)
              return i;
          }
        }
        return -1;
      }
      Buffer2.prototype.includes = function includes(val, byteOffset, encoding) {
        return this.indexOf(val, byteOffset, encoding) !== -1;
      };
      Buffer2.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
      };
      Buffer2.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
      };
      function hexWrite(buf, string, offset, length) {
        offset = Number(offset) || 0;
        const remaining = buf.length - offset;
        if (!length) {
          length = remaining;
        } else {
          length = Number(length);
          if (length > remaining) {
            length = remaining;
          }
        }
        const strLen = string.length;
        if (length > strLen / 2) {
          length = strLen / 2;
        }
        let i;
        for (i = 0; i < length; ++i) {
          const parsed = parseInt(string.substr(i * 2, 2), 16);
          if (numberIsNaN(parsed))
            return i;
          buf[offset + i] = parsed;
        }
        return i;
      }
      function utf8Write(buf, string, offset, length) {
        return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
      }
      function asciiWrite(buf, string, offset, length) {
        return blitBuffer(asciiToBytes(string), buf, offset, length);
      }
      function base64Write(buf, string, offset, length) {
        return blitBuffer(base64ToBytes(string), buf, offset, length);
      }
      function ucs2Write(buf, string, offset, length) {
        return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
      }
      Buffer2.prototype.write = function write(string, offset, length, encoding) {
        if (offset === void 0) {
          encoding = "utf8";
          length = this.length;
          offset = 0;
        } else if (length === void 0 && typeof offset === "string") {
          encoding = offset;
          length = this.length;
          offset = 0;
        } else if (isFinite(offset)) {
          offset = offset >>> 0;
          if (isFinite(length)) {
            length = length >>> 0;
            if (encoding === void 0)
              encoding = "utf8";
          } else {
            encoding = length;
            length = void 0;
          }
        } else {
          throw new Error(
            "Buffer.write(string, encoding, offset[, length]) is no longer supported"
          );
        }
        const remaining = this.length - offset;
        if (length === void 0 || length > remaining)
          length = remaining;
        if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
          throw new RangeError("Attempt to write outside buffer bounds");
        }
        if (!encoding)
          encoding = "utf8";
        let loweredCase = false;
        for (; ; ) {
          switch (encoding) {
            case "hex":
              return hexWrite(this, string, offset, length);
            case "utf8":
            case "utf-8":
              return utf8Write(this, string, offset, length);
            case "ascii":
            case "latin1":
            case "binary":
              return asciiWrite(this, string, offset, length);
            case "base64":
              return base64Write(this, string, offset, length);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return ucs2Write(this, string, offset, length);
            default:
              if (loweredCase)
                throw new TypeError("Unknown encoding: " + encoding);
              encoding = ("" + encoding).toLowerCase();
              loweredCase = true;
          }
        }
      };
      Buffer2.prototype.toJSON = function toJSON() {
        return {
          type: "Buffer",
          data: Array.prototype.slice.call(this._arr || this, 0)
        };
      };
      function base64Slice(buf, start, end) {
        if (start === 0 && end === buf.length) {
          return base64.fromByteArray(buf);
        } else {
          return base64.fromByteArray(buf.slice(start, end));
        }
      }
      function utf8Slice(buf, start, end) {
        end = Math.min(buf.length, end);
        const res = [];
        let i = start;
        while (i < end) {
          const firstByte = buf[i];
          let codePoint = null;
          let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
          if (i + bytesPerSequence <= end) {
            let secondByte, thirdByte, fourthByte, tempCodePoint;
            switch (bytesPerSequence) {
              case 1:
                if (firstByte < 128) {
                  codePoint = firstByte;
                }
                break;
              case 2:
                secondByte = buf[i + 1];
                if ((secondByte & 192) === 128) {
                  tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
                  if (tempCodePoint > 127) {
                    codePoint = tempCodePoint;
                  }
                }
                break;
              case 3:
                secondByte = buf[i + 1];
                thirdByte = buf[i + 2];
                if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
                  tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
                  if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                    codePoint = tempCodePoint;
                  }
                }
                break;
              case 4:
                secondByte = buf[i + 1];
                thirdByte = buf[i + 2];
                fourthByte = buf[i + 3];
                if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
                  tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
                  if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                    codePoint = tempCodePoint;
                  }
                }
            }
          }
          if (codePoint === null) {
            codePoint = 65533;
            bytesPerSequence = 1;
          } else if (codePoint > 65535) {
            codePoint -= 65536;
            res.push(codePoint >>> 10 & 1023 | 55296);
            codePoint = 56320 | codePoint & 1023;
          }
          res.push(codePoint);
          i += bytesPerSequence;
        }
        return decodeCodePointsArray(res);
      }
      var MAX_ARGUMENTS_LENGTH = 4096;
      function decodeCodePointsArray(codePoints) {
        const len = codePoints.length;
        if (len <= MAX_ARGUMENTS_LENGTH) {
          return String.fromCharCode.apply(String, codePoints);
        }
        let res = "";
        let i = 0;
        while (i < len) {
          res += String.fromCharCode.apply(
            String,
            codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
          );
        }
        return res;
      }
      function asciiSlice(buf, start, end) {
        let ret = "";
        end = Math.min(buf.length, end);
        for (let i = start; i < end; ++i) {
          ret += String.fromCharCode(buf[i] & 127);
        }
        return ret;
      }
      function latin1Slice(buf, start, end) {
        let ret = "";
        end = Math.min(buf.length, end);
        for (let i = start; i < end; ++i) {
          ret += String.fromCharCode(buf[i]);
        }
        return ret;
      }
      function hexSlice(buf, start, end) {
        const len = buf.length;
        if (!start || start < 0)
          start = 0;
        if (!end || end < 0 || end > len)
          end = len;
        let out = "";
        for (let i = start; i < end; ++i) {
          out += hexSliceLookupTable[buf[i]];
        }
        return out;
      }
      function utf16leSlice(buf, start, end) {
        const bytes = buf.slice(start, end);
        let res = "";
        for (let i = 0; i < bytes.length - 1; i += 2) {
          res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
        }
        return res;
      }
      Buffer2.prototype.slice = function slice(start, end) {
        const len = this.length;
        start = ~~start;
        end = end === void 0 ? len : ~~end;
        if (start < 0) {
          start += len;
          if (start < 0)
            start = 0;
        } else if (start > len) {
          start = len;
        }
        if (end < 0) {
          end += len;
          if (end < 0)
            end = 0;
        } else if (end > len) {
          end = len;
        }
        if (end < start)
          end = start;
        const newBuf = this.subarray(start, end);
        Object.setPrototypeOf(newBuf, Buffer2.prototype);
        return newBuf;
      };
      function checkOffset(offset, ext, length) {
        if (offset % 1 !== 0 || offset < 0)
          throw new RangeError("offset is not uint");
        if (offset + ext > length)
          throw new RangeError("Trying to access beyond buffer length");
      }
      Buffer2.prototype.readUintLE = Buffer2.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert)
          checkOffset(offset, byteLength2, this.length);
        let val = this[offset];
        let mul = 1;
        let i = 0;
        while (++i < byteLength2 && (mul *= 256)) {
          val += this[offset + i] * mul;
        }
        return val;
      };
      Buffer2.prototype.readUintBE = Buffer2.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert) {
          checkOffset(offset, byteLength2, this.length);
        }
        let val = this[offset + --byteLength2];
        let mul = 1;
        while (byteLength2 > 0 && (mul *= 256)) {
          val += this[offset + --byteLength2] * mul;
        }
        return val;
      };
      Buffer2.prototype.readUint8 = Buffer2.prototype.readUInt8 = function readUInt8(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 1, this.length);
        return this[offset];
      };
      Buffer2.prototype.readUint16LE = Buffer2.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 2, this.length);
        return this[offset] | this[offset + 1] << 8;
      };
      Buffer2.prototype.readUint16BE = Buffer2.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 2, this.length);
        return this[offset] << 8 | this[offset + 1];
      };
      Buffer2.prototype.readUint32LE = Buffer2.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 4, this.length);
        return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
      };
      Buffer2.prototype.readUint32BE = Buffer2.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 4, this.length);
        return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
      };
      Buffer2.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 7];
        if (first === void 0 || last === void 0) {
          boundsError(offset, this.length - 8);
        }
        const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;
        const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;
        return BigInt(lo) + (BigInt(hi) << BigInt(32));
      });
      Buffer2.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 7];
        if (first === void 0 || last === void 0) {
          boundsError(offset, this.length - 8);
        }
        const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
        const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;
        return (BigInt(hi) << BigInt(32)) + BigInt(lo);
      });
      Buffer2.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert)
          checkOffset(offset, byteLength2, this.length);
        let val = this[offset];
        let mul = 1;
        let i = 0;
        while (++i < byteLength2 && (mul *= 256)) {
          val += this[offset + i] * mul;
        }
        mul *= 128;
        if (val >= mul)
          val -= Math.pow(2, 8 * byteLength2);
        return val;
      };
      Buffer2.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert)
          checkOffset(offset, byteLength2, this.length);
        let i = byteLength2;
        let mul = 1;
        let val = this[offset + --i];
        while (i > 0 && (mul *= 256)) {
          val += this[offset + --i] * mul;
        }
        mul *= 128;
        if (val >= mul)
          val -= Math.pow(2, 8 * byteLength2);
        return val;
      };
      Buffer2.prototype.readInt8 = function readInt8(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 1, this.length);
        if (!(this[offset] & 128))
          return this[offset];
        return (255 - this[offset] + 1) * -1;
      };
      Buffer2.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 2, this.length);
        const val = this[offset] | this[offset + 1] << 8;
        return val & 32768 ? val | 4294901760 : val;
      };
      Buffer2.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 2, this.length);
        const val = this[offset + 1] | this[offset] << 8;
        return val & 32768 ? val | 4294901760 : val;
      };
      Buffer2.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 4, this.length);
        return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
      };
      Buffer2.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 4, this.length);
        return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
      };
      Buffer2.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 7];
        if (first === void 0 || last === void 0) {
          boundsError(offset, this.length - 8);
        }
        const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24);
        return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);
      });
      Buffer2.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 7];
        if (first === void 0 || last === void 0) {
          boundsError(offset, this.length - 8);
        }
        const val = (first << 24) + // Overflow
        this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
        return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);
      });
      Buffer2.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, true, 23, 4);
      };
      Buffer2.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, false, 23, 4);
      };
      Buffer2.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, true, 52, 8);
      };
      Buffer2.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert)
          checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, false, 52, 8);
      };
      function checkInt(buf, value, offset, ext, max, min) {
        if (!Buffer2.isBuffer(buf))
          throw new TypeError('"buffer" argument must be a Buffer instance');
        if (value > max || value < min)
          throw new RangeError('"value" argument is out of bounds');
        if (offset + ext > buf.length)
          throw new RangeError("Index out of range");
      }
      Buffer2.prototype.writeUintLE = Buffer2.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength2, noAssert) {
        value = +value;
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert) {
          const maxBytes = Math.pow(2, 8 * byteLength2) - 1;
          checkInt(this, value, offset, byteLength2, maxBytes, 0);
        }
        let mul = 1;
        let i = 0;
        this[offset] = value & 255;
        while (++i < byteLength2 && (mul *= 256)) {
          this[offset + i] = value / mul & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeUintBE = Buffer2.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength2, noAssert) {
        value = +value;
        offset = offset >>> 0;
        byteLength2 = byteLength2 >>> 0;
        if (!noAssert) {
          const maxBytes = Math.pow(2, 8 * byteLength2) - 1;
          checkInt(this, value, offset, byteLength2, maxBytes, 0);
        }
        let i = byteLength2 - 1;
        let mul = 1;
        this[offset + i] = value & 255;
        while (--i >= 0 && (mul *= 256)) {
          this[offset + i] = value / mul & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeUint8 = Buffer2.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 1, 255, 0);
        this[offset] = value & 255;
        return offset + 1;
      };
      Buffer2.prototype.writeUint16LE = Buffer2.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 2, 65535, 0);
        this[offset] = value & 255;
        this[offset + 1] = value >>> 8;
        return offset + 2;
      };
      Buffer2.prototype.writeUint16BE = Buffer2.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 2, 65535, 0);
        this[offset] = value >>> 8;
        this[offset + 1] = value & 255;
        return offset + 2;
      };
      Buffer2.prototype.writeUint32LE = Buffer2.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 4, 4294967295, 0);
        this[offset + 3] = value >>> 24;
        this[offset + 2] = value >>> 16;
        this[offset + 1] = value >>> 8;
        this[offset] = value & 255;
        return offset + 4;
      };
      Buffer2.prototype.writeUint32BE = Buffer2.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 4, 4294967295, 0);
        this[offset] = value >>> 24;
        this[offset + 1] = value >>> 16;
        this[offset + 2] = value >>> 8;
        this[offset + 3] = value & 255;
        return offset + 4;
      };
      function wrtBigUInt64LE(buf, value, offset, min, max) {
        checkIntBI(value, min, max, buf, offset, 7);
        let lo = Number(value & BigInt(4294967295));
        buf[offset++] = lo;
        lo = lo >> 8;
        buf[offset++] = lo;
        lo = lo >> 8;
        buf[offset++] = lo;
        lo = lo >> 8;
        buf[offset++] = lo;
        let hi = Number(value >> BigInt(32) & BigInt(4294967295));
        buf[offset++] = hi;
        hi = hi >> 8;
        buf[offset++] = hi;
        hi = hi >> 8;
        buf[offset++] = hi;
        hi = hi >> 8;
        buf[offset++] = hi;
        return offset;
      }
      function wrtBigUInt64BE(buf, value, offset, min, max) {
        checkIntBI(value, min, max, buf, offset, 7);
        let lo = Number(value & BigInt(4294967295));
        buf[offset + 7] = lo;
        lo = lo >> 8;
        buf[offset + 6] = lo;
        lo = lo >> 8;
        buf[offset + 5] = lo;
        lo = lo >> 8;
        buf[offset + 4] = lo;
        let hi = Number(value >> BigInt(32) & BigInt(4294967295));
        buf[offset + 3] = hi;
        hi = hi >> 8;
        buf[offset + 2] = hi;
        hi = hi >> 8;
        buf[offset + 1] = hi;
        hi = hi >> 8;
        buf[offset] = hi;
        return offset + 8;
      }
      Buffer2.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {
        return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
      });
      Buffer2.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {
        return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
      });
      Buffer2.prototype.writeIntLE = function writeIntLE(value, offset, byteLength2, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) {
          const limit = Math.pow(2, 8 * byteLength2 - 1);
          checkInt(this, value, offset, byteLength2, limit - 1, -limit);
        }
        let i = 0;
        let mul = 1;
        let sub = 0;
        this[offset] = value & 255;
        while (++i < byteLength2 && (mul *= 256)) {
          if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
            sub = 1;
          }
          this[offset + i] = (value / mul >> 0) - sub & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeIntBE = function writeIntBE(value, offset, byteLength2, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) {
          const limit = Math.pow(2, 8 * byteLength2 - 1);
          checkInt(this, value, offset, byteLength2, limit - 1, -limit);
        }
        let i = byteLength2 - 1;
        let mul = 1;
        let sub = 0;
        this[offset + i] = value & 255;
        while (--i >= 0 && (mul *= 256)) {
          if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
            sub = 1;
          }
          this[offset + i] = (value / mul >> 0) - sub & 255;
        }
        return offset + byteLength2;
      };
      Buffer2.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 1, 127, -128);
        if (value < 0)
          value = 255 + value + 1;
        this[offset] = value & 255;
        return offset + 1;
      };
      Buffer2.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 2, 32767, -32768);
        this[offset] = value & 255;
        this[offset + 1] = value >>> 8;
        return offset + 2;
      };
      Buffer2.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 2, 32767, -32768);
        this[offset] = value >>> 8;
        this[offset + 1] = value & 255;
        return offset + 2;
      };
      Buffer2.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 4, 2147483647, -2147483648);
        this[offset] = value & 255;
        this[offset + 1] = value >>> 8;
        this[offset + 2] = value >>> 16;
        this[offset + 3] = value >>> 24;
        return offset + 4;
      };
      Buffer2.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert)
          checkInt(this, value, offset, 4, 2147483647, -2147483648);
        if (value < 0)
          value = 4294967295 + value + 1;
        this[offset] = value >>> 24;
        this[offset + 1] = value >>> 16;
        this[offset + 2] = value >>> 8;
        this[offset + 3] = value & 255;
        return offset + 4;
      };
      Buffer2.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {
        return wrtBigUInt64LE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      });
      Buffer2.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {
        return wrtBigUInt64BE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      });
      function checkIEEE754(buf, value, offset, ext, max, min) {
        if (offset + ext > buf.length)
          throw new RangeError("Index out of range");
        if (offset < 0)
          throw new RangeError("Index out of range");
      }
      function writeFloat(buf, value, offset, littleEndian, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) {
          checkIEEE754(buf, value, offset, 4, 34028234663852886e22, -34028234663852886e22);
        }
        ieee754.write(buf, value, offset, littleEndian, 23, 4);
        return offset + 4;
      }
      Buffer2.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
        return writeFloat(this, value, offset, true, noAssert);
      };
      Buffer2.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
        return writeFloat(this, value, offset, false, noAssert);
      };
      function writeDouble(buf, value, offset, littleEndian, noAssert) {
        value = +value;
        offset = offset >>> 0;
        if (!noAssert) {
          checkIEEE754(buf, value, offset, 8, 17976931348623157e292, -17976931348623157e292);
        }
        ieee754.write(buf, value, offset, littleEndian, 52, 8);
        return offset + 8;
      }
      Buffer2.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
        return writeDouble(this, value, offset, true, noAssert);
      };
      Buffer2.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
        return writeDouble(this, value, offset, false, noAssert);
      };
      Buffer2.prototype.copy = function copy(target, targetStart, start, end) {
        if (!Buffer2.isBuffer(target))
          throw new TypeError("argument should be a Buffer");
        if (!start)
          start = 0;
        if (!end && end !== 0)
          end = this.length;
        if (targetStart >= target.length)
          targetStart = target.length;
        if (!targetStart)
          targetStart = 0;
        if (end > 0 && end < start)
          end = start;
        if (end === start)
          return 0;
        if (target.length === 0 || this.length === 0)
          return 0;
        if (targetStart < 0) {
          throw new RangeError("targetStart out of bounds");
        }
        if (start < 0 || start >= this.length)
          throw new RangeError("Index out of range");
        if (end < 0)
          throw new RangeError("sourceEnd out of bounds");
        if (end > this.length)
          end = this.length;
        if (target.length - targetStart < end - start) {
          end = target.length - targetStart + start;
        }
        const len = end - start;
        if (this === target && typeof GlobalUint8Array.prototype.copyWithin === "function") {
          this.copyWithin(targetStart, start, end);
        } else {
          GlobalUint8Array.prototype.set.call(
            target,
            this.subarray(start, end),
            targetStart
          );
        }
        return len;
      };
      Buffer2.prototype.fill = function fill(val, start, end, encoding) {
        if (typeof val === "string") {
          if (typeof start === "string") {
            encoding = start;
            start = 0;
            end = this.length;
          } else if (typeof end === "string") {
            encoding = end;
            end = this.length;
          }
          if (encoding !== void 0 && typeof encoding !== "string") {
            throw new TypeError("encoding must be a string");
          }
          if (typeof encoding === "string" && !Buffer2.isEncoding(encoding)) {
            throw new TypeError("Unknown encoding: " + encoding);
          }
          if (val.length === 1) {
            const code = val.charCodeAt(0);
            if (encoding === "utf8" && code < 128 || encoding === "latin1") {
              val = code;
            }
          }
        } else if (typeof val === "number") {
          val = val & 255;
        } else if (typeof val === "boolean") {
          val = Number(val);
        }
        if (start < 0 || this.length < start || this.length < end) {
          throw new RangeError("Out of range index");
        }
        if (end <= start) {
          return this;
        }
        start = start >>> 0;
        end = end === void 0 ? this.length : end >>> 0;
        if (!val)
          val = 0;
        let i;
        if (typeof val === "number") {
          for (i = start; i < end; ++i) {
            this[i] = val;
          }
        } else {
          const bytes = Buffer2.isBuffer(val) ? val : Buffer2.from(val, encoding);
          const len = bytes.length;
          if (len === 0) {
            throw new TypeError('The value "' + val + '" is invalid for argument "value"');
          }
          for (i = 0; i < end - start; ++i) {
            this[i + start] = bytes[i % len];
          }
        }
        return this;
      };
      var errors = {};
      function E(sym, getMessage, Base) {
        errors[sym] = class NodeError extends Base {
          constructor() {
            super();
            Object.defineProperty(this, "message", {
              value: getMessage.apply(this, arguments),
              writable: true,
              configurable: true
            });
            this.name = `${this.name} [${sym}]`;
            this.stack;
            delete this.name;
          }
          get code() {
            return sym;
          }
          set code(value) {
            Object.defineProperty(this, "code", {
              configurable: true,
              enumerable: true,
              value,
              writable: true
            });
          }
          toString() {
            return `${this.name} [${sym}]: ${this.message}`;
          }
        };
      }
      E(
        "ERR_BUFFER_OUT_OF_BOUNDS",
        function(name) {
          if (name) {
            return `${name} is outside of buffer bounds`;
          }
          return "Attempt to access memory outside buffer bounds";
        },
        RangeError
      );
      E(
        "ERR_INVALID_ARG_TYPE",
        function(name, actual) {
          return `The "${name}" argument must be of type number. Received type ${typeof actual}`;
        },
        TypeError
      );
      E(
        "ERR_OUT_OF_RANGE",
        function(str, range, input) {
          let msg = `The value of "${str}" is out of range.`;
          let received = input;
          if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
            received = addNumericalSeparator(String(input));
          } else if (typeof input === "bigint") {
            received = String(input);
            if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {
              received = addNumericalSeparator(received);
            }
            received += "n";
          }
          msg += ` It must be ${range}. Received ${received}`;
          return msg;
        },
        RangeError
      );
      function addNumericalSeparator(val) {
        let res = "";
        let i = val.length;
        const start = val[0] === "-" ? 1 : 0;
        for (; i >= start + 4; i -= 3) {
          res = `_${val.slice(i - 3, i)}${res}`;
        }
        return `${val.slice(0, i)}${res}`;
      }
      function checkBounds(buf, offset, byteLength2) {
        validateNumber(offset, "offset");
        if (buf[offset] === void 0 || buf[offset + byteLength2] === void 0) {
          boundsError(offset, buf.length - (byteLength2 + 1));
        }
      }
      function checkIntBI(value, min, max, buf, offset, byteLength2) {
        if (value > max || value < min) {
          const n = typeof min === "bigint" ? "n" : "";
          let range;
          if (byteLength2 > 3) {
            if (min === 0 || min === BigInt(0)) {
              range = `>= 0${n} and < 2${n} ** ${(byteLength2 + 1) * 8}${n}`;
            } else {
              range = `>= -(2${n} ** ${(byteLength2 + 1) * 8 - 1}${n}) and < 2 ** ${(byteLength2 + 1) * 8 - 1}${n}`;
            }
          } else {
            range = `>= ${min}${n} and <= ${max}${n}`;
          }
          throw new errors.ERR_OUT_OF_RANGE("value", range, value);
        }
        checkBounds(buf, offset, byteLength2);
      }
      function validateNumber(value, name) {
        if (typeof value !== "number") {
          throw new errors.ERR_INVALID_ARG_TYPE(name, "number", value);
        }
      }
      function boundsError(value, length, type) {
        if (Math.floor(value) !== value) {
          validateNumber(value, type);
          throw new errors.ERR_OUT_OF_RANGE(type || "offset", "an integer", value);
        }
        if (length < 0) {
          throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();
        }
        throw new errors.ERR_OUT_OF_RANGE(
          type || "offset",
          `>= ${type ? 1 : 0} and <= ${length}`,
          value
        );
      }
      var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
      function base64clean(str) {
        str = str.split("=")[0];
        str = str.trim().replace(INVALID_BASE64_RE, "");
        if (str.length < 2)
          return "";
        while (str.length % 4 !== 0) {
          str = str + "=";
        }
        return str;
      }
      function utf8ToBytes(string, units) {
        units = units || Infinity;
        let codePoint;
        const length = string.length;
        let leadSurrogate = null;
        const bytes = [];
        for (let i = 0; i < length; ++i) {
          codePoint = string.charCodeAt(i);
          if (codePoint > 55295 && codePoint < 57344) {
            if (!leadSurrogate) {
              if (codePoint > 56319) {
                if ((units -= 3) > -1)
                  bytes.push(239, 191, 189);
                continue;
              } else if (i + 1 === length) {
                if ((units -= 3) > -1)
                  bytes.push(239, 191, 189);
                continue;
              }
              leadSurrogate = codePoint;
              continue;
            }
            if (codePoint < 56320) {
              if ((units -= 3) > -1)
                bytes.push(239, 191, 189);
              leadSurrogate = codePoint;
              continue;
            }
            codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
          } else if (leadSurrogate) {
            if ((units -= 3) > -1)
              bytes.push(239, 191, 189);
          }
          leadSurrogate = null;
          if (codePoint < 128) {
            if ((units -= 1) < 0)
              break;
            bytes.push(codePoint);
          } else if (codePoint < 2048) {
            if ((units -= 2) < 0)
              break;
            bytes.push(
              codePoint >> 6 | 192,
              codePoint & 63 | 128
            );
          } else if (codePoint < 65536) {
            if ((units -= 3) < 0)
              break;
            bytes.push(
              codePoint >> 12 | 224,
              codePoint >> 6 & 63 | 128,
              codePoint & 63 | 128
            );
          } else if (codePoint < 1114112) {
            if ((units -= 4) < 0)
              break;
            bytes.push(
              codePoint >> 18 | 240,
              codePoint >> 12 & 63 | 128,
              codePoint >> 6 & 63 | 128,
              codePoint & 63 | 128
            );
          } else {
            throw new Error("Invalid code point");
          }
        }
        return bytes;
      }
      function asciiToBytes(str) {
        const byteArray = [];
        for (let i = 0; i < str.length; ++i) {
          byteArray.push(str.charCodeAt(i) & 255);
        }
        return byteArray;
      }
      function utf16leToBytes(str, units) {
        let c, hi, lo;
        const byteArray = [];
        for (let i = 0; i < str.length; ++i) {
          if ((units -= 2) < 0)
            break;
          c = str.charCodeAt(i);
          hi = c >> 8;
          lo = c % 256;
          byteArray.push(lo);
          byteArray.push(hi);
        }
        return byteArray;
      }
      function base64ToBytes(str) {
        return base64.toByteArray(base64clean(str));
      }
      function blitBuffer(src, dst, offset, length) {
        let i;
        for (i = 0; i < length; ++i) {
          if (i + offset >= dst.length || i >= src.length)
            break;
          dst[i + offset] = src[i];
        }
        return i;
      }
      function isInstance(obj, type) {
        return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
      }
      function numberIsNaN(obj) {
        return obj !== obj;
      }
      var hexSliceLookupTable = function() {
        const alphabet = "0123456789abcdef";
        const table = new Array(256);
        for (let i = 0; i < 16; ++i) {
          const i16 = i * 16;
          for (let j = 0; j < 16; ++j) {
            table[i16 + j] = alphabet[i] + alphabet[j];
          }
        }
        return table;
      }();
      function defineBigIntMethod(fn) {
        return typeof BigInt === "undefined" ? BufferBigIntNotDefined : fn;
      }
      function BufferBigIntNotDefined() {
        throw new Error("BigInt not supported");
      }
    }
  });

  // node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js
  var require_browser = __commonJS({
    "node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js"(exports, module) {
      init_dist();
      var process = module.exports = {};
      var cachedSetTimeout;
      var cachedClearTimeout;
      function defaultSetTimout() {
        throw new Error("setTimeout has not been defined");
      }
      function defaultClearTimeout() {
        throw new Error("clearTimeout has not been defined");
      }
      (function() {
        try {
          if (typeof setTimeout === "function") {
            cachedSetTimeout = setTimeout;
          } else {
            cachedSetTimeout = defaultSetTimout;
          }
        } catch (e) {
          cachedSetTimeout = defaultSetTimout;
        }
        try {
          if (typeof clearTimeout === "function") {
            cachedClearTimeout = clearTimeout;
          } else {
            cachedClearTimeout = defaultClearTimeout;
          }
        } catch (e) {
          cachedClearTimeout = defaultClearTimeout;
        }
      })();
      function runTimeout(fun) {
        if (cachedSetTimeout === setTimeout) {
          return setTimeout(fun, 0);
        }
        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
          cachedSetTimeout = setTimeout;
          return setTimeout(fun, 0);
        }
        try {
          return cachedSetTimeout(fun, 0);
        } catch (e) {
          try {
            return cachedSetTimeout.call(null, fun, 0);
          } catch (e2) {
            return cachedSetTimeout.call(this, fun, 0);
          }
        }
      }
      function runClearTimeout(marker) {
        if (cachedClearTimeout === clearTimeout) {
          return clearTimeout(marker);
        }
        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
          cachedClearTimeout = clearTimeout;
          return clearTimeout(marker);
        }
        try {
          return cachedClearTimeout(marker);
        } catch (e) {
          try {
            return cachedClearTimeout.call(null, marker);
          } catch (e2) {
            return cachedClearTimeout.call(this, marker);
          }
        }
      }
      var queue = [];
      var draining = false;
      var currentQueue;
      var queueIndex = -1;
      function cleanUpNextTick() {
        if (!draining || !currentQueue) {
          return;
        }
        draining = false;
        if (currentQueue.length) {
          queue = currentQueue.concat(queue);
        } else {
          queueIndex = -1;
        }
        if (queue.length) {
          drainQueue();
        }
      }
      function drainQueue() {
        if (draining) {
          return;
        }
        var timeout = runTimeout(cleanUpNextTick);
        draining = true;
        var len = queue.length;
        while (len) {
          currentQueue = queue;
          queue = [];
          while (++queueIndex < len) {
            if (currentQueue) {
              currentQueue[queueIndex].run();
            }
          }
          queueIndex = -1;
          len = queue.length;
        }
        currentQueue = null;
        draining = false;
        runClearTimeout(timeout);
      }
      process.nextTick = function(fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
          for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
          }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
          runTimeout(drainQueue);
        }
      };
      function Item(fun, array) {
        this.fun = fun;
        this.array = array;
      }
      Item.prototype.run = function() {
        this.fun.apply(null, this.array);
      };
      process.title = "browser";
      process.browser = true;
      process.env = {};
      process.argv = [];
      process.version = "";
      process.versions = {};
      function noop() {
      }
      process.on = noop;
      process.addListener = noop;
      process.once = noop;
      process.off = noop;
      process.removeListener = noop;
      process.removeAllListeners = noop;
      process.emit = noop;
      process.prependListener = noop;
      process.prependOnceListener = noop;
      process.listeners = function(name) {
        return [];
      };
      process.binding = function(name) {
        throw new Error("process.binding is not supported");
      };
      process.cwd = function() {
        return "/";
      };
      process.chdir = function(dir) {
        throw new Error("process.chdir is not supported");
      };
      process.umask = function() {
        return 0;
      };
    }
  });

  // shims/dist/index.js
  var import_buffer_polyfill, import_process, o;
  var init_dist = __esm({
    "shims/dist/index.js"() {
      "use strict";
      import_buffer_polyfill = __toESM(require_buffer(), 1);
      import_process = __toESM(require_browser(), 1);
      o = globalThis || void 0 || self;
    }
  });

  // shims/banner/index.cjs
  var require_banner = __commonJS({
    "shims/banner/index.cjs"() {
      init_dist();
      globalThis.Buffer = globalThis.Buffer || import_buffer_polyfill.Buffer;
      globalThis.global = globalThis.global || o;
      globalThis.process = globalThis.process || import_process.default;
    }
  });
  require_banner();
})();
/*! Bundled license information:

ieee754/index.js:
  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)

buffer/index.js:
  (*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   *)
*/

import {
  require_jquery
} from "./chunk-M5YJSUDW.js";
import {
  __commonJS,
  __toESM,
  require_dist
} from "./chunk-T67JVKC2.js";

// node_modules/bootstrap-table/dist/bootstrap-table.min.js
var require_bootstrap_table_min = __commonJS({
  "node_modules/bootstrap-table/dist/bootstrap-table.min.js"(exports, module) {
    var import_dist = __toESM(require_dist());
    !function(t, e) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = e(require_jquery()) : "function" == typeof define && define.amd ? define(["jquery"], e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).BootstrapTable = e(t.jQuery);
    }(exports, function(t) {
      "use strict";
      function e(t2) {
        return e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
          return typeof t3;
        } : function(t3) {
          return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
        }, e(t2);
      }
      function i(t2, e2) {
        if (!(t2 instanceof e2))
          throw new TypeError("Cannot call a class as a function");
      }
      function n(t2, e2) {
        for (var i2 = 0; i2 < e2.length; i2++) {
          var n2 = e2[i2];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t2, (o2 = n2.key, r2 = void 0, "symbol" == typeof (r2 = function(t3, e3) {
            if ("object" != typeof t3 || null === t3)
              return t3;
            var i3 = t3[Symbol.toPrimitive];
            if (void 0 !== i3) {
              var n3 = i3.call(t3, e3 || "default");
              if ("object" != typeof n3)
                return n3;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === e3 ? String : Number)(t3);
          }(o2, "string")) ? r2 : String(r2)), n2);
        }
        var o2, r2;
      }
      function o(t2, e2, i2) {
        return e2 && n(t2.prototype, e2), i2 && n(t2, i2), Object.defineProperty(t2, "prototype", { writable: false }), t2;
      }
      function r(t2, e2) {
        return function(t3) {
          if (Array.isArray(t3))
            return t3;
        }(t2) || function(t3, e3) {
          var i2 = null == t3 ? null : "undefined" != typeof Symbol && t3[Symbol.iterator] || t3["@@iterator"];
          if (null != i2) {
            var n2, o2, r2, a2, s2 = [], l2 = true, c2 = false;
            try {
              if (r2 = (i2 = i2.call(t3)).next, 0 === e3) {
                if (Object(i2) !== i2)
                  return;
                l2 = false;
              } else
                for (; !(l2 = (n2 = r2.call(i2)).done) && (s2.push(n2.value), s2.length !== e3); l2 = true)
                  ;
            } catch (t4) {
              c2 = true, o2 = t4;
            } finally {
              try {
                if (!l2 && null != i2.return && (a2 = i2.return(), Object(a2) !== a2))
                  return;
              } finally {
                if (c2)
                  throw o2;
              }
            }
            return s2;
          }
        }(t2, e2) || s(t2, e2) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function a(t2) {
        return function(t3) {
          if (Array.isArray(t3))
            return l(t3);
        }(t2) || function(t3) {
          if ("undefined" != typeof Symbol && null != t3[Symbol.iterator] || null != t3["@@iterator"])
            return Array.from(t3);
        }(t2) || s(t2) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function s(t2, e2) {
        if (t2) {
          if ("string" == typeof t2)
            return l(t2, e2);
          var i2 = Object.prototype.toString.call(t2).slice(8, -1);
          return "Object" === i2 && t2.constructor && (i2 = t2.constructor.name), "Map" === i2 || "Set" === i2 ? Array.from(t2) : "Arguments" === i2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i2) ? l(t2, e2) : void 0;
        }
      }
      function l(t2, e2) {
        (null == e2 || e2 > t2.length) && (e2 = t2.length);
        for (var i2 = 0, n2 = new Array(e2); i2 < e2; i2++)
          n2[i2] = t2[i2];
        return n2;
      }
      function c(t2, e2) {
        var i2 = "undefined" != typeof Symbol && t2[Symbol.iterator] || t2["@@iterator"];
        if (!i2) {
          if (Array.isArray(t2) || (i2 = s(t2)) || e2 && t2 && "number" == typeof t2.length) {
            i2 && (t2 = i2);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= t2.length ? { done: true } : { done: false, value: t2[n2++] };
            }, e: function(t3) {
              throw t3;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var r2, a2 = true, l2 = false;
        return { s: function() {
          i2 = i2.call(t2);
        }, n: function() {
          var t3 = i2.next();
          return a2 = t3.done, t3;
        }, e: function(t3) {
          l2 = true, r2 = t3;
        }, f: function() {
          try {
            a2 || null == i2.return || i2.return();
          } finally {
            if (l2)
              throw r2;
          }
        } };
      }
      var h = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {}, u = function(t2) {
        return t2 && t2.Math == Math && t2;
      }, d = u("object" == typeof globalThis && globalThis) || u("object" == typeof window && window) || u("object" == typeof self && self) || u("object" == typeof h && h) || /* @__PURE__ */ function() {
        return this;
      }() || Function("return this")(), p = {}, f = function(t2) {
        try {
          return !!t2();
        } catch (t3) {
          return true;
        }
      }, g = !f(function() {
        return 7 != Object.defineProperty({}, 1, { get: function() {
          return 7;
        } })[1];
      }), v = !f(function() {
        var t2 = (function() {
        }).bind();
        return "function" != typeof t2 || t2.hasOwnProperty("prototype");
      }), b = v, m = Function.prototype.call, y = b ? m.bind(m) : function() {
        return m.apply(m, arguments);
      }, w = {}, S = {}.propertyIsEnumerable, x = Object.getOwnPropertyDescriptor, O = x && !S.call({ 1: 2 }, 1);
      w.f = O ? function(t2) {
        var e2 = x(this, t2);
        return !!e2 && e2.enumerable;
      } : S;
      var k, C, T = function(t2, e2) {
        return { enumerable: !(1 & t2), configurable: !(2 & t2), writable: !(4 & t2), value: e2 };
      }, P = v, I = Function.prototype, A = I.call, $ = P && I.bind.bind(A, A), R = P ? $ : function(t2) {
        return function() {
          return A.apply(t2, arguments);
        };
      }, E = R, j = E({}.toString), _ = E("".slice), F = function(t2) {
        return _(j(t2), 8, -1);
      }, N = f, D = F, V = Object, B = R("".split), L = N(function() {
        return !V("z").propertyIsEnumerable(0);
      }) ? function(t2) {
        return "String" == D(t2) ? B(t2, "") : V(t2);
      } : V, H = function(t2) {
        return null == t2;
      }, M = H, U = TypeError, z = function(t2) {
        if (M(t2))
          throw U("Can't call method on " + t2);
        return t2;
      }, q = L, W = z, G = function(t2) {
        return q(W(t2));
      }, K = "object" == typeof document && document.all, Y = { all: K, IS_HTMLDDA: void 0 === K && void 0 !== K }, J = Y.all, X = Y.IS_HTMLDDA ? function(t2) {
        return "function" == typeof t2 || t2 === J;
      } : function(t2) {
        return "function" == typeof t2;
      }, Q = X, Z = Y.all, tt = Y.IS_HTMLDDA ? function(t2) {
        return "object" == typeof t2 ? null !== t2 : Q(t2) || t2 === Z;
      } : function(t2) {
        return "object" == typeof t2 ? null !== t2 : Q(t2);
      }, et = d, it = X, nt = function(t2) {
        return it(t2) ? t2 : void 0;
      }, ot = function(t2, e2) {
        return arguments.length < 2 ? nt(et[t2]) : et[t2] && et[t2][e2];
      }, rt = R({}.isPrototypeOf), at = "undefined" != typeof navigator && String(navigator.userAgent) || "", st = d, lt = at, ct = st.process, ht = st.Deno, ut = ct && ct.versions || ht && ht.version, dt = ut && ut.v8;
      dt && (C = (k = dt.split("."))[0] > 0 && k[0] < 4 ? 1 : +(k[0] + k[1])), !C && lt && (!(k = lt.match(/Edge\/(\d+)/)) || k[1] >= 74) && (k = lt.match(/Chrome\/(\d+)/)) && (C = +k[1]);
      var pt = C, ft = pt, gt = f, vt = !!Object.getOwnPropertySymbols && !gt(function() {
        var t2 = Symbol();
        return !String(t2) || !(Object(t2) instanceof Symbol) || !Symbol.sham && ft && ft < 41;
      }), bt = vt && !Symbol.sham && "symbol" == typeof Symbol.iterator, mt = ot, yt = X, wt = rt, St = Object, xt = bt ? function(t2) {
        return "symbol" == typeof t2;
      } : function(t2) {
        var e2 = mt("Symbol");
        return yt(e2) && wt(e2.prototype, St(t2));
      }, Ot = String, kt = function(t2) {
        try {
          return Ot(t2);
        } catch (t3) {
          return "Object";
        }
      }, Ct = X, Tt = kt, Pt = TypeError, It = function(t2) {
        if (Ct(t2))
          return t2;
        throw Pt(Tt(t2) + " is not a function");
      }, At = It, $t = H, Rt = function(t2, e2) {
        var i2 = t2[e2];
        return $t(i2) ? void 0 : At(i2);
      }, Et = y, jt = X, _t = tt, Ft = TypeError, Nt = {}, Dt = { get exports() {
        return Nt;
      }, set exports(t2) {
        Nt = t2;
      } }, Vt = d, Bt = Object.defineProperty, Lt = function(t2, e2) {
        try {
          Bt(Vt, t2, { value: e2, configurable: true, writable: true });
        } catch (i2) {
          Vt[t2] = e2;
        }
        return e2;
      }, Ht = Lt, Mt = "__core-js_shared__", Ut = d[Mt] || Ht(Mt, {}), zt = Ut;
      (Dt.exports = function(t2, e2) {
        return zt[t2] || (zt[t2] = void 0 !== e2 ? e2 : {});
      })("versions", []).push({ version: "3.29.0", mode: "global", copyright: "© 2014-2023 Denis Pushkarev (zloirock.ru)", license: "https://github.com/zloirock/core-js/blob/v3.29.0/LICENSE", source: "https://github.com/zloirock/core-js" });
      var qt = z, Wt = Object, Gt = function(t2) {
        return Wt(qt(t2));
      }, Kt = Gt, Yt = R({}.hasOwnProperty), Jt = Object.hasOwn || function(t2, e2) {
        return Yt(Kt(t2), e2);
      }, Xt = R, Qt = 0, Zt = Math.random(), te = Xt(1 .toString), ee = function(t2) {
        return "Symbol(" + (void 0 === t2 ? "" : t2) + ")_" + te(++Qt + Zt, 36);
      }, ie = Nt, ne = Jt, oe = ee, re = vt, ae = bt, se = d.Symbol, le = ie("wks"), ce = ae ? se.for || se : se && se.withoutSetter || oe, he = function(t2) {
        return ne(le, t2) || (le[t2] = re && ne(se, t2) ? se[t2] : ce("Symbol." + t2)), le[t2];
      }, ue = y, de = tt, pe = xt, fe = Rt, ge = function(t2, e2) {
        var i2, n2;
        if ("string" === e2 && jt(i2 = t2.toString) && !_t(n2 = Et(i2, t2)))
          return n2;
        if (jt(i2 = t2.valueOf) && !_t(n2 = Et(i2, t2)))
          return n2;
        if ("string" !== e2 && jt(i2 = t2.toString) && !_t(n2 = Et(i2, t2)))
          return n2;
        throw Ft("Can't convert object to primitive value");
      }, ve = TypeError, be = he("toPrimitive"), me = function(t2, e2) {
        if (!de(t2) || pe(t2))
          return t2;
        var i2, n2 = fe(t2, be);
        if (n2) {
          if (void 0 === e2 && (e2 = "default"), i2 = ue(n2, t2, e2), !de(i2) || pe(i2))
            return i2;
          throw ve("Can't convert object to primitive value");
        }
        return void 0 === e2 && (e2 = "number"), ge(t2, e2);
      }, ye = me, we = xt, Se = function(t2) {
        var e2 = ye(t2, "string");
        return we(e2) ? e2 : e2 + "";
      }, xe = tt, Oe = d.document, ke = xe(Oe) && xe(Oe.createElement), Ce = function(t2) {
        return ke ? Oe.createElement(t2) : {};
      }, Te = Ce, Pe = !g && !f(function() {
        return 7 != Object.defineProperty(Te("div"), "a", { get: function() {
          return 7;
        } }).a;
      }), Ie = g, Ae = y, $e = w, Re = T, Ee = G, je = Se, _e = Jt, Fe = Pe, Ne = Object.getOwnPropertyDescriptor;
      p.f = Ie ? Ne : function(t2, e2) {
        if (t2 = Ee(t2), e2 = je(e2), Fe)
          try {
            return Ne(t2, e2);
          } catch (t3) {
          }
        if (_e(t2, e2))
          return Re(!Ae($e.f, t2, e2), t2[e2]);
      };
      var De = {}, Ve = g && f(function() {
        return 42 != Object.defineProperty(function() {
        }, "prototype", { value: 42, writable: false }).prototype;
      }), Be = tt, Le = String, He = TypeError, Me = function(t2) {
        if (Be(t2))
          return t2;
        throw He(Le(t2) + " is not an object");
      }, Ue = g, ze = Pe, qe = Ve, We = Me, Ge = Se, Ke = TypeError, Ye = Object.defineProperty, Je = Object.getOwnPropertyDescriptor, Xe = "enumerable", Qe = "configurable", Ze = "writable";
      De.f = Ue ? qe ? function(t2, e2, i2) {
        if (We(t2), e2 = Ge(e2), We(i2), "function" == typeof t2 && "prototype" === e2 && "value" in i2 && Ze in i2 && !i2.writable) {
          var n2 = Je(t2, e2);
          n2 && n2.writable && (t2[e2] = i2.value, i2 = { configurable: Qe in i2 ? i2.configurable : n2.configurable, enumerable: Xe in i2 ? i2.enumerable : n2.enumerable, writable: false });
        }
        return Ye(t2, e2, i2);
      } : Ye : function(t2, e2, i2) {
        if (We(t2), e2 = Ge(e2), We(i2), ze)
          try {
            return Ye(t2, e2, i2);
          } catch (t3) {
          }
        if ("get" in i2 || "set" in i2)
          throw Ke("Accessors not supported");
        return "value" in i2 && (t2[e2] = i2.value), t2;
      };
      var ti = De, ei = T, ii = g ? function(t2, e2, i2) {
        return ti.f(t2, e2, ei(1, i2));
      } : function(t2, e2, i2) {
        return t2[e2] = i2, t2;
      }, ni = {}, oi = { get exports() {
        return ni;
      }, set exports(t2) {
        ni = t2;
      } }, ri = g, ai = Jt, si = Function.prototype, li = ri && Object.getOwnPropertyDescriptor, ci = ai(si, "name"), hi = { EXISTS: ci, PROPER: ci && "something" === (function() {
      }).name, CONFIGURABLE: ci && (!ri || ri && li(si, "name").configurable) }, ui = X, di = Ut, pi = R(Function.toString);
      ui(di.inspectSource) || (di.inspectSource = function(t2) {
        return pi(t2);
      });
      var fi, gi, vi, bi = di.inspectSource, mi = X, yi = d.WeakMap, wi = mi(yi) && /native code/.test(String(yi)), Si = ee, xi = Nt("keys"), Oi = function(t2) {
        return xi[t2] || (xi[t2] = Si(t2));
      }, ki = {}, Ci = wi, Ti = d, Pi = tt, Ii = ii, Ai = Jt, $i = Ut, Ri = Oi, Ei = ki, ji = "Object already initialized", _i = Ti.TypeError, Fi = Ti.WeakMap;
      if (Ci || $i.state) {
        var Ni = $i.state || ($i.state = new Fi());
        Ni.get = Ni.get, Ni.has = Ni.has, Ni.set = Ni.set, fi = function(t2, e2) {
          if (Ni.has(t2))
            throw _i(ji);
          return e2.facade = t2, Ni.set(t2, e2), e2;
        }, gi = function(t2) {
          return Ni.get(t2) || {};
        }, vi = function(t2) {
          return Ni.has(t2);
        };
      } else {
        var Di = Ri("state");
        Ei[Di] = true, fi = function(t2, e2) {
          if (Ai(t2, Di))
            throw _i(ji);
          return e2.facade = t2, Ii(t2, Di, e2), e2;
        }, gi = function(t2) {
          return Ai(t2, Di) ? t2[Di] : {};
        }, vi = function(t2) {
          return Ai(t2, Di);
        };
      }
      var Vi = { set: fi, get: gi, has: vi, enforce: function(t2) {
        return vi(t2) ? gi(t2) : fi(t2, {});
      }, getterFor: function(t2) {
        return function(e2) {
          var i2;
          if (!Pi(e2) || (i2 = gi(e2)).type !== t2)
            throw _i("Incompatible receiver, " + t2 + " required");
          return i2;
        };
      } }, Bi = R, Li = f, Hi = X, Mi = Jt, Ui = g, zi = hi.CONFIGURABLE, qi = bi, Wi = Vi.enforce, Gi = Vi.get, Ki = String, Yi = Object.defineProperty, Ji = Bi("".slice), Xi = Bi("".replace), Qi = Bi([].join), Zi = Ui && !Li(function() {
        return 8 !== Yi(function() {
        }, "length", { value: 8 }).length;
      }), tn = String(String).split("String"), en = oi.exports = function(t2, e2, i2) {
        "Symbol(" === Ji(Ki(e2), 0, 7) && (e2 = "[" + Xi(Ki(e2), /^Symbol\(([^)]*)\)/, "$1") + "]"), i2 && i2.getter && (e2 = "get " + e2), i2 && i2.setter && (e2 = "set " + e2), (!Mi(t2, "name") || zi && t2.name !== e2) && (Ui ? Yi(t2, "name", { value: e2, configurable: true }) : t2.name = e2), Zi && i2 && Mi(i2, "arity") && t2.length !== i2.arity && Yi(t2, "length", { value: i2.arity });
        try {
          i2 && Mi(i2, "constructor") && i2.constructor ? Ui && Yi(t2, "prototype", { writable: false }) : t2.prototype && (t2.prototype = void 0);
        } catch (t3) {
        }
        var n2 = Wi(t2);
        return Mi(n2, "source") || (n2.source = Qi(tn, "string" == typeof e2 ? e2 : "")), t2;
      };
      Function.prototype.toString = en(function() {
        return Hi(this) && Gi(this).source || qi(this);
      }, "toString");
      var nn = X, on = De, rn = ni, an = Lt, sn = function(t2, e2, i2, n2) {
        n2 || (n2 = {});
        var o2 = n2.enumerable, r2 = void 0 !== n2.name ? n2.name : e2;
        if (nn(i2) && rn(i2, r2, n2), n2.global)
          o2 ? t2[e2] = i2 : an(e2, i2);
        else {
          try {
            n2.unsafe ? t2[e2] && (o2 = true) : delete t2[e2];
          } catch (t3) {
          }
          o2 ? t2[e2] = i2 : on.f(t2, e2, { value: i2, enumerable: false, configurable: !n2.nonConfigurable, writable: !n2.nonWritable });
        }
        return t2;
      }, ln = {}, cn = Math.ceil, hn = Math.floor, un = Math.trunc || function(t2) {
        var e2 = +t2;
        return (e2 > 0 ? hn : cn)(e2);
      }, dn = function(t2) {
        var e2 = +t2;
        return e2 != e2 || 0 === e2 ? 0 : un(e2);
      }, pn = dn, fn = Math.max, gn = Math.min, vn = function(t2, e2) {
        var i2 = pn(t2);
        return i2 < 0 ? fn(i2 + e2, 0) : gn(i2, e2);
      }, bn = dn, mn = Math.min, yn = function(t2) {
        return t2 > 0 ? mn(bn(t2), 9007199254740991) : 0;
      }, wn = yn, Sn = function(t2) {
        return wn(t2.length);
      }, xn = G, On = vn, kn = Sn, Cn = function(t2) {
        return function(e2, i2, n2) {
          var o2, r2 = xn(e2), a2 = kn(r2), s2 = On(n2, a2);
          if (t2 && i2 != i2) {
            for (; a2 > s2; )
              if ((o2 = r2[s2++]) != o2)
                return true;
          } else
            for (; a2 > s2; s2++)
              if ((t2 || s2 in r2) && r2[s2] === i2)
                return t2 || s2 || 0;
          return !t2 && -1;
        };
      }, Tn = { includes: Cn(true), indexOf: Cn(false) }, Pn = Jt, In = G, An = Tn.indexOf, $n = ki, Rn = R([].push), En = function(t2, e2) {
        var i2, n2 = In(t2), o2 = 0, r2 = [];
        for (i2 in n2)
          !Pn($n, i2) && Pn(n2, i2) && Rn(r2, i2);
        for (; e2.length > o2; )
          Pn(n2, i2 = e2[o2++]) && (~An(r2, i2) || Rn(r2, i2));
        return r2;
      }, jn = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"], _n = En, Fn = jn.concat("length", "prototype");
      ln.f = Object.getOwnPropertyNames || function(t2) {
        return _n(t2, Fn);
      };
      var Nn = {};
      Nn.f = Object.getOwnPropertySymbols;
      var Dn = ot, Vn = ln, Bn = Nn, Ln = Me, Hn = R([].concat), Mn = Dn("Reflect", "ownKeys") || function(t2) {
        var e2 = Vn.f(Ln(t2)), i2 = Bn.f;
        return i2 ? Hn(e2, i2(t2)) : e2;
      }, Un = Jt, zn = Mn, qn = p, Wn = De, Gn = f, Kn = X, Yn = /#|\.prototype\./, Jn = function(t2, e2) {
        var i2 = Qn[Xn(t2)];
        return i2 == to || i2 != Zn && (Kn(e2) ? Gn(e2) : !!e2);
      }, Xn = Jn.normalize = function(t2) {
        return String(t2).replace(Yn, ".").toLowerCase();
      }, Qn = Jn.data = {}, Zn = Jn.NATIVE = "N", to = Jn.POLYFILL = "P", eo = Jn, io = d, no = p.f, oo = ii, ro = sn, ao = Lt, so = function(t2, e2, i2) {
        for (var n2 = zn(e2), o2 = Wn.f, r2 = qn.f, a2 = 0; a2 < n2.length; a2++) {
          var s2 = n2[a2];
          Un(t2, s2) || i2 && Un(i2, s2) || o2(t2, s2, r2(e2, s2));
        }
      }, lo = eo, co = function(t2, e2) {
        var i2, n2, o2, r2, a2, s2 = t2.target, l2 = t2.global, c2 = t2.stat;
        if (i2 = l2 ? io : c2 ? io[s2] || ao(s2, {}) : (io[s2] || {}).prototype)
          for (n2 in e2) {
            if (r2 = e2[n2], o2 = t2.dontCallGetSet ? (a2 = no(i2, n2)) && a2.value : i2[n2], !lo(l2 ? n2 : s2 + (c2 ? "." : "#") + n2, t2.forced) && void 0 !== o2) {
              if (typeof r2 == typeof o2)
                continue;
              so(r2, o2);
            }
            (t2.sham || o2 && o2.sham) && oo(r2, "sham", true), ro(i2, n2, r2, t2);
          }
      }, ho = En, uo = jn, po = Object.keys || function(t2) {
        return ho(t2, uo);
      }, fo = g, go = R, vo = y, bo = f, mo = po, yo = Nn, wo = w, So = Gt, xo = L, Oo = Object.assign, ko = Object.defineProperty, Co = go([].concat), To = !Oo || bo(function() {
        if (fo && 1 !== Oo({ b: 1 }, Oo(ko({}, "a", { enumerable: true, get: function() {
          ko(this, "b", { value: 3, enumerable: false });
        } }), { b: 2 })).b)
          return true;
        var t2 = {}, e2 = {}, i2 = Symbol(), n2 = "abcdefghijklmnopqrst";
        return t2[i2] = 7, n2.split("").forEach(function(t3) {
          e2[t3] = t3;
        }), 7 != Oo({}, t2)[i2] || mo(Oo({}, e2)).join("") != n2;
      }) ? function(t2, e2) {
        for (var i2 = So(t2), n2 = arguments.length, o2 = 1, r2 = yo.f, a2 = wo.f; n2 > o2; )
          for (var s2, l2 = xo(arguments[o2++]), c2 = r2 ? Co(mo(l2), r2(l2)) : mo(l2), h2 = c2.length, u2 = 0; h2 > u2; )
            s2 = c2[u2++], fo && !vo(a2, l2, s2) || (i2[s2] = l2[s2]);
        return i2;
      } : Oo, Po = To;
      co({ target: "Object", stat: true, arity: 2, forced: Object.assign !== Po }, { assign: Po });
      var Io = {};
      Io[he("toStringTag")] = "z";
      var Ao = "[object z]" === String(Io), $o = Ao, Ro = X, Eo = F, jo = he("toStringTag"), _o = Object, Fo = "Arguments" == Eo(/* @__PURE__ */ function() {
        return arguments;
      }()), No = $o ? Eo : function(t2) {
        var e2, i2, n2;
        return void 0 === t2 ? "Undefined" : null === t2 ? "Null" : "string" == typeof (i2 = function(t3, e3) {
          try {
            return t3[e3];
          } catch (t4) {
          }
        }(e2 = _o(t2), jo)) ? i2 : Fo ? Eo(e2) : "Object" == (n2 = Eo(e2)) && Ro(e2.callee) ? "Arguments" : n2;
      }, Do = No, Vo = String, Bo = function(t2) {
        if ("Symbol" === Do(t2))
          throw TypeError("Cannot convert a Symbol value to a string");
        return Vo(t2);
      }, Lo = "	\n\v\f\r                　\u2028\u2029\uFEFF", Ho = z, Mo = Bo, Uo = Lo, zo = R("".replace), qo = RegExp("^[" + Uo + "]+"), Wo = RegExp("(^|[^" + Uo + "])[" + Uo + "]+$"), Go = function(t2) {
        return function(e2) {
          var i2 = Mo(Ho(e2));
          return 1 & t2 && (i2 = zo(i2, qo, "")), 2 & t2 && (i2 = zo(i2, Wo, "$1")), i2;
        };
      }, Ko = { start: Go(1), end: Go(2), trim: Go(3) }, Yo = hi.PROPER, Jo = f, Xo = Lo, Qo = Ko.trim;
      co({ target: "String", proto: true, forced: function(t2) {
        return Jo(function() {
          return !!Xo[t2]() || "​᠎" !== "​᠎"[t2]() || Yo && Xo[t2].name !== t2;
        });
      }("trim") }, { trim: function() {
        return Qo(this);
      } });
      var Zo = f, tr = function(t2, e2) {
        var i2 = [][t2];
        return !!i2 && Zo(function() {
          i2.call(null, e2 || function() {
            return 1;
          }, 1);
        });
      }, er = co, ir = L, nr = G, or = tr, rr = R([].join);
      er({ target: "Array", proto: true, forced: ir != Object || !or("join", ",") }, { join: function(t2) {
        return rr(nr(this), void 0 === t2 ? "," : t2);
      } });
      var ar = Me, sr = function() {
        var t2 = ar(this), e2 = "";
        return t2.hasIndices && (e2 += "d"), t2.global && (e2 += "g"), t2.ignoreCase && (e2 += "i"), t2.multiline && (e2 += "m"), t2.dotAll && (e2 += "s"), t2.unicode && (e2 += "u"), t2.unicodeSets && (e2 += "v"), t2.sticky && (e2 += "y"), e2;
      }, lr = f, cr = d.RegExp, hr = lr(function() {
        var t2 = cr("a", "y");
        return t2.lastIndex = 2, null != t2.exec("abcd");
      }), ur = hr || lr(function() {
        return !cr("a", "y").sticky;
      }), dr = { BROKEN_CARET: hr || lr(function() {
        var t2 = cr("^r", "gy");
        return t2.lastIndex = 2, null != t2.exec("str");
      }), MISSED_STICKY: ur, UNSUPPORTED_Y: hr }, pr = {}, fr = g, gr = Ve, vr = De, br = Me, mr = G, yr = po;
      pr.f = fr && !gr ? Object.defineProperties : function(t2, e2) {
        br(t2);
        for (var i2, n2 = mr(e2), o2 = yr(e2), r2 = o2.length, a2 = 0; r2 > a2; )
          vr.f(t2, i2 = o2[a2++], n2[i2]);
        return t2;
      };
      var wr, Sr = ot("document", "documentElement"), xr = Me, Or = pr, kr = jn, Cr = ki, Tr = Sr, Pr = Ce, Ir = Oi("IE_PROTO"), Ar = function() {
      }, $r = function(t2) {
        return "<script>" + t2 + "<\/script>";
      }, Rr = function(t2) {
        t2.write($r("")), t2.close();
        var e2 = t2.parentWindow.Object;
        return t2 = null, e2;
      }, Er = function() {
        try {
          wr = new ActiveXObject("htmlfile");
        } catch (t3) {
        }
        var t2, e2;
        Er = "undefined" != typeof document ? document.domain && wr ? Rr(wr) : ((e2 = Pr("iframe")).style.display = "none", Tr.appendChild(e2), e2.src = String("javascript:"), (t2 = e2.contentWindow.document).open(), t2.write($r("document.F=Object")), t2.close(), t2.F) : Rr(wr);
        for (var i2 = kr.length; i2--; )
          delete Er.prototype[kr[i2]];
        return Er();
      };
      Cr[Ir] = true;
      var jr = Object.create || function(t2, e2) {
        var i2;
        return null !== t2 ? (Ar.prototype = xr(t2), i2 = new Ar(), Ar.prototype = null, i2[Ir] = t2) : i2 = Er(), void 0 === e2 ? i2 : Or.f(i2, e2);
      }, _r = f, Fr = d.RegExp, Nr = _r(function() {
        var t2 = Fr(".", "s");
        return !(t2.dotAll && t2.exec("\n") && "s" === t2.flags);
      }), Dr = f, Vr = d.RegExp, Br = Dr(function() {
        var t2 = Vr("(?<a>b)", "g");
        return "b" !== t2.exec("b").groups.a || "bc" !== "b".replace(t2, "$<a>c");
      }), Lr = y, Hr = R, Mr = Bo, Ur = sr, zr = dr, qr = jr, Wr = Vi.get, Gr = Nr, Kr = Br, Yr = Nt("native-string-replace", String.prototype.replace), Jr = RegExp.prototype.exec, Xr = Jr, Qr = Hr("".charAt), Zr = Hr("".indexOf), ta = Hr("".replace), ea = Hr("".slice), ia = function() {
        var t2 = /a/, e2 = /b*/g;
        return Lr(Jr, t2, "a"), Lr(Jr, e2, "a"), 0 !== t2.lastIndex || 0 !== e2.lastIndex;
      }(), na = zr.BROKEN_CARET, oa = void 0 !== /()??/.exec("")[1];
      (ia || oa || na || Gr || Kr) && (Xr = function(t2) {
        var e2, i2, n2, o2, r2, a2, s2, l2 = this, c2 = Wr(l2), h2 = Mr(t2), u2 = c2.raw;
        if (u2)
          return u2.lastIndex = l2.lastIndex, e2 = Lr(Xr, u2, h2), l2.lastIndex = u2.lastIndex, e2;
        var d2 = c2.groups, p2 = na && l2.sticky, f2 = Lr(Ur, l2), g2 = l2.source, v2 = 0, b2 = h2;
        if (p2 && (f2 = ta(f2, "y", ""), -1 === Zr(f2, "g") && (f2 += "g"), b2 = ea(h2, l2.lastIndex), l2.lastIndex > 0 && (!l2.multiline || l2.multiline && "\n" !== Qr(h2, l2.lastIndex - 1)) && (g2 = "(?: " + g2 + ")", b2 = " " + b2, v2++), i2 = new RegExp("^(?:" + g2 + ")", f2)), oa && (i2 = new RegExp("^" + g2 + "$(?!\\s)", f2)), ia && (n2 = l2.lastIndex), o2 = Lr(Jr, p2 ? i2 : l2, b2), p2 ? o2 ? (o2.input = ea(o2.input, v2), o2[0] = ea(o2[0], v2), o2.index = l2.lastIndex, l2.lastIndex += o2[0].length) : l2.lastIndex = 0 : ia && o2 && (l2.lastIndex = l2.global ? o2.index + o2[0].length : n2), oa && o2 && o2.length > 1 && Lr(Yr, o2[0], i2, function() {
          for (r2 = 1; r2 < arguments.length - 2; r2++)
            void 0 === arguments[r2] && (o2[r2] = void 0);
        }), o2 && d2)
          for (o2.groups = a2 = qr(null), r2 = 0; r2 < d2.length; r2++)
            a2[(s2 = d2[r2])[0]] = o2[s2[1]];
        return o2;
      });
      var ra = Xr;
      co({ target: "RegExp", proto: true, forced: /./.exec !== ra }, { exec: ra });
      var aa = v, sa = Function.prototype, la = sa.apply, ca = sa.call, ha = "object" == typeof Reflect && Reflect.apply || (aa ? ca.bind(la) : function() {
        return ca.apply(la, arguments);
      }), ua = F, da = R, pa = function(t2) {
        if ("Function" === ua(t2))
          return da(t2);
      }, fa = pa, ga = sn, va = ra, ba = f, ma = he, ya = ii, wa = ma("species"), Sa = RegExp.prototype, xa = function(t2, e2, i2, n2) {
        var o2 = ma(t2), r2 = !ba(function() {
          var e3 = {};
          return e3[o2] = function() {
            return 7;
          }, 7 != ""[t2](e3);
        }), a2 = r2 && !ba(function() {
          var e3 = false, i3 = /a/;
          return "split" === t2 && ((i3 = {}).constructor = {}, i3.constructor[wa] = function() {
            return i3;
          }, i3.flags = "", i3[o2] = /./[o2]), i3.exec = function() {
            return e3 = true, null;
          }, i3[o2](""), !e3;
        });
        if (!r2 || !a2 || i2) {
          var s2 = fa(/./[o2]), l2 = e2(o2, ""[t2], function(t3, e3, i3, n3, o3) {
            var a3 = fa(t3), l3 = e3.exec;
            return l3 === va || l3 === Sa.exec ? r2 && !o3 ? { done: true, value: s2(e3, i3, n3) } : { done: true, value: a3(i3, e3, n3) } : { done: false };
          });
          ga(String.prototype, t2, l2[0]), ga(Sa, o2, l2[1]);
        }
        n2 && ya(Sa[o2], "sham", true);
      }, Oa = tt, ka = F, Ca = he("match"), Ta = function(t2) {
        var e2;
        return Oa(t2) && (void 0 !== (e2 = t2[Ca]) ? !!e2 : "RegExp" == ka(t2));
      }, Pa = R, Ia = f, Aa = X, $a = No, Ra = bi, Ea = function() {
      }, ja = [], _a = ot("Reflect", "construct"), Fa = /^\s*(?:class|function)\b/, Na = Pa(Fa.exec), Da = !Fa.exec(Ea), Va = function(t2) {
        if (!Aa(t2))
          return false;
        try {
          return _a(Ea, ja, t2), true;
        } catch (t3) {
          return false;
        }
      }, Ba = function(t2) {
        if (!Aa(t2))
          return false;
        switch ($a(t2)) {
          case "AsyncFunction":
          case "GeneratorFunction":
          case "AsyncGeneratorFunction":
            return false;
        }
        try {
          return Da || !!Na(Fa, Ra(t2));
        } catch (t3) {
          return true;
        }
      };
      Ba.sham = true;
      var La = !_a || Ia(function() {
        var t2;
        return Va(Va.call) || !Va(Object) || !Va(function() {
          t2 = true;
        }) || t2;
      }) ? Ba : Va, Ha = La, Ma = kt, Ua = TypeError, za = Me, qa = function(t2) {
        if (Ha(t2))
          return t2;
        throw Ua(Ma(t2) + " is not a constructor");
      }, Wa = H, Ga = he("species"), Ka = R, Ya = dn, Ja = Bo, Xa = z, Qa = Ka("".charAt), Za = Ka("".charCodeAt), ts = Ka("".slice), es = function(t2) {
        return function(e2, i2) {
          var n2, o2, r2 = Ja(Xa(e2)), a2 = Ya(i2), s2 = r2.length;
          return a2 < 0 || a2 >= s2 ? t2 ? "" : void 0 : (n2 = Za(r2, a2)) < 55296 || n2 > 56319 || a2 + 1 === s2 || (o2 = Za(r2, a2 + 1)) < 56320 || o2 > 57343 ? t2 ? Qa(r2, a2) : n2 : t2 ? ts(r2, a2, a2 + 2) : o2 - 56320 + (n2 - 55296 << 10) + 65536;
        };
      }, is = { codeAt: es(false), charAt: es(true) }.charAt, ns = function(t2, e2, i2) {
        return e2 + (i2 ? is(t2, e2).length : 1);
      }, os = Se, rs = De, as = T, ss = function(t2, e2, i2) {
        var n2 = os(e2);
        n2 in t2 ? rs.f(t2, n2, as(0, i2)) : t2[n2] = i2;
      }, ls = vn, cs = Sn, hs = ss, us = Array, ds = Math.max, ps = function(t2, e2, i2) {
        for (var n2 = cs(t2), o2 = ls(e2, n2), r2 = ls(void 0 === i2 ? n2 : i2, n2), a2 = us(ds(r2 - o2, 0)), s2 = 0; o2 < r2; o2++, s2++)
          hs(a2, s2, t2[o2]);
        return a2.length = s2, a2;
      }, fs = y, gs = Me, vs = X, bs = F, ms = ra, ys = TypeError, ws = function(t2, e2) {
        var i2 = t2.exec;
        if (vs(i2)) {
          var n2 = fs(i2, t2, e2);
          return null !== n2 && gs(n2), n2;
        }
        if ("RegExp" === bs(t2))
          return fs(ms, t2, e2);
        throw ys("RegExp#exec called on incompatible receiver");
      }, Ss = ha, xs = y, Os = R, ks = xa, Cs = Me, Ts = H, Ps = Ta, Is = z, As = function(t2, e2) {
        var i2, n2 = za(t2).constructor;
        return void 0 === n2 || Wa(i2 = za(n2)[Ga]) ? e2 : qa(i2);
      }, $s = ns, Rs = yn, Es = Bo, js = Rt, _s = ps, Fs = ws, Ns = ra, Ds = f, Vs = dr.UNSUPPORTED_Y, Bs = 4294967295, Ls = Math.min, Hs = [].push, Ms = Os(/./.exec), Us = Os(Hs), zs = Os("".slice), qs = !Ds(function() {
        var t2 = /(?:)/, e2 = t2.exec;
        t2.exec = function() {
          return e2.apply(this, arguments);
        };
        var i2 = "ab".split(t2);
        return 2 !== i2.length || "a" !== i2[0] || "b" !== i2[1];
      });
      ks("split", function(t2, e2, i2) {
        var n2;
        return n2 = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || ".".split(/()()/).length > 1 || "".split(/.?/).length ? function(t3, i3) {
          var n3 = Es(Is(this)), o2 = void 0 === i3 ? Bs : i3 >>> 0;
          if (0 === o2)
            return [];
          if (void 0 === t3)
            return [n3];
          if (!Ps(t3))
            return xs(e2, n3, t3, o2);
          for (var r2, a2, s2, l2 = [], c2 = (t3.ignoreCase ? "i" : "") + (t3.multiline ? "m" : "") + (t3.unicode ? "u" : "") + (t3.sticky ? "y" : ""), h2 = 0, u2 = new RegExp(t3.source, c2 + "g"); (r2 = xs(Ns, u2, n3)) && !((a2 = u2.lastIndex) > h2 && (Us(l2, zs(n3, h2, r2.index)), r2.length > 1 && r2.index < n3.length && Ss(Hs, l2, _s(r2, 1)), s2 = r2[0].length, h2 = a2, l2.length >= o2)); )
            u2.lastIndex === r2.index && u2.lastIndex++;
          return h2 === n3.length ? !s2 && Ms(u2, "") || Us(l2, "") : Us(l2, zs(n3, h2)), l2.length > o2 ? _s(l2, 0, o2) : l2;
        } : "0".split(void 0, 0).length ? function(t3, i3) {
          return void 0 === t3 && 0 === i3 ? [] : xs(e2, this, t3, i3);
        } : e2, [function(e3, i3) {
          var o2 = Is(this), r2 = Ts(e3) ? void 0 : js(e3, t2);
          return r2 ? xs(r2, e3, o2, i3) : xs(n2, Es(o2), e3, i3);
        }, function(t3, o2) {
          var r2 = Cs(this), a2 = Es(t3), s2 = i2(n2, r2, a2, o2, n2 !== e2);
          if (s2.done)
            return s2.value;
          var l2 = As(r2, RegExp), c2 = r2.unicode, h2 = (r2.ignoreCase ? "i" : "") + (r2.multiline ? "m" : "") + (r2.unicode ? "u" : "") + (Vs ? "g" : "y"), u2 = new l2(Vs ? "^(?:" + r2.source + ")" : r2, h2), d2 = void 0 === o2 ? Bs : o2 >>> 0;
          if (0 === d2)
            return [];
          if (0 === a2.length)
            return null === Fs(u2, a2) ? [a2] : [];
          for (var p2 = 0, f2 = 0, g2 = []; f2 < a2.length; ) {
            u2.lastIndex = Vs ? 0 : f2;
            var v2, b2 = Fs(u2, Vs ? zs(a2, f2) : a2);
            if (null === b2 || (v2 = Ls(Rs(u2.lastIndex + (Vs ? f2 : 0)), a2.length)) === p2)
              f2 = $s(a2, f2, c2);
            else {
              if (Us(g2, zs(a2, p2, f2)), g2.length === d2)
                return g2;
              for (var m2 = 1; m2 <= b2.length - 1; m2++)
                if (Us(g2, b2[m2]), g2.length === d2)
                  return g2;
              f2 = p2 = v2;
            }
          }
          return Us(g2, zs(a2, p2)), g2;
        }];
      }, !qs, Vs);
      var Ws = g, Gs = R, Ks = po, Ys = G, Js = Gs(w.f), Xs = Gs([].push), Qs = function(t2) {
        return function(e2) {
          for (var i2, n2 = Ys(e2), o2 = Ks(n2), r2 = o2.length, a2 = 0, s2 = []; r2 > a2; )
            i2 = o2[a2++], Ws && !Js(n2, i2) || Xs(s2, t2 ? [i2, n2[i2]] : n2[i2]);
          return s2;
        };
      }, Zs = { entries: Qs(true), values: Qs(false) }.entries;
      co({ target: "Object", stat: true }, { entries: function(t2) {
        return Zs(t2);
      } });
      var tl = he, el = jr, il = De.f, nl = tl("unscopables"), ol = Array.prototype;
      null == ol[nl] && il(ol, nl, { configurable: true, value: el(null) });
      var rl = function(t2) {
        ol[nl][t2] = true;
      }, al = Tn.includes, sl = rl;
      co({ target: "Array", proto: true, forced: f(function() {
        return !Array(1).includes();
      }) }, { includes: function(t2) {
        return al(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      } }), sl("includes");
      var ll = F, cl = Array.isArray || function(t2) {
        return "Array" == ll(t2);
      }, hl = TypeError, ul = function(t2) {
        if (t2 > 9007199254740991)
          throw hl("Maximum allowed index exceeded");
        return t2;
      }, dl = cl, pl = La, fl = tt, gl = he("species"), vl = Array, bl = function(t2) {
        var e2;
        return dl(t2) && (e2 = t2.constructor, (pl(e2) && (e2 === vl || dl(e2.prototype)) || fl(e2) && null === (e2 = e2[gl])) && (e2 = void 0)), void 0 === e2 ? vl : e2;
      }, ml = function(t2, e2) {
        return new (bl(t2))(0 === e2 ? 0 : e2);
      }, yl = f, wl = pt, Sl = he("species"), xl = function(t2) {
        return wl >= 51 || !yl(function() {
          var e2 = [];
          return (e2.constructor = {})[Sl] = function() {
            return { foo: 1 };
          }, 1 !== e2[t2](Boolean).foo;
        });
      }, Ol = co, kl = f, Cl = cl, Tl = tt, Pl = Gt, Il = Sn, Al = ul, $l = ss, Rl = ml, El = xl, jl = pt, _l = he("isConcatSpreadable"), Fl = jl >= 51 || !kl(function() {
        var t2 = [];
        return t2[_l] = false, t2.concat()[0] !== t2;
      }), Nl = function(t2) {
        if (!Tl(t2))
          return false;
        var e2 = t2[_l];
        return void 0 !== e2 ? !!e2 : Cl(t2);
      };
      Ol({ target: "Array", proto: true, arity: 1, forced: !Fl || !El("concat") }, { concat: function(t2) {
        var e2, i2, n2, o2, r2, a2 = Pl(this), s2 = Rl(a2, 0), l2 = 0;
        for (e2 = -1, n2 = arguments.length; e2 < n2; e2++)
          if (Nl(r2 = -1 === e2 ? a2 : arguments[e2]))
            for (o2 = Il(r2), Al(l2 + o2), i2 = 0; i2 < o2; i2++, l2++)
              i2 in r2 && $l(s2, l2, r2[i2]);
          else
            Al(l2 + 1), $l(s2, l2++, r2);
        return s2.length = l2, s2;
      } });
      var Dl = It, Vl = v, Bl = pa(pa.bind), Ll = function(t2, e2) {
        return Dl(t2), void 0 === e2 ? t2 : Vl ? Bl(t2, e2) : function() {
          return t2.apply(e2, arguments);
        };
      }, Hl = L, Ml = Gt, Ul = Sn, zl = ml, ql = R([].push), Wl = function(t2) {
        var e2 = 1 == t2, i2 = 2 == t2, n2 = 3 == t2, o2 = 4 == t2, r2 = 6 == t2, a2 = 7 == t2, s2 = 5 == t2 || r2;
        return function(l2, c2, h2, u2) {
          for (var d2, p2, f2 = Ml(l2), g2 = Hl(f2), v2 = Ll(c2, h2), b2 = Ul(g2), m2 = 0, y2 = u2 || zl, w2 = e2 ? y2(l2, b2) : i2 || a2 ? y2(l2, 0) : void 0; b2 > m2; m2++)
            if ((s2 || m2 in g2) && (p2 = v2(d2 = g2[m2], m2, f2), t2))
              if (e2)
                w2[m2] = p2;
              else if (p2)
                switch (t2) {
                  case 3:
                    return true;
                  case 5:
                    return d2;
                  case 6:
                    return m2;
                  case 2:
                    ql(w2, d2);
                }
              else
                switch (t2) {
                  case 4:
                    return false;
                  case 7:
                    ql(w2, d2);
                }
          return r2 ? -1 : n2 || o2 ? o2 : w2;
        };
      }, Gl = { forEach: Wl(0), map: Wl(1), filter: Wl(2), some: Wl(3), every: Wl(4), find: Wl(5), findIndex: Wl(6), filterReject: Wl(7) }, Kl = co, Yl = Gl.find, Jl = rl, Xl = "find", Ql = true;
      Xl in [] && Array(1).find(function() {
        Ql = false;
      }), Kl({ target: "Array", proto: true, forced: Ql }, { find: function(t2) {
        return Yl(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      } }), Jl(Xl);
      var Zl = No, tc = Ao ? {}.toString : function() {
        return "[object " + Zl(this) + "]";
      };
      Ao || sn(Object.prototype, "toString", tc, { unsafe: true });
      var ec = Ta, ic = TypeError, nc = function(t2) {
        if (ec(t2))
          throw ic("The method doesn't accept regular expressions");
        return t2;
      }, oc = he("match"), rc = function(t2) {
        var e2 = /./;
        try {
          "/./"[t2](e2);
        } catch (i2) {
          try {
            return e2[oc] = false, "/./"[t2](e2);
          } catch (t3) {
          }
        }
        return false;
      }, ac = co, sc = nc, lc = z, cc = Bo, hc = rc, uc = R("".indexOf);
      ac({ target: "String", proto: true, forced: !hc("includes") }, { includes: function(t2) {
        return !!~uc(cc(lc(this)), cc(sc(t2)), arguments.length > 1 ? arguments[1] : void 0);
      } });
      var dc = { CSSRuleList: 0, CSSStyleDeclaration: 0, CSSValueList: 0, ClientRectList: 0, DOMRectList: 0, DOMStringList: 0, DOMTokenList: 1, DataTransferItemList: 0, FileList: 0, HTMLAllCollection: 0, HTMLCollection: 0, HTMLFormElement: 0, HTMLSelectElement: 0, MediaList: 0, MimeTypeArray: 0, NamedNodeMap: 0, NodeList: 1, PaintRequestList: 0, Plugin: 0, PluginArray: 0, SVGLengthList: 0, SVGNumberList: 0, SVGPathSegList: 0, SVGPointList: 0, SVGStringList: 0, SVGTransformList: 0, SourceBufferList: 0, StyleSheetList: 0, TextTrackCueList: 0, TextTrackList: 0, TouchList: 0 }, pc = Ce("span").classList, fc = pc && pc.constructor && pc.constructor.prototype, gc = fc === Object.prototype ? void 0 : fc, vc = Gl.forEach, bc = tr("forEach") ? [].forEach : function(t2) {
        return vc(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      }, mc = d, yc = dc, wc = gc, Sc = bc, xc = ii, Oc = function(t2) {
        if (t2 && t2.forEach !== Sc)
          try {
            xc(t2, "forEach", Sc);
          } catch (e2) {
            t2.forEach = Sc;
          }
      };
      for (var kc in yc)
        yc[kc] && Oc(mc[kc] && mc[kc].prototype);
      Oc(wc);
      var Cc = d, Tc = f, Pc = Bo, Ic = Ko.trim, Ac = R("".charAt), $c = Cc.parseFloat, Rc = Cc.Symbol, Ec = Rc && Rc.iterator, jc = 1 / $c("	\n\v\f\r                　\u2028\u2029\uFEFF-0") != -1 / 0 || Ec && !Tc(function() {
        $c(Object(Ec));
      }) ? function(t2) {
        var e2 = Ic(Pc(t2)), i2 = $c(e2);
        return 0 === i2 && "-" == Ac(e2, 0) ? -0 : i2;
      } : $c;
      co({ global: true, forced: parseFloat != jc }, { parseFloat: jc });
      var _c = Gt, Fc = po;
      co({ target: "Object", stat: true, forced: f(function() {
        Fc(1);
      }) }, { keys: function(t2) {
        return Fc(_c(t2));
      } });
      var Nc = co, Dc = Tn.indexOf, Vc = tr, Bc = pa([].indexOf), Lc = !!Bc && 1 / Bc([1], 1, -0) < 0;
      Nc({ target: "Array", proto: true, forced: Lc || !Vc("indexOf") }, { indexOf: function(t2) {
        var e2 = arguments.length > 1 ? arguments[1] : void 0;
        return Lc ? Bc(this, t2, e2) || 0 : Dc(this, t2, e2);
      } });
      var Hc = kt, Mc = TypeError, Uc = function(t2, e2) {
        if (!delete t2[e2])
          throw Mc("Cannot delete property " + Hc(e2) + " of " + Hc(t2));
      }, zc = ps, qc = Math.floor, Wc = function(t2, e2) {
        var i2 = t2.length, n2 = qc(i2 / 2);
        return i2 < 8 ? Gc(t2, e2) : Kc(t2, Wc(zc(t2, 0, n2), e2), Wc(zc(t2, n2), e2), e2);
      }, Gc = function(t2, e2) {
        for (var i2, n2, o2 = t2.length, r2 = 1; r2 < o2; ) {
          for (n2 = r2, i2 = t2[r2]; n2 && e2(t2[n2 - 1], i2) > 0; )
            t2[n2] = t2[--n2];
          n2 !== r2++ && (t2[n2] = i2);
        }
        return t2;
      }, Kc = function(t2, e2, i2, n2) {
        for (var o2 = e2.length, r2 = i2.length, a2 = 0, s2 = 0; a2 < o2 || s2 < r2; )
          t2[a2 + s2] = a2 < o2 && s2 < r2 ? n2(e2[a2], i2[s2]) <= 0 ? e2[a2++] : i2[s2++] : a2 < o2 ? e2[a2++] : i2[s2++];
        return t2;
      }, Yc = Wc, Jc = at.match(/firefox\/(\d+)/i), Xc = !!Jc && +Jc[1], Qc = /MSIE|Trident/.test(at), Zc = at.match(/AppleWebKit\/(\d+)\./), th = !!Zc && +Zc[1], eh = co, ih = R, nh = It, oh = Gt, rh = Sn, ah = Uc, sh = Bo, lh = f, ch = Yc, hh = tr, uh = Xc, dh = Qc, ph = pt, fh = th, gh = [], vh = ih(gh.sort), bh = ih(gh.push), mh = lh(function() {
        gh.sort(void 0);
      }), yh = lh(function() {
        gh.sort(null);
      }), wh = hh("sort"), Sh = !lh(function() {
        if (ph)
          return ph < 70;
        if (!(uh && uh > 3)) {
          if (dh)
            return true;
          if (fh)
            return fh < 603;
          var t2, e2, i2, n2, o2 = "";
          for (t2 = 65; t2 < 76; t2++) {
            switch (e2 = String.fromCharCode(t2), t2) {
              case 66:
              case 69:
              case 70:
              case 72:
                i2 = 3;
                break;
              case 68:
              case 71:
                i2 = 4;
                break;
              default:
                i2 = 2;
            }
            for (n2 = 0; n2 < 47; n2++)
              gh.push({ k: e2 + n2, v: i2 });
          }
          for (gh.sort(function(t3, e3) {
            return e3.v - t3.v;
          }), n2 = 0; n2 < gh.length; n2++)
            e2 = gh[n2].k.charAt(0), o2.charAt(o2.length - 1) !== e2 && (o2 += e2);
          return "DGBEFHACIJK" !== o2;
        }
      });
      eh({ target: "Array", proto: true, forced: mh || !yh || !wh || !Sh }, { sort: function(t2) {
        void 0 !== t2 && nh(t2);
        var e2 = oh(this);
        if (Sh)
          return void 0 === t2 ? vh(e2) : vh(e2, t2);
        var i2, n2, o2 = [], r2 = rh(e2);
        for (n2 = 0; n2 < r2; n2++)
          n2 in e2 && bh(o2, e2[n2]);
        for (ch(o2, /* @__PURE__ */ function(t3) {
          return function(e3, i3) {
            return void 0 === i3 ? -1 : void 0 === e3 ? 1 : void 0 !== t3 ? +t3(e3, i3) || 0 : sh(e3) > sh(i3) ? 1 : -1;
          };
        }(t2)), i2 = rh(o2), n2 = 0; n2 < i2; )
          e2[n2] = o2[n2++];
        for (; n2 < r2; )
          ah(e2, n2++);
        return e2;
      } });
      var xh = R, Oh = Gt, kh = Math.floor, Ch = xh("".charAt), Th = xh("".replace), Ph = xh("".slice), Ih = /\$([$&'`]|\d{1,2}|<[^>]*>)/g, Ah = /\$([$&'`]|\d{1,2})/g, $h = ha, Rh = y, Eh = R, jh = xa, _h = f, Fh = Me, Nh = X, Dh = H, Vh = dn, Bh = yn, Lh = Bo, Hh = z, Mh = ns, Uh = Rt, zh = function(t2, e2, i2, n2, o2, r2) {
        var a2 = i2 + t2.length, s2 = n2.length, l2 = Ah;
        return void 0 !== o2 && (o2 = Oh(o2), l2 = Ih), Th(r2, l2, function(r3, l3) {
          var c2;
          switch (Ch(l3, 0)) {
            case "$":
              return "$";
            case "&":
              return t2;
            case "`":
              return Ph(e2, 0, i2);
            case "'":
              return Ph(e2, a2);
            case "<":
              c2 = o2[Ph(l3, 1, -1)];
              break;
            default:
              var h2 = +l3;
              if (0 === h2)
                return r3;
              if (h2 > s2) {
                var u2 = kh(h2 / 10);
                return 0 === u2 ? r3 : u2 <= s2 ? void 0 === n2[u2 - 1] ? Ch(l3, 1) : n2[u2 - 1] + Ch(l3, 1) : r3;
              }
              c2 = n2[h2 - 1];
          }
          return void 0 === c2 ? "" : c2;
        });
      }, qh = ws, Wh = he("replace"), Gh = Math.max, Kh = Math.min, Yh = Eh([].concat), Jh = Eh([].push), Xh = Eh("".indexOf), Qh = Eh("".slice), Zh = "$0" === "a".replace(/./, "$0"), tu = !!/./[Wh] && "" === /./[Wh]("a", "$0");
      jh("replace", function(t2, e2, i2) {
        var n2 = tu ? "$" : "$0";
        return [function(t3, i3) {
          var n3 = Hh(this), o2 = Dh(t3) ? void 0 : Uh(t3, Wh);
          return o2 ? Rh(o2, t3, n3, i3) : Rh(e2, Lh(n3), t3, i3);
        }, function(t3, o2) {
          var r2 = Fh(this), a2 = Lh(t3);
          if ("string" == typeof o2 && -1 === Xh(o2, n2) && -1 === Xh(o2, "$<")) {
            var s2 = i2(e2, r2, a2, o2);
            if (s2.done)
              return s2.value;
          }
          var l2 = Nh(o2);
          l2 || (o2 = Lh(o2));
          var c2 = r2.global;
          if (c2) {
            var h2 = r2.unicode;
            r2.lastIndex = 0;
          }
          for (var u2 = []; ; ) {
            var d2 = qh(r2, a2);
            if (null === d2)
              break;
            if (Jh(u2, d2), !c2)
              break;
            "" === Lh(d2[0]) && (r2.lastIndex = Mh(a2, Bh(r2.lastIndex), h2));
          }
          for (var p2, f2 = "", g2 = 0, v2 = 0; v2 < u2.length; v2++) {
            for (var b2 = Lh((d2 = u2[v2])[0]), m2 = Gh(Kh(Vh(d2.index), a2.length), 0), y2 = [], w2 = 1; w2 < d2.length; w2++)
              Jh(y2, void 0 === (p2 = d2[w2]) ? p2 : String(p2));
            var S2 = d2.groups;
            if (l2) {
              var x2 = Yh([b2], y2, m2, a2);
              void 0 !== S2 && Jh(x2, S2);
              var O2 = Lh($h(o2, void 0, x2));
            } else
              O2 = zh(b2, a2, m2, y2, S2, o2);
            m2 >= g2 && (f2 += Qh(a2, g2, m2) + O2, g2 = m2 + b2.length);
          }
          return f2 + Qh(a2, g2);
        }];
      }, !!_h(function() {
        var t2 = /./;
        return t2.exec = function() {
          var t3 = [];
          return t3.groups = { a: "7" }, t3;
        }, "7" !== "".replace(t2, "$<a>");
      }) || !Zh || tu);
      var eu = Gl.filter;
      co({ target: "Array", proto: true, forced: !xl("filter") }, { filter: function(t2) {
        return eu(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      } });
      var iu = Object.is || function(t2, e2) {
        return t2 === e2 ? 0 !== t2 || 1 / t2 == 1 / e2 : t2 != t2 && e2 != e2;
      }, nu = y, ou = Me, ru = H, au = z, su = iu, lu = Bo, cu = Rt, hu = ws;
      xa("search", function(t2, e2, i2) {
        return [function(e3) {
          var i3 = au(this), n2 = ru(e3) ? void 0 : cu(e3, t2);
          return n2 ? nu(n2, e3, i3) : new RegExp(e3)[t2](lu(i3));
        }, function(t3) {
          var n2 = ou(this), o2 = lu(t3), r2 = i2(e2, n2, o2);
          if (r2.done)
            return r2.value;
          var a2 = n2.lastIndex;
          su(a2, 0) || (n2.lastIndex = 0);
          var s2 = hu(n2, o2);
          return su(n2.lastIndex, a2) || (n2.lastIndex = a2), null === s2 ? -1 : s2.index;
        }];
      });
      var uu = d, du = f, pu = R, fu = Bo, gu = Ko.trim, vu = Lo, bu = uu.parseInt, mu = uu.Symbol, yu = mu && mu.iterator, wu = /^[+-]?0x/i, Su = pu(wu.exec), xu = 8 !== bu(vu + "08") || 22 !== bu(vu + "0x16") || yu && !du(function() {
        bu(Object(yu));
      }) ? function(t2, e2) {
        var i2 = gu(fu(t2));
        return bu(i2, e2 >>> 0 || (Su(wu, i2) ? 16 : 10));
      } : bu;
      co({ global: true, forced: parseInt != xu }, { parseInt: xu });
      var Ou = Gl.map;
      co({ target: "Array", proto: true, forced: !xl("map") }, { map: function(t2) {
        return Ou(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      } });
      var ku = co, Cu = Gl.findIndex, Tu = rl, Pu = "findIndex", Iu = true;
      Pu in [] && Array(1).findIndex(function() {
        Iu = false;
      }), ku({ target: "Array", proto: true, forced: Iu }, { findIndex: function(t2) {
        return Cu(this, t2, arguments.length > 1 ? arguments[1] : void 0);
      } }), Tu(Pu);
      var Au = R, $u = It, Ru = X, Eu = String, ju = TypeError, _u = function(t2, e2, i2) {
        try {
          return Au($u(Object.getOwnPropertyDescriptor(t2, e2)[i2]));
        } catch (t3) {
        }
      }, Fu = Me, Nu = function(t2) {
        if ("object" == typeof t2 || Ru(t2))
          return t2;
        throw ju("Can't set " + Eu(t2) + " as a prototype");
      }, Du = Object.setPrototypeOf || ("__proto__" in {} ? function() {
        var t2, e2 = false, i2 = {};
        try {
          (t2 = _u(Object.prototype, "__proto__", "set"))(i2, []), e2 = i2 instanceof Array;
        } catch (t3) {
        }
        return function(i3, n2) {
          return Fu(i3), Nu(n2), e2 ? t2(i3, n2) : i3.__proto__ = n2, i3;
        };
      }() : void 0), Vu = X, Bu = tt, Lu = Du, Hu = function(t2, e2, i2) {
        var n2, o2;
        return Lu && Vu(n2 = e2.constructor) && n2 !== i2 && Bu(o2 = n2.prototype) && o2 !== i2.prototype && Lu(t2, o2), t2;
      }, Mu = y, Uu = Jt, zu = rt, qu = sr, Wu = RegExp.prototype, Gu = function(t2) {
        var e2 = t2.flags;
        return void 0 !== e2 || "flags" in Wu || Uu(t2, "flags") || !zu(Wu, t2) ? e2 : Mu(qu, t2);
      }, Ku = De.f, Yu = ni, Ju = De, Xu = ot, Qu = function(t2, e2, i2) {
        return i2.get && Yu(i2.get, e2, { getter: true }), i2.set && Yu(i2.set, e2, { setter: true }), Ju.f(t2, e2, i2);
      }, Zu = g, td = he("species"), ed = g, id = d, nd = R, od = eo, rd = Hu, ad = ii, sd = ln.f, ld = rt, cd = Ta, hd = Bo, ud = Gu, dd = dr, pd = function(t2, e2, i2) {
        i2 in t2 || Ku(t2, i2, { configurable: true, get: function() {
          return e2[i2];
        }, set: function(t3) {
          e2[i2] = t3;
        } });
      }, fd = sn, gd = f, vd = Jt, bd = Vi.enforce, md = function(t2) {
        var e2 = Xu(t2);
        Zu && e2 && !e2[td] && Qu(e2, td, { configurable: true, get: function() {
          return this;
        } });
      }, yd = Nr, wd = Br, Sd = he("match"), xd = id.RegExp, Od = xd.prototype, kd = id.SyntaxError, Cd = nd(Od.exec), Td = nd("".charAt), Pd = nd("".replace), Id = nd("".indexOf), Ad = nd("".slice), $d = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/, Rd = /a/g, Ed = /a/g, jd = new xd(Rd) !== Rd, _d = dd.MISSED_STICKY, Fd = dd.UNSUPPORTED_Y, Nd = ed && (!jd || _d || yd || wd || gd(function() {
        return Ed[Sd] = false, xd(Rd) != Rd || xd(Ed) == Ed || "/a/i" != xd(Rd, "i");
      }));
      if (od("RegExp", Nd)) {
        for (var Dd = function(t2, e2) {
          var i2, n2, o2, r2, a2, s2, l2 = ld(Od, this), c2 = cd(t2), h2 = void 0 === e2, u2 = [], d2 = t2;
          if (!l2 && c2 && h2 && t2.constructor === Dd)
            return t2;
          if ((c2 || ld(Od, t2)) && (t2 = t2.source, h2 && (e2 = ud(d2))), t2 = void 0 === t2 ? "" : hd(t2), e2 = void 0 === e2 ? "" : hd(e2), d2 = t2, yd && "dotAll" in Rd && (n2 = !!e2 && Id(e2, "s") > -1) && (e2 = Pd(e2, /s/g, "")), i2 = e2, _d && "sticky" in Rd && (o2 = !!e2 && Id(e2, "y") > -1) && Fd && (e2 = Pd(e2, /y/g, "")), wd && (r2 = function(t3) {
            for (var e3, i3 = t3.length, n3 = 0, o3 = "", r3 = [], a3 = {}, s3 = false, l3 = false, c3 = 0, h3 = ""; n3 <= i3; n3++) {
              if ("\\" === (e3 = Td(t3, n3)))
                e3 += Td(t3, ++n3);
              else if ("]" === e3)
                s3 = false;
              else if (!s3)
                switch (true) {
                  case "[" === e3:
                    s3 = true;
                    break;
                  case "(" === e3:
                    Cd($d, Ad(t3, n3 + 1)) && (n3 += 2, l3 = true), o3 += e3, c3++;
                    continue;
                  case (">" === e3 && l3):
                    if ("" === h3 || vd(a3, h3))
                      throw new kd("Invalid capture group name");
                    a3[h3] = true, r3[r3.length] = [h3, c3], l3 = false, h3 = "";
                    continue;
                }
              l3 ? h3 += e3 : o3 += e3;
            }
            return [o3, r3];
          }(t2), t2 = r2[0], u2 = r2[1]), a2 = rd(xd(t2, e2), l2 ? this : Od, Dd), (n2 || o2 || u2.length) && (s2 = bd(a2), n2 && (s2.dotAll = true, s2.raw = Dd(function(t3) {
            for (var e3, i3 = t3.length, n3 = 0, o3 = "", r3 = false; n3 <= i3; n3++)
              "\\" !== (e3 = Td(t3, n3)) ? r3 || "." !== e3 ? ("[" === e3 ? r3 = true : "]" === e3 && (r3 = false), o3 += e3) : o3 += "[\\s\\S]" : o3 += e3 + Td(t3, ++n3);
            return o3;
          }(t2), i2)), o2 && (s2.sticky = true), u2.length && (s2.groups = u2)), t2 !== d2)
            try {
              ad(a2, "source", "" === d2 ? "(?:)" : d2);
            } catch (t3) {
            }
          return a2;
        }, Vd = sd(xd), Bd = 0; Vd.length > Bd; )
          pd(Dd, xd, Vd[Bd++]);
        Od.constructor = Dd, Dd.prototype = Od, fd(id, "RegExp", Dd, { constructor: true });
      }
      md("RegExp");
      var Ld = hi.PROPER, Hd = sn, Md = Me, Ud = Bo, zd = f, qd = Gu, Wd = "toString", Gd = RegExp.prototype.toString, Kd = zd(function() {
        return "/a/b" != Gd.call({ source: "a", flags: "b" });
      }), Yd = Ld && Gd.name != Wd;
      (Kd || Yd) && Hd(RegExp.prototype, Wd, function() {
        var t2 = Md(this);
        return "/" + Ud(t2.source) + "/" + Ud(qd(t2));
      }, { unsafe: true });
      var Jd = R([].slice), Xd = co, Qd = cl, Zd = La, tp = tt, ep = vn, ip = Sn, np = G, op = ss, rp = he, ap = Jd, sp = xl("slice"), lp = rp("species"), cp = Array, hp = Math.max;
      Xd({ target: "Array", proto: true, forced: !sp }, { slice: function(t2, e2) {
        var i2, n2, o2, r2 = np(this), a2 = ip(r2), s2 = ep(t2, a2), l2 = ep(void 0 === e2 ? a2 : e2, a2);
        if (Qd(r2) && (i2 = r2.constructor, (Zd(i2) && (i2 === cp || Qd(i2.prototype)) || tp(i2) && null === (i2 = i2[lp])) && (i2 = void 0), i2 === cp || void 0 === i2))
          return ap(r2, s2, l2);
        for (n2 = new (void 0 === i2 ? cp : i2)(hp(l2 - s2, 0)), o2 = 0; s2 < l2; s2++, o2++)
          s2 in r2 && op(n2, o2, r2[s2]);
        return n2.length = o2, n2;
      } });
      var up, dp, pp, fp = {}, gp = !f(function() {
        function t2() {
        }
        return t2.prototype.constructor = null, Object.getPrototypeOf(new t2()) !== t2.prototype;
      }), vp = Jt, bp = X, mp = Gt, yp = gp, wp = Oi("IE_PROTO"), Sp = Object, xp = Sp.prototype, Op = yp ? Sp.getPrototypeOf : function(t2) {
        var e2 = mp(t2);
        if (vp(e2, wp))
          return e2[wp];
        var i2 = e2.constructor;
        return bp(i2) && e2 instanceof i2 ? i2.prototype : e2 instanceof Sp ? xp : null;
      }, kp = f, Cp = X, Tp = tt, Pp = Op, Ip = sn, Ap = he("iterator"), $p = false;
      [].keys && ("next" in (pp = [].keys()) ? (dp = Pp(Pp(pp))) !== Object.prototype && (up = dp) : $p = true);
      var Rp = !Tp(up) || kp(function() {
        var t2 = {};
        return up[Ap].call(t2) !== t2;
      });
      Rp && (up = {}), Cp(up[Ap]) || Ip(up, Ap, function() {
        return this;
      });
      var Ep = { IteratorPrototype: up, BUGGY_SAFARI_ITERATORS: $p }, jp = De.f, _p = Jt, Fp = he("toStringTag"), Np = function(t2, e2, i2) {
        t2 && !i2 && (t2 = t2.prototype), t2 && !_p(t2, Fp) && jp(t2, Fp, { configurable: true, value: e2 });
      }, Dp = Ep.IteratorPrototype, Vp = jr, Bp = T, Lp = Np, Hp = fp, Mp = function() {
        return this;
      }, Up = co, zp = y, qp = X, Wp = function(t2, e2, i2, n2) {
        var o2 = e2 + " Iterator";
        return t2.prototype = Vp(Dp, { next: Bp(+!n2, i2) }), Lp(t2, o2, false), Hp[o2] = Mp, t2;
      }, Gp = Op, Kp = Du, Yp = Np, Jp = ii, Xp = sn, Qp = fp, Zp = hi.PROPER, tf = hi.CONFIGURABLE, ef = Ep.IteratorPrototype, nf = Ep.BUGGY_SAFARI_ITERATORS, of = he("iterator"), rf = "keys", af = "values", sf = "entries", lf = function() {
        return this;
      }, cf = G, hf = rl, uf = fp, df = Vi, pf = De.f, ff = function(t2, e2, i2, n2, o2, r2, a2) {
        Wp(i2, e2, n2);
        var s2, l2, c2, h2 = function(t3) {
          if (t3 === o2 && g2)
            return g2;
          if (!nf && t3 in p2)
            return p2[t3];
          switch (t3) {
            case rf:
            case af:
            case sf:
              return function() {
                return new i2(this, t3);
              };
          }
          return function() {
            return new i2(this);
          };
        }, u2 = e2 + " Iterator", d2 = false, p2 = t2.prototype, f2 = p2[of] || p2["@@iterator"] || o2 && p2[o2], g2 = !nf && f2 || h2(o2), v2 = "Array" == e2 && p2.entries || f2;
        if (v2 && (s2 = Gp(v2.call(new t2()))) !== Object.prototype && s2.next && (Gp(s2) !== ef && (Kp ? Kp(s2, ef) : qp(s2[of]) || Xp(s2, of, lf)), Yp(s2, u2, true)), Zp && o2 == af && f2 && f2.name !== af && (tf ? Jp(p2, "name", af) : (d2 = true, g2 = function() {
          return zp(f2, this);
        })), o2)
          if (l2 = { values: h2(af), keys: r2 ? g2 : h2(rf), entries: h2(sf) }, a2)
            for (c2 in l2)
              (nf || d2 || !(c2 in p2)) && Xp(p2, c2, l2[c2]);
          else
            Up({ target: e2, proto: true, forced: nf || d2 }, l2);
        return p2[of] !== g2 && Xp(p2, of, g2, { name: o2 }), Qp[e2] = g2, l2;
      }, gf = function(t2, e2) {
        return { value: t2, done: e2 };
      }, vf = g, bf = "Array Iterator", mf = df.set, yf = df.getterFor(bf), wf = ff(Array, "Array", function(t2, e2) {
        mf(this, { type: bf, target: cf(t2), index: 0, kind: e2 });
      }, function() {
        var t2 = yf(this), e2 = t2.target, i2 = t2.kind, n2 = t2.index++;
        return !e2 || n2 >= e2.length ? (t2.target = void 0, gf(void 0, true)) : gf("keys" == i2 ? n2 : "values" == i2 ? e2[n2] : [n2, e2[n2]], false);
      }, "values"), Sf = uf.Arguments = uf.Array;
      if (hf("keys"), hf("values"), hf("entries"), vf && "values" !== Sf.name)
        try {
          pf(Sf, "name", { value: "values" });
        } catch (t2) {
        }
      var xf = d, Of = dc, kf = gc, Cf = wf, Tf = ii, Pf = he, If = Pf("iterator"), Af = Pf("toStringTag"), $f = Cf.values, Rf = function(t2, e2) {
        if (t2) {
          if (t2[If] !== $f)
            try {
              Tf(t2, If, $f);
            } catch (e3) {
              t2[If] = $f;
            }
          if (t2[Af] || Tf(t2, Af, e2), Of[e2]) {
            for (var i2 in Cf)
              if (t2[i2] !== Cf[i2])
                try {
                  Tf(t2, i2, Cf[i2]);
                } catch (e3) {
                  t2[i2] = Cf[i2];
                }
          }
        }
      };
      for (var Ef in Of)
        Rf(xf[Ef] && xf[Ef].prototype, Ef);
      Rf(kf, "DOMTokenList");
      var jf = g, _f = cl, Ff = TypeError, Nf = Object.getOwnPropertyDescriptor, Df = jf && !function() {
        if (void 0 !== this)
          return true;
        try {
          Object.defineProperty([], "length", { writable: false }).length = 1;
        } catch (t2) {
          return t2 instanceof TypeError;
        }
      }(), Vf = co, Bf = Gt, Lf = vn, Hf = dn, Mf = Sn, Uf = Df ? function(t2, e2) {
        if (_f(t2) && !Nf(t2, "length").writable)
          throw Ff("Cannot set read only .length");
        return t2.length = e2;
      } : function(t2, e2) {
        return t2.length = e2;
      }, zf = ul, qf = ml, Wf = ss, Gf = Uc, Kf = xl("splice"), Yf = Math.max, Jf = Math.min;
      Vf({ target: "Array", proto: true, forced: !Kf }, { splice: function(t2, e2) {
        var i2, n2, o2, r2, a2, s2, l2 = Bf(this), c2 = Mf(l2), h2 = Lf(t2, c2), u2 = arguments.length;
        for (0 === u2 ? i2 = n2 = 0 : 1 === u2 ? (i2 = 0, n2 = c2 - h2) : (i2 = u2 - 2, n2 = Jf(Yf(Hf(e2), 0), c2 - h2)), zf(c2 + i2 - n2), o2 = qf(l2, n2), r2 = 0; r2 < n2; r2++)
          (a2 = h2 + r2) in l2 && Wf(o2, r2, l2[a2]);
        if (o2.length = n2, i2 < n2) {
          for (r2 = h2; r2 < c2 - n2; r2++)
            s2 = r2 + i2, (a2 = r2 + n2) in l2 ? l2[s2] = l2[a2] : Gf(l2, s2);
          for (r2 = c2; r2 > c2 - n2 + i2; r2--)
            Gf(l2, r2 - 1);
        } else if (i2 > n2)
          for (r2 = c2 - n2; r2 > h2; r2--)
            s2 = r2 + i2 - 1, (a2 = r2 + n2 - 1) in l2 ? l2[s2] = l2[a2] : Gf(l2, s2);
        for (r2 = 0; r2 < i2; r2++)
          l2[r2 + h2] = arguments[r2 + 2];
        return Uf(l2, c2 - n2 + i2), o2;
      } });
      var Xf = d, Qf = R(1 .valueOf), Zf = co, tg = g, eg = d, ig = Xf, ng = R, og = eo, rg = Jt, ag = Hu, sg = rt, lg = xt, cg = me, hg = f, ug = ln.f, dg = p.f, pg = De.f, fg = Qf, gg = Ko.trim, vg = "Number", bg = eg.Number;
      ig.Number;
      var mg = bg.prototype, yg = eg.TypeError, wg = ng("".slice), Sg = ng("".charCodeAt), xg = function(t2) {
        var e2 = cg(t2, "number");
        return "bigint" == typeof e2 ? e2 : Og(e2);
      }, Og = function(t2) {
        var e2, i2, n2, o2, r2, a2, s2, l2, c2 = cg(t2, "number");
        if (lg(c2))
          throw yg("Cannot convert a Symbol value to a number");
        if ("string" == typeof c2 && c2.length > 2) {
          if (c2 = gg(c2), 43 === (e2 = Sg(c2, 0)) || 45 === e2) {
            if (88 === (i2 = Sg(c2, 2)) || 120 === i2)
              return NaN;
          } else if (48 === e2) {
            switch (Sg(c2, 1)) {
              case 66:
              case 98:
                n2 = 2, o2 = 49;
                break;
              case 79:
              case 111:
                n2 = 8, o2 = 55;
                break;
              default:
                return +c2;
            }
            for (a2 = (r2 = wg(c2, 2)).length, s2 = 0; s2 < a2; s2++)
              if ((l2 = Sg(r2, s2)) < 48 || l2 > o2)
                return NaN;
            return parseInt(r2, n2);
          }
        }
        return +c2;
      }, kg = og(vg, !bg(" 0o1") || !bg("0b1") || bg("+0x1")), Cg = function(t2) {
        return sg(mg, t2) && hg(function() {
          fg(t2);
        });
      }, Tg = function(t2) {
        var e2 = arguments.length < 1 ? 0 : bg(xg(t2));
        return Cg(this) ? ag(Object(e2), this, Tg) : e2;
      };
      Tg.prototype = mg, kg && (mg.constructor = Tg), Zf({ global: true, constructor: true, wrap: true, forced: kg }, { Number: Tg });
      kg && function(t2, e2) {
        for (var i2, n2 = tg ? ug(e2) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","), o2 = 0; n2.length > o2; o2++)
          rg(e2, i2 = n2[o2]) && !rg(t2, i2) && pg(t2, i2, dg(e2, i2));
      }(ig.Number, bg);
      var Pg = co, Ig = cl, Ag = R([].reverse), $g = [1, 2];
      Pg({ target: "Array", proto: true, forced: String($g) === String($g.reverse()) }, { reverse: function() {
        return Ig(this) && (this.length = this.length), Ag(this);
      } });
      var Rg = Gt, Eg = Op, jg = gp;
      co({ target: "Object", stat: true, forced: f(function() {
        Eg(1);
      }), sham: !jg }, { getPrototypeOf: function(t2) {
        return Eg(Rg(t2));
      } });
      var _g = y, Fg = Me, Ng = H, Dg = yn, Vg = Bo, Bg = z, Lg = Rt, Hg = ns, Mg = ws;
      xa("match", function(t2, e2, i2) {
        return [function(e3) {
          var i3 = Bg(this), n2 = Ng(e3) ? void 0 : Lg(e3, t2);
          return n2 ? _g(n2, e3, i3) : new RegExp(e3)[t2](Vg(i3));
        }, function(t3) {
          var n2 = Fg(this), o2 = Vg(t3), r2 = i2(e2, n2, o2);
          if (r2.done)
            return r2.value;
          if (!n2.global)
            return Mg(n2, o2);
          var a2 = n2.unicode;
          n2.lastIndex = 0;
          for (var s2, l2 = [], c2 = 0; null !== (s2 = Mg(n2, o2)); ) {
            var h2 = Vg(s2[0]);
            l2[c2] = h2, "" === h2 && (n2.lastIndex = Hg(o2, Dg(n2.lastIndex), a2)), c2++;
          }
          return 0 === c2 ? null : l2;
        }];
      });
      var Ug, zg = co, qg = pa, Wg = p.f, Gg = yn, Kg = Bo, Yg = nc, Jg = z, Xg = rc, Qg = qg("".startsWith), Zg = qg("".slice), tv = Math.min, ev = Xg("startsWith");
      zg({ target: "String", proto: true, forced: !!(ev || (Ug = Wg(String.prototype, "startsWith"), !Ug || Ug.writable)) && !ev }, { startsWith: function(t2) {
        var e2 = Kg(Jg(this));
        Yg(t2);
        var i2 = Gg(tv(arguments.length > 1 ? arguments[1] : void 0, e2.length)), n2 = Kg(t2);
        return Qg ? Qg(e2, n2, i2) : Zg(e2, i2, i2 + n2.length) === n2;
      } });
      var iv = co, nv = pa, ov = p.f, rv = yn, av = Bo, sv = nc, lv = z, cv = rc, hv = nv("".endsWith), uv = nv("".slice), dv = Math.min, pv = cv("endsWith"), fv = !pv && !!function() {
        var t2 = ov(String.prototype, "endsWith");
        return t2 && !t2.writable;
      }();
      iv({ target: "String", proto: true, forced: !fv && !pv }, { endsWith: function(t2) {
        var e2 = av(lv(this));
        sv(t2);
        var i2 = arguments.length > 1 ? arguments[1] : void 0, n2 = e2.length, o2 = void 0 === i2 ? n2 : dv(rv(i2), n2), r2 = av(t2);
        return hv ? hv(e2, r2, o2) : uv(e2, o2 - r2.length, o2) === r2;
      } });
      var gv = { getBootstrapVersion: function() {
        var e2 = 5;
        try {
          var i2 = t.fn.dropdown.Constructor.VERSION;
          void 0 !== i2 && (e2 = parseInt(i2, 10));
        } catch (t2) {
        }
        try {
          var n2 = bootstrap.Tooltip.VERSION;
          void 0 !== n2 && (e2 = parseInt(n2, 10));
        } catch (t2) {
        }
        return e2;
      }, getIconsPrefix: function(t2) {
        return { bootstrap3: "glyphicon", bootstrap4: "fa", bootstrap5: "bi", "bootstrap-table": "icon", bulma: "fa", foundation: "fa", materialize: "material-icons", semantic: "fa" }[t2] || "fa";
      }, getIcons: function(t2) {
        return { glyphicon: { paginationSwitchDown: "glyphicon-collapse-down icon-chevron-down", paginationSwitchUp: "glyphicon-collapse-up icon-chevron-up", refresh: "glyphicon-refresh icon-refresh", toggleOff: "glyphicon-list-alt icon-list-alt", toggleOn: "glyphicon-list-alt icon-list-alt", columns: "glyphicon-th icon-th", detailOpen: "glyphicon-plus icon-plus", detailClose: "glyphicon-minus icon-minus", fullscreen: "glyphicon-fullscreen", search: "glyphicon-search", clearSearch: "glyphicon-trash" }, fa: { paginationSwitchDown: "fa-caret-square-down", paginationSwitchUp: "fa-caret-square-up", refresh: "fa-sync", toggleOff: "fa-toggle-off", toggleOn: "fa-toggle-on", columns: "fa-th-list", detailOpen: "fa-plus", detailClose: "fa-minus", fullscreen: "fa-arrows-alt", search: "fa-search", clearSearch: "fa-trash" }, bi: { paginationSwitchDown: "bi-caret-down-square", paginationSwitchUp: "bi-caret-up-square", refresh: "bi-arrow-clockwise", toggleOff: "bi-toggle-off", toggleOn: "bi-toggle-on", columns: "bi-list-ul", detailOpen: "bi-plus", detailClose: "bi-dash", fullscreen: "bi-arrows-move", search: "bi-search", clearSearch: "bi-trash" }, icon: { paginationSwitchDown: "icon-arrow-up-circle", paginationSwitchUp: "icon-arrow-down-circle", refresh: "icon-refresh-cw", toggleOff: "icon-toggle-right", toggleOn: "icon-toggle-right", columns: "icon-list", detailOpen: "icon-plus", detailClose: "icon-minus", fullscreen: "icon-maximize", search: "icon-search", clearSearch: "icon-trash-2" }, "material-icons": { paginationSwitchDown: "grid_on", paginationSwitchUp: "grid_off", refresh: "refresh", toggleOff: "tablet", toggleOn: "tablet_android", columns: "view_list", detailOpen: "add", detailClose: "remove", fullscreen: "fullscreen", sort: "sort", search: "search", clearSearch: "delete" } }[t2];
      }, getSearchInput: function(e2) {
        return "string" == typeof e2.options.searchSelector ? t(e2.options.searchSelector) : e2.$toolbar.find(".search input");
      }, extend: function() {
        for (var t2 = this, i2 = arguments.length, n2 = new Array(i2), o2 = 0; o2 < i2; o2++)
          n2[o2] = arguments[o2];
        var r2, a2 = n2[0] || {}, s2 = 1, l2 = false;
        for ("boolean" == typeof a2 && (l2 = a2, a2 = n2[s2] || {}, s2++), "object" !== e(a2) && "function" != typeof a2 && (a2 = {}); s2 < n2.length; s2++) {
          var c2 = n2[s2];
          if (null != c2)
            for (var h2 in c2) {
              var u2 = c2[h2];
              if ("__proto__" !== h2 && a2 !== u2) {
                var d2 = Array.isArray(u2);
                if (l2 && u2 && (this.isObject(u2) || d2)) {
                  var p2 = a2[h2];
                  if (d2 && Array.isArray(p2) && p2.every(function(e2) {
                    return !t2.isObject(e2) && !Array.isArray(e2);
                  })) {
                    a2[h2] = u2;
                    continue;
                  }
                  r2 = d2 && !Array.isArray(p2) ? [] : d2 || this.isObject(p2) ? p2 : {}, a2[h2] = this.extend(l2, r2, u2);
                } else
                  void 0 !== u2 && (a2[h2] = u2);
              }
            }
        }
        return a2;
      }, sprintf: function(t2) {
        for (var e2 = arguments.length, i2 = new Array(e2 > 1 ? e2 - 1 : 0), n2 = 1; n2 < e2; n2++)
          i2[n2 - 1] = arguments[n2];
        var o2 = true, r2 = 0, a2 = t2.replace(/%s/g, function() {
          var t3 = i2[r2++];
          return void 0 === t3 ? (o2 = false, "") : t3;
        });
        return o2 ? a2 : "";
      }, isObject: function(t2) {
        if ("object" !== e(t2) || null === t2)
          return false;
        for (var i2 = t2; null !== Object.getPrototypeOf(i2); )
          i2 = Object.getPrototypeOf(i2);
        return Object.getPrototypeOf(t2) === i2;
      }, isEmptyObject: function() {
        var t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        return 0 === Object.entries(t2).length && t2.constructor === Object;
      }, isNumeric: function(t2) {
        return !isNaN(parseFloat(t2)) && isFinite(t2);
      }, getFieldTitle: function(t2, e2) {
        var i2, n2 = c(t2);
        try {
          for (n2.s(); !(i2 = n2.n()).done; ) {
            var o2 = i2.value;
            if (o2.field === e2)
              return o2.title;
          }
        } catch (t3) {
          n2.e(t3);
        } finally {
          n2.f();
        }
        return "";
      }, setFieldIndex: function(t2) {
        var e2, i2 = 0, n2 = [], o2 = c(t2[0]);
        try {
          for (o2.s(); !(e2 = o2.n()).done; ) {
            i2 += e2.value.colspan || 1;
          }
        } catch (t3) {
          o2.e(t3);
        } finally {
          o2.f();
        }
        for (var r2 = 0; r2 < t2.length; r2++) {
          n2[r2] = [];
          for (var a2 = 0; a2 < i2; a2++)
            n2[r2][a2] = false;
        }
        for (var s2 = 0; s2 < t2.length; s2++) {
          var l2, h2 = c(t2[s2]);
          try {
            for (h2.s(); !(l2 = h2.n()).done; ) {
              var u2 = l2.value, d2 = u2.rowspan || 1, p2 = u2.colspan || 1, f2 = n2[s2].indexOf(false);
              u2.colspanIndex = f2, 1 === p2 ? (u2.fieldIndex = f2, void 0 === u2.field && (u2.field = f2)) : u2.colspanGroup = u2.colspan;
              for (var g2 = 0; g2 < d2; g2++)
                for (var v2 = 0; v2 < p2; v2++)
                  n2[s2 + g2][f2 + v2] = true;
            }
          } catch (t3) {
            h2.e(t3);
          } finally {
            h2.f();
          }
        }
      }, normalizeAccent: function(t2) {
        return "string" != typeof t2 ? t2 : t2.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
      }, updateFieldGroup: function(t2, e2) {
        var i2, n2, o2 = (i2 = []).concat.apply(i2, a(t2)), r2 = c(t2);
        try {
          for (r2.s(); !(n2 = r2.n()).done; ) {
            var s2, l2 = c(n2.value);
            try {
              for (l2.s(); !(s2 = l2.n()).done; ) {
                var h2 = s2.value;
                if (h2.colspanGroup > 1) {
                  for (var u2 = 0, d2 = function(t3) {
                    o2.find(function(e3) {
                      return e3.fieldIndex === t3;
                    }).visible && u2++;
                  }, p2 = h2.colspanIndex; p2 < h2.colspanIndex + h2.colspanGroup; p2++)
                    d2(p2);
                  h2.colspan = u2, h2.visible = u2 > 0;
                }
              }
            } catch (t3) {
              l2.e(t3);
            } finally {
              l2.f();
            }
          }
        } catch (t3) {
          r2.e(t3);
        } finally {
          r2.f();
        }
        if (!(t2.length < 2)) {
          var f2, g2 = c(e2);
          try {
            var v2 = function() {
              var t3 = f2.value, e3 = o2.filter(function(e4) {
                return e4.fieldIndex === t3.fieldIndex;
              });
              if (e3.length > 1) {
                var i3, n3 = c(e3);
                try {
                  for (n3.s(); !(i3 = n3.n()).done; ) {
                    i3.value.visible = t3.visible;
                  }
                } catch (t4) {
                  n3.e(t4);
                } finally {
                  n3.f();
                }
              }
            };
            for (g2.s(); !(f2 = g2.n()).done; )
              v2();
          } catch (t3) {
            g2.e(t3);
          } finally {
            g2.f();
          }
        }
      }, getScrollBarWidth: function() {
        if (void 0 === this.cachedWidth) {
          var e2 = t("<div/>").addClass("fixed-table-scroll-inner"), i2 = t("<div/>").addClass("fixed-table-scroll-outer");
          i2.append(e2), t("body").append(i2);
          var n2 = e2[0].offsetWidth;
          i2.css("overflow", "scroll");
          var o2 = e2[0].offsetWidth;
          n2 === o2 && (o2 = i2[0].clientWidth), i2.remove(), this.cachedWidth = n2 - o2;
        }
        return this.cachedWidth;
      }, calculateObjectValue: function(t2, i2, n2, o2) {
        var r2 = i2;
        if ("string" == typeof i2) {
          var s2 = i2.split(".");
          if (s2.length > 1) {
            r2 = window;
            var l2, h2 = c(s2);
            try {
              for (h2.s(); !(l2 = h2.n()).done; ) {
                r2 = r2[l2.value];
              }
            } catch (t3) {
              h2.e(t3);
            } finally {
              h2.f();
            }
          } else
            r2 = window[i2];
        }
        return null !== r2 && "object" === e(r2) ? r2 : "function" == typeof r2 ? r2.apply(t2, n2 || []) : !r2 && "string" == typeof i2 && n2 && this.sprintf.apply(this, [i2].concat(a(n2))) ? this.sprintf.apply(this, [i2].concat(a(n2))) : o2;
      }, compareObjects: function(t2, e2, i2) {
        var n2 = Object.keys(t2), o2 = Object.keys(e2);
        if (i2 && n2.length !== o2.length)
          return false;
        for (var r2 = 0, a2 = n2; r2 < a2.length; r2++) {
          var s2 = a2[r2];
          if (o2.includes(s2) && t2[s2] !== e2[s2])
            return false;
        }
        return true;
      }, regexCompare: function(t2, e2) {
        try {
          var i2 = e2.match(/^\/(.*?)\/([gim]*)$/);
          if (-1 !== t2.toString().search(i2 ? new RegExp(i2[1], i2[2]) : new RegExp(e2, "gim")))
            return true;
        } catch (t3) {
          return false;
        }
        return false;
      }, escapeApostrophe: function(t2) {
        return t2.toString().replace(/'/g, "&#39;");
      }, escapeHTML: function(t2) {
        return t2 ? t2.toString().replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;") : t2;
      }, unescapeHTML: function(t2) {
        return "string" == typeof t2 && t2 ? t2.toString().replace(/&amp;/g, "&").replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&quot;/g, '"').replace(/&#39;/g, "'") : t2;
      }, removeHTML: function(t2) {
        return t2 ? t2.toString().replace(/(<([^>]+)>)/gi, "").replace(/&[#A-Za-z0-9]+;/gi, "").trim() : t2;
      }, getRealDataAttr: function(t2) {
        for (var e2 = 0, i2 = Object.entries(t2); e2 < i2.length; e2++) {
          var n2 = r(i2[e2], 2), o2 = n2[0], a2 = n2[1], s2 = o2.split(/(?=[A-Z])/).join("-").toLowerCase();
          s2 !== o2 && (t2[s2] = a2, delete t2[o2]);
        }
        return t2;
      }, getItemField: function(t2, e2, i2) {
        var n2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : void 0, o2 = t2;
        if (void 0 !== n2 && (i2 = n2), "string" != typeof e2 || t2.hasOwnProperty(e2))
          return i2 ? this.escapeHTML(t2[e2]) : t2[e2];
        var r2, a2 = e2.split("."), s2 = c(a2);
        try {
          for (s2.s(); !(r2 = s2.n()).done; ) {
            var l2 = r2.value;
            o2 = o2 && o2[l2];
          }
        } catch (t3) {
          s2.e(t3);
        } finally {
          s2.f();
        }
        return i2 ? this.escapeHTML(o2) : o2;
      }, isIEBrowser: function() {
        return navigator.userAgent.includes("MSIE ") || /Trident.*rv:11\./.test(navigator.userAgent);
      }, findIndex: function(t2, e2) {
        var i2, n2 = c(t2);
        try {
          for (n2.s(); !(i2 = n2.n()).done; ) {
            var o2 = i2.value;
            if (JSON.stringify(o2) === JSON.stringify(e2))
              return t2.indexOf(o2);
          }
        } catch (t3) {
          n2.e(t3);
        } finally {
          n2.f();
        }
        return -1;
      }, trToData: function(e2, i2) {
        var n2 = this, o2 = [], r2 = [];
        return i2.each(function(i3, a2) {
          var s2 = t(a2), l2 = {};
          l2._id = s2.attr("id"), l2._class = s2.attr("class"), l2._data = n2.getRealDataAttr(s2.data()), l2._style = s2.attr("style"), s2.find(">td,>th").each(function(o3, a3) {
            for (var s3 = t(a3), c2 = +s3.attr("colspan") || 1, h2 = +s3.attr("rowspan") || 1, u2 = o3; r2[i3] && r2[i3][u2]; u2++)
              ;
            for (var d2 = u2; d2 < u2 + c2; d2++)
              for (var p2 = i3; p2 < i3 + h2; p2++)
                r2[p2] || (r2[p2] = []), r2[p2][d2] = true;
            var f2 = e2[u2].field;
            l2[f2] = n2.escapeApostrophe(s3.html().trim()), l2["_".concat(f2, "_id")] = s3.attr("id"), l2["_".concat(f2, "_class")] = s3.attr("class"), l2["_".concat(f2, "_rowspan")] = s3.attr("rowspan"), l2["_".concat(f2, "_colspan")] = s3.attr("colspan"), l2["_".concat(f2, "_title")] = s3.attr("title"), l2["_".concat(f2, "_data")] = n2.getRealDataAttr(s3.data()), l2["_".concat(f2, "_style")] = s3.attr("style");
          }), o2.push(l2);
        }), o2;
      }, sort: function(t2, e2, i2, n2, o2, r2) {
        if (null == t2 && (t2 = ""), null == e2 && (e2 = ""), n2.sortStable && t2 === e2 && (t2 = o2, e2 = r2), this.isNumeric(t2) && this.isNumeric(e2))
          return (t2 = parseFloat(t2)) < (e2 = parseFloat(e2)) ? -1 * i2 : t2 > e2 ? i2 : 0;
        if (n2.sortEmptyLast) {
          if ("" === t2)
            return 1;
          if ("" === e2)
            return -1;
        }
        return t2 === e2 ? 0 : ("string" != typeof t2 && (t2 = t2.toString()), -1 === t2.localeCompare(e2) ? -1 * i2 : i2);
      }, getEventName: function(t2) {
        var e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
        return e2 = e2 || "".concat(+/* @__PURE__ */ new Date()).concat(~~(1e6 * Math.random())), "".concat(t2, "-").concat(e2);
      }, hasDetailViewIcon: function(t2) {
        return t2.detailView && t2.detailViewIcon && !t2.cardView;
      }, getDetailViewIndexOffset: function(t2) {
        return this.hasDetailViewIcon(t2) && "right" !== t2.detailViewAlign ? 1 : 0;
      }, checkAutoMergeCells: function(t2) {
        var e2, i2 = c(t2);
        try {
          for (i2.s(); !(e2 = i2.n()).done; )
            for (var n2 = e2.value, o2 = 0, r2 = Object.keys(n2); o2 < r2.length; o2++) {
              var a2 = r2[o2];
              if (a2.startsWith("_") && (a2.endsWith("_rowspan") || a2.endsWith("_colspan")))
                return true;
            }
        } catch (t3) {
          i2.e(t3);
        } finally {
          i2.f();
        }
        return false;
      }, deepCopy: function(t2) {
        return void 0 === t2 ? t2 : this.extend(true, Array.isArray(t2) ? [] : {}, t2);
      }, debounce: function(t2, e2, i2) {
        var n2;
        return function() {
          var o2 = this, r2 = arguments, a2 = function() {
            n2 = null, i2 || t2.apply(o2, r2);
          }, s2 = i2 && !n2;
          clearTimeout(n2), n2 = setTimeout(a2, e2), s2 && t2.apply(o2, r2);
        };
      } }, vv = gv.getBootstrapVersion(), bv = { 3: { classes: { buttonsPrefix: "btn", buttons: "default", buttonsGroup: "btn-group", buttonsDropdown: "btn-group", pull: "pull", inputGroup: "input-group", inputPrefix: "input-", input: "form-control", select: "form-control", paginationDropdown: "btn-group dropdown", dropup: "dropup", dropdownActive: "active", paginationActive: "active", buttonActive: "active" }, html: { toolbarDropdown: ['<ul class="dropdown-menu" role="menu">', "</ul>"], toolbarDropdownItem: '<li class="dropdown-item-marker" role="menuitem"><label>%s</label></li>', toolbarDropdownSeparator: '<li class="divider"></li>', pageDropdown: ['<ul class="dropdown-menu" role="menu">', "</ul>"], pageDropdownItem: '<li role="menuitem" class="%s"><a href="#">%s</a></li>', dropdownCaret: '<span class="caret"></span>', pagination: ['<ul class="pagination%s">', "</ul>"], paginationItem: '<li class="page-item%s"><a class="page-link" aria-label="%s" href="javascript:void(0)">%s</a></li>', icon: '<i class="%s %s"></i>', inputGroup: '<div class="input-group">%s<span class="input-group-btn">%s</span></div>', searchInput: '<input class="%s%s" type="text" placeholder="%s">', searchButton: '<button class="%s" type="button" name="search" title="%s">%s %s</button>', searchClearButton: '<button class="%s" type="button" name="clearSearch" title="%s">%s %s</button>' } }, 4: { classes: { buttonsPrefix: "btn", buttons: "secondary", buttonsGroup: "btn-group", buttonsDropdown: "btn-group", pull: "float", inputGroup: "btn-group", inputPrefix: "form-control-", input: "form-control", select: "form-control", paginationDropdown: "btn-group dropdown", dropup: "dropup", dropdownActive: "active", paginationActive: "active", buttonActive: "active" }, html: { toolbarDropdown: ['<div class="dropdown-menu dropdown-menu-right">', "</div>"], toolbarDropdownItem: '<label class="dropdown-item dropdown-item-marker">%s</label>', pageDropdown: ['<div class="dropdown-menu">', "</div>"], pageDropdownItem: '<a class="dropdown-item %s" href="#">%s</a>', toolbarDropdownSeparator: '<div class="dropdown-divider"></div>', dropdownCaret: '<span class="caret"></span>', pagination: ['<ul class="pagination%s">', "</ul>"], paginationItem: '<li class="page-item%s"><a class="page-link" aria-label="%s" href="javascript:void(0)">%s</a></li>', icon: '<i class="%s %s"></i>', inputGroup: '<div class="input-group">%s<div class="input-group-append">%s</div></div>', searchInput: '<input class="%s%s" type="text" placeholder="%s">', searchButton: '<button class="%s" type="button" name="search" title="%s">%s %s</button>', searchClearButton: '<button class="%s" type="button" name="clearSearch" title="%s">%s %s</button>' } }, 5: { classes: { buttonsPrefix: "btn", buttons: "secondary", buttonsGroup: "btn-group", buttonsDropdown: "btn-group", pull: "float", inputGroup: "btn-group", inputPrefix: "form-control-", input: "form-control", select: "form-select", paginationDropdown: "btn-group dropdown", dropup: "dropup", dropdownActive: "active", paginationActive: "active", buttonActive: "active" }, html: { dataToggle: "data-bs-toggle", toolbarDropdown: ['<div class="dropdown-menu dropdown-menu-end">', "</div>"], toolbarDropdownItem: '<label class="dropdown-item dropdown-item-marker">%s</label>', pageDropdown: ['<div class="dropdown-menu">', "</div>"], pageDropdownItem: '<a class="dropdown-item %s" href="#">%s</a>', toolbarDropdownSeparator: '<div class="dropdown-divider"></div>', dropdownCaret: '<span class="caret"></span>', pagination: ['<ul class="pagination%s">', "</ul>"], paginationItem: '<li class="page-item%s"><a class="page-link" aria-label="%s" href="javascript:void(0)">%s</a></li>', icon: '<i class="%s %s"></i>', inputGroup: '<div class="input-group">%s%s</div>', searchInput: '<input class="%s%s" type="text" placeholder="%s">', searchButton: '<button class="%s" type="button" name="search" title="%s">%s %s</button>', searchClearButton: '<button class="%s" type="button" name="clearSearch" title="%s">%s %s</button>' } } }[vv], mv = { height: void 0, classes: "table table-bordered table-hover", buttons: {}, theadClasses: "", headerStyle: function(t2) {
        return {};
      }, rowStyle: function(t2, e2) {
        return {};
      }, rowAttributes: function(t2, e2) {
        return {};
      }, undefinedText: "-", locale: void 0, virtualScroll: false, virtualScrollItemHeight: void 0, sortable: true, sortClass: void 0, silentSort: true, sortEmptyLast: false, sortName: void 0, sortOrder: void 0, sortReset: false, sortStable: false, sortResetPage: false, rememberOrder: false, serverSort: true, customSort: void 0, columns: [[]], data: [], url: void 0, method: "get", cache: true, contentType: "application/json", dataType: "json", ajax: void 0, ajaxOptions: {}, queryParams: function(t2) {
        return t2;
      }, queryParamsType: "limit", responseHandler: function(t2) {
        return t2;
      }, totalField: "total", totalNotFilteredField: "totalNotFiltered", dataField: "rows", footerField: "footer", pagination: false, paginationParts: ["pageInfo", "pageSize", "pageList"], showExtendedPagination: false, paginationLoop: true, sidePagination: "client", totalRows: 0, totalNotFiltered: 0, pageNumber: 1, pageSize: 10, pageList: [10, 25, 50, 100], paginationHAlign: "right", paginationVAlign: "bottom", paginationDetailHAlign: "left", paginationPreText: "&lsaquo;", paginationNextText: "&rsaquo;", paginationSuccessivelySize: 5, paginationPagesBySide: 1, paginationUseIntermediate: false, search: false, searchable: false, searchHighlight: false, searchOnEnterKey: false, strictSearch: false, regexSearch: false, searchSelector: false, visibleSearch: false, showButtonIcons: true, showButtonText: false, showSearchButton: false, showSearchClearButton: false, trimOnSearch: true, searchAlign: "right", searchTimeOut: 500, searchText: "", customSearch: void 0, showHeader: true, showFooter: false, footerStyle: function(t2) {
        return {};
      }, searchAccentNeutralise: false, showColumns: false, showColumnsToggleAll: false, showColumnsSearch: false, minimumCountColumns: 1, showPaginationSwitch: false, showRefresh: false, showToggle: false, showFullscreen: false, smartDisplay: true, escape: false, escapeTitle: true, filterOptions: { filterAlgorithm: "and" }, idField: void 0, selectItemName: "btSelectItem", clickToSelect: false, ignoreClickToSelectOn: function(t2) {
        var e2 = t2.tagName;
        return ["A", "BUTTON"].includes(e2);
      }, singleSelect: false, checkboxHeader: true, maintainMetaData: false, multipleSelectRow: false, uniqueId: void 0, cardView: false, detailView: false, detailViewIcon: true, detailViewByClick: false, detailViewAlign: "left", detailFormatter: function(t2, e2) {
        return "";
      }, detailFilter: function(t2, e2) {
        return true;
      }, toolbar: void 0, toolbarAlign: "left", buttonsToolbar: void 0, buttonsAlign: "right", buttonsOrder: ["paginationSwitch", "refresh", "toggle", "fullscreen", "columns"], buttonsPrefix: bv.classes.buttonsPrefix, buttonsClass: bv.classes.buttons, iconsPrefix: void 0, icons: {}, iconSize: void 0, loadingFontSize: "auto", loadingTemplate: function(t2) {
        return '<span class="loading-wrap">\n      <span class="loading-text">'.concat(t2, '</span>\n      <span class="animation-wrap"><span class="animation-dot"></span></span>\n      </span>\n    ');
      }, onAll: function(t2, e2) {
        return false;
      }, onClickCell: function(t2, e2, i2, n2) {
        return false;
      }, onDblClickCell: function(t2, e2, i2, n2) {
        return false;
      }, onClickRow: function(t2, e2) {
        return false;
      }, onDblClickRow: function(t2, e2) {
        return false;
      }, onSort: function(t2, e2) {
        return false;
      }, onCheck: function(t2) {
        return false;
      }, onUncheck: function(t2) {
        return false;
      }, onCheckAll: function(t2) {
        return false;
      }, onUncheckAll: function(t2) {
        return false;
      }, onCheckSome: function(t2) {
        return false;
      }, onUncheckSome: function(t2) {
        return false;
      }, onLoadSuccess: function(t2) {
        return false;
      }, onLoadError: function(t2) {
        return false;
      }, onColumnSwitch: function(t2, e2) {
        return false;
      }, onColumnSwitchAll: function(t2) {
        return false;
      }, onPageChange: function(t2, e2) {
        return false;
      }, onSearch: function(t2) {
        return false;
      }, onToggle: function(t2) {
        return false;
      }, onPreBody: function(t2) {
        return false;
      }, onPostBody: function() {
        return false;
      }, onPostHeader: function() {
        return false;
      }, onPostFooter: function() {
        return false;
      }, onExpandRow: function(t2, e2, i2) {
        return false;
      }, onCollapseRow: function(t2, e2) {
        return false;
      }, onRefreshOptions: function(t2) {
        return false;
      }, onRefresh: function(t2) {
        return false;
      }, onResetView: function() {
        return false;
      }, onScrollBody: function() {
        return false;
      }, onTogglePagination: function(t2) {
        return false;
      }, onVirtualScroll: function(t2, e2) {
        return false;
      } }, yv = { formatLoadingMessage: function() {
        return "Loading, please wait";
      }, formatRecordsPerPage: function(t2) {
        return "".concat(t2, " rows per page");
      }, formatShowingRows: function(t2, e2, i2, n2) {
        return void 0 !== n2 && n2 > 0 && n2 > i2 ? "Showing ".concat(t2, " to ").concat(e2, " of ").concat(i2, " rows (filtered from ").concat(n2, " total rows)") : "Showing ".concat(t2, " to ").concat(e2, " of ").concat(i2, " rows");
      }, formatSRPaginationPreText: function() {
        return "previous page";
      }, formatSRPaginationPageText: function(t2) {
        return "to page ".concat(t2);
      }, formatSRPaginationNextText: function() {
        return "next page";
      }, formatDetailPagination: function(t2) {
        return "Showing ".concat(t2, " rows");
      }, formatSearch: function() {
        return "Search";
      }, formatClearSearch: function() {
        return "Clear Search";
      }, formatNoMatches: function() {
        return "No matching records found";
      }, formatPaginationSwitch: function() {
        return "Hide/Show pagination";
      }, formatPaginationSwitchDown: function() {
        return "Show pagination";
      }, formatPaginationSwitchUp: function() {
        return "Hide pagination";
      }, formatRefresh: function() {
        return "Refresh";
      }, formatToggleOn: function() {
        return "Show card view";
      }, formatToggleOff: function() {
        return "Hide card view";
      }, formatColumns: function() {
        return "Columns";
      }, formatColumnsToggleAll: function() {
        return "Toggle all";
      }, formatFullscreen: function() {
        return "Fullscreen";
      }, formatAllRows: function() {
        return "All";
      } }, wv = { field: void 0, title: void 0, titleTooltip: void 0, class: void 0, width: void 0, widthUnit: "px", rowspan: void 0, colspan: void 0, align: void 0, halign: void 0, falign: void 0, valign: void 0, cellStyle: void 0, radio: false, checkbox: false, checkboxEnabled: true, clickToSelect: true, showSelectTitle: false, sortable: false, sortName: void 0, order: "asc", sorter: void 0, visible: true, switchable: true, switchableLabel: void 0, cardVisible: true, searchable: true, formatter: void 0, footerFormatter: void 0, detailFormatter: void 0, searchFormatter: true, searchHighlightFormatter: false, escape: void 0, events: void 0 };
      Object.assign(mv, yv);
      var Sv = { VERSION: "1.22.1", THEME: "bootstrap".concat(vv), CONSTANTS: bv, DEFAULTS: mv, COLUMN_DEFAULTS: wv, METHODS: ["getOptions", "refreshOptions", "getData", "getSelections", "load", "append", "prepend", "remove", "removeAll", "insertRow", "updateRow", "getRowByUniqueId", "updateByUniqueId", "removeByUniqueId", "updateCell", "updateCellByUniqueId", "showRow", "hideRow", "getHiddenRows", "showColumn", "hideColumn", "getVisibleColumns", "getHiddenColumns", "showAllColumns", "hideAllColumns", "mergeCells", "checkAll", "uncheckAll", "checkInvert", "check", "uncheck", "checkBy", "uncheckBy", "refresh", "destroy", "resetView", "showLoading", "hideLoading", "togglePagination", "toggleFullscreen", "toggleView", "resetSearch", "filterBy", "sortBy", "scrollTo", "getScrollPosition", "selectPage", "prevPage", "nextPage", "toggleDetailView", "expandRow", "collapseRow", "expandRowByUniqueId", "collapseRowByUniqueId", "expandAllRows", "collapseAllRows", "updateColumnTitle", "updateFormatText"], EVENTS: { "all.bs.table": "onAll", "click-row.bs.table": "onClickRow", "dbl-click-row.bs.table": "onDblClickRow", "click-cell.bs.table": "onClickCell", "dbl-click-cell.bs.table": "onDblClickCell", "sort.bs.table": "onSort", "check.bs.table": "onCheck", "uncheck.bs.table": "onUncheck", "check-all.bs.table": "onCheckAll", "uncheck-all.bs.table": "onUncheckAll", "check-some.bs.table": "onCheckSome", "uncheck-some.bs.table": "onUncheckSome", "load-success.bs.table": "onLoadSuccess", "load-error.bs.table": "onLoadError", "column-switch.bs.table": "onColumnSwitch", "column-switch-all.bs.table": "onColumnSwitchAll", "page-change.bs.table": "onPageChange", "search.bs.table": "onSearch", "toggle.bs.table": "onToggle", "pre-body.bs.table": "onPreBody", "post-body.bs.table": "onPostBody", "post-header.bs.table": "onPostHeader", "post-footer.bs.table": "onPostFooter", "expand-row.bs.table": "onExpandRow", "collapse-row.bs.table": "onCollapseRow", "refresh-options.bs.table": "onRefreshOptions", "reset-view.bs.table": "onResetView", "refresh.bs.table": "onRefresh", "scroll-body.bs.table": "onScrollBody", "toggle-pagination.bs.table": "onTogglePagination", "virtual-scroll.bs.table": "onVirtualScroll" }, LOCALES: { en: yv, "en-US": yv } }, xv = function() {
        function t2(e2) {
          var n2 = this;
          i(this, t2), this.rows = e2.rows, this.scrollEl = e2.scrollEl, this.contentEl = e2.contentEl, this.callback = e2.callback, this.itemHeight = e2.itemHeight, this.cache = {}, this.scrollTop = this.scrollEl.scrollTop, this.initDOM(this.rows, e2.fixedScroll), this.scrollEl.scrollTop = this.scrollTop, this.lastCluster = 0;
          var o2 = function() {
            n2.lastCluster !== (n2.lastCluster = n2.getNum()) && (n2.initDOM(n2.rows), n2.callback(n2.startIndex, n2.endIndex));
          };
          this.scrollEl.addEventListener("scroll", o2, false), this.destroy = function() {
            n2.contentEl.innerHtml = "", n2.scrollEl.removeEventListener("scroll", o2, false);
          };
        }
        return o(t2, [{ key: "initDOM", value: function(t3, e2) {
          void 0 === this.clusterHeight && (this.cache.scrollTop = this.scrollEl.scrollTop, this.cache.data = this.contentEl.innerHTML = t3[0] + t3[0] + t3[0], this.getRowsHeight(t3));
          var i2 = this.initData(t3, this.getNum(e2)), n2 = i2.rows.join(""), o2 = this.checkChanges("data", n2), r2 = this.checkChanges("top", i2.topOffset), a2 = this.checkChanges("bottom", i2.bottomOffset), s2 = [];
          o2 && r2 ? (i2.topOffset && s2.push(this.getExtra("top", i2.topOffset)), s2.push(n2), i2.bottomOffset && s2.push(this.getExtra("bottom", i2.bottomOffset)), this.startIndex = i2.start, this.endIndex = i2.end, this.contentEl.innerHTML = s2.join(""), e2 && (this.contentEl.scrollTop = this.cache.scrollTop)) : a2 && (this.contentEl.lastChild.style.height = "".concat(i2.bottomOffset, "px"));
        } }, { key: "getRowsHeight", value: function() {
          if (void 0 === this.itemHeight) {
            var t3 = this.contentEl.children, e2 = t3[Math.floor(t3.length / 2)];
            this.itemHeight = e2.offsetHeight;
          }
          this.blockHeight = 50 * this.itemHeight, this.clusterRows = 200, this.clusterHeight = 4 * this.blockHeight;
        } }, { key: "getNum", value: function(t3) {
          return this.scrollTop = t3 ? this.cache.scrollTop : this.scrollEl.scrollTop, Math.floor(this.scrollTop / (this.clusterHeight - this.blockHeight)) || 0;
        } }, { key: "initData", value: function(t3, e2) {
          if (t3.length < 50)
            return { topOffset: 0, bottomOffset: 0, rowsAbove: 0, rows: t3 };
          var i2 = Math.max((this.clusterRows - 50) * e2, 0), n2 = i2 + this.clusterRows, o2 = Math.max(i2 * this.itemHeight, 0), r2 = Math.max((t3.length - n2) * this.itemHeight, 0), a2 = [], s2 = i2;
          o2 < 1 && s2++;
          for (var l2 = i2; l2 < n2; l2++)
            t3[l2] && a2.push(t3[l2]);
          return { start: i2, end: n2, topOffset: o2, bottomOffset: r2, rowsAbove: s2, rows: a2 };
        } }, { key: "checkChanges", value: function(t3, e2) {
          var i2 = e2 !== this.cache[t3];
          return this.cache[t3] = e2, i2;
        } }, { key: "getExtra", value: function(t3, e2) {
          var i2 = document.createElement("tr");
          return i2.className = "virtual-scroll-".concat(t3), e2 && (i2.style.height = "".concat(e2, "px")), i2.outerHTML;
        } }]), t2;
      }(), Ov = function() {
        function n2(e2, o2) {
          i(this, n2), this.options = o2, this.$el = t(e2), this.$el_ = this.$el.clone(), this.timeoutId_ = 0, this.timeoutFooter_ = 0;
        }
        return o(n2, [{ key: "init", value: function() {
          this.initConstants(), this.initLocale(), this.initContainer(), this.initTable(), this.initHeader(), this.initData(), this.initHiddenRows(), this.initToolbar(), this.initPagination(), this.initBody(), this.initSearchText(), this.initServer();
        } }, { key: "initConstants", value: function() {
          var i2 = this.options;
          this.constants = Sv.CONSTANTS, this.constants.theme = t.fn.bootstrapTable.theme, this.constants.dataToggle = this.constants.html.dataToggle || "data-toggle";
          var n3 = gv.getIconsPrefix(t.fn.bootstrapTable.theme), o2 = gv.getIcons(n3);
          "string" == typeof i2.icons && (i2.icons = gv.calculateObjectValue(null, i2.icons)), i2.iconsPrefix = i2.iconsPrefix || t.fn.bootstrapTable.defaults.iconsPrefix || n3, i2.icons = Object.assign(o2, t.fn.bootstrapTable.defaults.icons, i2.icons);
          var r2 = i2.buttonsPrefix ? "".concat(i2.buttonsPrefix, "-") : "";
          this.constants.buttonsClass = [i2.buttonsPrefix, r2 + i2.buttonsClass, gv.sprintf("".concat(r2, "%s"), i2.iconSize)].join(" ").trim(), this.buttons = gv.calculateObjectValue(this, i2.buttons, [], {}), "object" !== e(this.buttons) && (this.buttons = {});
        } }, { key: "initLocale", value: function() {
          if (this.options.locale) {
            var e2 = t.fn.bootstrapTable.locales, i2 = this.options.locale.split(/-|_/);
            i2[0] = i2[0].toLowerCase(), i2[1] && (i2[1] = i2[1].toUpperCase());
            var o2 = {};
            e2[this.options.locale] ? o2 = e2[this.options.locale] : e2[i2.join("-")] ? o2 = e2[i2.join("-")] : e2[i2[0]] && (o2 = e2[i2[0]]);
            for (var a2 = 0, s2 = Object.entries(o2); a2 < s2.length; a2++) {
              var l2 = r(s2[a2], 2), c2 = l2[0], h2 = l2[1];
              this.options[c2] === n2.DEFAULTS[c2] && (this.options[c2] = h2);
            }
          }
        } }, { key: "initContainer", value: function() {
          var e2 = ["top", "both"].includes(this.options.paginationVAlign) ? '<div class="fixed-table-pagination clearfix"></div>' : "", i2 = ["bottom", "both"].includes(this.options.paginationVAlign) ? '<div class="fixed-table-pagination"></div>' : "", n3 = gv.calculateObjectValue(this.options, this.options.loadingTemplate, [this.options.formatLoadingMessage()]);
          this.$container = t('\n      <div class="bootstrap-table '.concat(this.constants.theme, '">\n      <div class="fixed-table-toolbar"></div>\n      ').concat(e2, '\n      <div class="fixed-table-container">\n      <div class="fixed-table-header"><table></table></div>\n      <div class="fixed-table-body">\n      <div class="fixed-table-loading">\n      ').concat(n3, '\n      </div>\n      </div>\n      <div class="fixed-table-footer"></div>\n      </div>\n      ').concat(i2, "\n      </div>\n    ")), this.$container.insertAfter(this.$el), this.$tableContainer = this.$container.find(".fixed-table-container"), this.$tableHeader = this.$container.find(".fixed-table-header"), this.$tableBody = this.$container.find(".fixed-table-body"), this.$tableLoading = this.$container.find(".fixed-table-loading"), this.$tableFooter = this.$el.find("tfoot"), this.options.buttonsToolbar ? this.$toolbar = t("body").find(this.options.buttonsToolbar) : this.$toolbar = this.$container.find(".fixed-table-toolbar"), this.$pagination = this.$container.find(".fixed-table-pagination"), this.$tableBody.append(this.$el), this.$container.after('<div class="clearfix"></div>'), this.$el.addClass(this.options.classes), this.$tableLoading.addClass(this.options.classes), this.options.height && (this.$tableContainer.addClass("fixed-height"), this.options.showFooter && this.$tableContainer.addClass("has-footer"), this.options.classes.split(" ").includes("table-bordered") && (this.$tableBody.append('<div class="fixed-table-border"></div>'), this.$tableBorder = this.$tableBody.find(".fixed-table-border"), this.$tableLoading.addClass("fixed-table-border")), this.$tableFooter = this.$container.find(".fixed-table-footer"));
        } }, { key: "initTable", value: function() {
          var e2 = this, i2 = [];
          if (this.$header = this.$el.find(">thead"), this.$header.length ? this.options.theadClasses && this.$header.addClass(this.options.theadClasses) : this.$header = t('<thead class="'.concat(this.options.theadClasses, '"></thead>')).appendTo(this.$el), this._headerTrClasses = [], this._headerTrStyles = [], this.$header.find("tr").each(function(n3, o3) {
            var r2 = t(o3), a2 = [];
            r2.find("th").each(function(e3, i3) {
              var n4 = t(i3);
              void 0 !== n4.data("field") && n4.data("field", "".concat(n4.data("field")));
              var o4 = Object.assign({}, n4.data());
              for (var r3 in o4)
                t.fn.bootstrapTable.columnDefaults.hasOwnProperty(r3) && delete o4[r3];
              a2.push(gv.extend({}, { _data: gv.getRealDataAttr(o4), title: n4.html(), class: n4.attr("class"), titleTooltip: n4.attr("title"), rowspan: n4.attr("rowspan") ? +n4.attr("rowspan") : void 0, colspan: n4.attr("colspan") ? +n4.attr("colspan") : void 0 }, n4.data()));
            }), i2.push(a2), r2.attr("class") && e2._headerTrClasses.push(r2.attr("class")), r2.attr("style") && e2._headerTrStyles.push(r2.attr("style"));
          }), Array.isArray(this.options.columns[0]) || (this.options.columns = [this.options.columns]), this.options.columns = gv.extend(true, [], i2, this.options.columns), this.columns = [], this.fieldsColumnsIndex = [], gv.setFieldIndex(this.options.columns), this.options.columns.forEach(function(t2, i3) {
            t2.forEach(function(t3, o3) {
              var r2 = gv.extend({}, n2.COLUMN_DEFAULTS, t3, { passed: t3 });
              void 0 !== r2.fieldIndex && (e2.columns[r2.fieldIndex] = r2, e2.fieldsColumnsIndex[r2.field] = r2.fieldIndex), e2.options.columns[i3][o3] = r2;
            });
          }), !this.options.data.length) {
            var o2 = gv.trToData(this.columns, this.$el.find(">tbody>tr"));
            o2.length && (this.options.data = o2, this.fromHtml = true);
          }
          this.options.pagination && "server" !== this.options.sidePagination || (this.footerData = gv.trToData(this.columns, this.$el.find(">tfoot>tr"))), this.footerData && this.$el.find("tfoot").html("<tr></tr>"), !this.options.showFooter || this.options.cardView ? this.$tableFooter.hide() : this.$tableFooter.show();
        } }, { key: "initHeader", value: function() {
          var i2 = this, n3 = {}, o2 = [];
          this.header = { fields: [], styles: [], classes: [], formatters: [], detailFormatters: [], events: [], sorters: [], sortNames: [], cellStyles: [], searchables: [] }, gv.updateFieldGroup(this.options.columns, this.columns), this.options.columns.forEach(function(t2, a3) {
            var s2 = [];
            s2.push("<tr".concat(gv.sprintf(' class="%s"', i2._headerTrClasses[a3]), " ").concat(gv.sprintf(' style="%s"', i2._headerTrStyles[a3]), ">"));
            var l2 = "";
            if (0 === a3 && gv.hasDetailViewIcon(i2.options)) {
              var c2 = i2.options.columns.length > 1 ? ' rowspan="'.concat(i2.options.columns.length, '"') : "";
              l2 = '<th class="detail"'.concat(c2, '>\n          <div class="fht-cell"></div>\n          </th>');
            }
            l2 && "right" !== i2.options.detailViewAlign && s2.push(l2), t2.forEach(function(t3, o3) {
              var l3 = gv.sprintf(' class="%s"', t3.class), c3 = t3.widthUnit, h2 = parseFloat(t3.width), u2 = t3.halign ? t3.halign : t3.align, d2 = gv.sprintf("text-align: %s; ", u2), p2 = gv.sprintf("text-align: %s; ", t3.align), f2 = gv.sprintf("vertical-align: %s; ", t3.valign);
              if (f2 += gv.sprintf("width: %s; ", !t3.checkbox && !t3.radio || h2 ? h2 ? h2 + c3 : void 0 : t3.showSelectTitle ? void 0 : "36px"), void 0 !== t3.fieldIndex || t3.visible) {
                var g2 = gv.calculateObjectValue(null, i2.options.headerStyle, [t3]), v2 = [], b2 = [], m2 = "";
                if (g2 && g2.css)
                  for (var y2 = 0, w2 = Object.entries(g2.css); y2 < w2.length; y2++) {
                    var S2 = r(w2[y2], 2), x2 = S2[0], O2 = S2[1];
                    v2.push("".concat(x2, ": ").concat(O2));
                  }
                if (g2 && g2.classes && (m2 = gv.sprintf(' class="%s"', t3.class ? [t3.class, g2.classes].join(" ") : g2.classes)), void 0 !== t3.fieldIndex) {
                  if (i2.header.fields[t3.fieldIndex] = t3.field, i2.header.styles[t3.fieldIndex] = p2 + f2, i2.header.classes[t3.fieldIndex] = l3, i2.header.formatters[t3.fieldIndex] = t3.formatter, i2.header.detailFormatters[t3.fieldIndex] = t3.detailFormatter, i2.header.events[t3.fieldIndex] = t3.events, i2.header.sorters[t3.fieldIndex] = t3.sorter, i2.header.sortNames[t3.fieldIndex] = t3.sortName, i2.header.cellStyles[t3.fieldIndex] = t3.cellStyle, i2.header.searchables[t3.fieldIndex] = t3.searchable, !t3.visible)
                    return;
                  if (i2.options.cardView && !t3.cardVisible)
                    return;
                  n3[t3.field] = t3;
                }
                if (Object.keys(t3._data || {}).length > 0)
                  for (var k2 = 0, C2 = Object.entries(t3._data); k2 < C2.length; k2++) {
                    var T2 = r(C2[k2], 2), P2 = T2[0], I2 = T2[1];
                    b2.push("data-".concat(P2, "='").concat("object" === e(I2) ? JSON.stringify(I2) : I2, "'"));
                  }
                s2.push("<th".concat(gv.sprintf(' title="%s"', t3.titleTooltip)), t3.checkbox || t3.radio ? gv.sprintf(' class="bs-checkbox %s"', t3.class || "") : m2 || l3, gv.sprintf(' style="%s"', d2 + f2 + v2.join("; ")), gv.sprintf(' rowspan="%s"', t3.rowspan), gv.sprintf(' colspan="%s"', t3.colspan), gv.sprintf(' data-field="%s"', t3.field), 0 === o3 && a3 > 0 ? " data-not-first-th" : "", b2.length > 0 ? b2.join(" ") : "", ">"), s2.push(gv.sprintf('<div class="th-inner %s">', i2.options.sortable && t3.sortable ? "sortable".concat("center" === u2 ? " sortable-center" : "", " both") : ""));
                var A2 = i2.options.escape && i2.options.escapeTitle ? gv.escapeHTML(t3.title) : t3.title, $2 = A2;
                t3.checkbox && (A2 = "", !i2.options.singleSelect && i2.options.checkboxHeader && (A2 = '<label><input name="btSelectAll" type="checkbox" /><span></span></label>'), i2.header.stateField = t3.field), t3.radio && (A2 = "", i2.header.stateField = t3.field), !A2 && t3.showSelectTitle && (A2 += $2), s2.push(A2), s2.push("</div>"), s2.push('<div class="fht-cell"></div>'), s2.push("</div>"), s2.push("</th>");
              }
            }), l2 && "right" === i2.options.detailViewAlign && s2.push(l2), s2.push("</tr>"), s2.length > 3 && o2.push(s2.join(""));
          }), this.$header.html(o2.join("")), this.$header.find("th[data-field]").each(function(e2, i3) {
            t(i3).data(n3[t(i3).data("field")]);
          }), this.$container.off("click", ".th-inner").on("click", ".th-inner", function(e2) {
            var n4 = t(e2.currentTarget);
            if (i2.options.detailView && !n4.parent().hasClass("bs-checkbox") && n4.closest(".bootstrap-table")[0] !== i2.$container[0])
              return false;
            i2.options.sortable && n4.parent().data().sortable && i2.onSort(e2);
          });
          var a2 = gv.getEventName("resize.bootstrap-table", this.$el.attr("id"));
          t(window).off(a2), !this.options.showHeader || this.options.cardView ? (this.$header.hide(), this.$tableHeader.hide(), this.$tableLoading.css("top", 0)) : (this.$header.show(), this.$tableHeader.show(), this.$tableLoading.css("top", this.$header.outerHeight() + 1), this.getCaret(), t(window).on(a2, function() {
            return i2.resetView();
          })), this.$selectAll = this.$header.find('[name="btSelectAll"]'), this.$selectAll.off("click").on("click", function(e2) {
            e2.stopPropagation();
            var n4 = t(e2.currentTarget).prop("checked");
            i2[n4 ? "checkAll" : "uncheckAll"](), i2.updateSelected();
          });
        } }, { key: "initData", value: function(t2, e2) {
          "append" === e2 ? this.options.data = this.options.data.concat(t2) : "prepend" === e2 ? this.options.data = [].concat(t2).concat(this.options.data) : (t2 = t2 || gv.deepCopy(this.options.data), this.options.data = Array.isArray(t2) ? t2 : t2[this.options.dataField]), this.data = a(this.options.data), this.options.sortReset && (this.unsortedData = a(this.data)), "server" !== this.options.sidePagination && this.initSort();
        } }, { key: "initSort", value: function() {
          var t2 = this, e2 = this.options.sortName, i2 = "desc" === this.options.sortOrder ? -1 : 1, n3 = this.header.fields.indexOf(this.options.sortName), o2 = 0;
          -1 !== n3 ? (this.options.sortStable && this.data.forEach(function(t3, e3) {
            t3.hasOwnProperty("_position") || (t3._position = e3);
          }), this.options.customSort ? gv.calculateObjectValue(this.options, this.options.customSort, [this.options.sortName, this.options.sortOrder, this.data]) : this.data.sort(function(o3, r2) {
            t2.header.sortNames[n3] && (e2 = t2.header.sortNames[n3]);
            var a2 = gv.getItemField(o3, e2, t2.options.escape), s2 = gv.getItemField(r2, e2, t2.options.escape), l2 = gv.calculateObjectValue(t2.header, t2.header.sorters[n3], [a2, s2, o3, r2]);
            return void 0 !== l2 ? t2.options.sortStable && 0 === l2 ? i2 * (o3._position - r2._position) : i2 * l2 : gv.sort(a2, s2, i2, t2.options, o3._position, r2._position);
          }), void 0 !== this.options.sortClass && (clearTimeout(o2), o2 = setTimeout(function() {
            t2.$el.removeClass(t2.options.sortClass);
            var e3 = t2.$header.find('[data-field="'.concat(t2.options.sortName, '"]')).index();
            t2.$el.find("tr td:nth-child(".concat(e3 + 1, ")")).addClass(t2.options.sortClass);
          }, 250))) : this.options.sortReset && (this.data = a(this.unsortedData));
        } }, { key: "sortBy", value: function(t2) {
          this.options.sortName = t2.field, this.options.sortOrder = t2.hasOwnProperty("sortOrder") ? t2.sortOrder : "asc", this._sort();
        } }, { key: "onSort", value: function(e2) {
          var i2 = e2.type, n3 = e2.currentTarget, o2 = "keypress" === i2 ? t(n3) : t(n3).parent(), r2 = this.$header.find("th").eq(o2.index());
          if (this.$header.add(this.$header_).find("span.order").remove(), this.options.sortName === o2.data("field")) {
            var a2 = this.options.sortOrder, s2 = this.columns[this.fieldsColumnsIndex[o2.data("field")]].sortOrder || this.columns[this.fieldsColumnsIndex[o2.data("field")]].order;
            void 0 === a2 ? this.options.sortOrder = "asc" : "asc" === a2 ? this.options.sortOrder = this.options.sortReset ? "asc" === s2 ? "desc" : void 0 : "desc" : "desc" === this.options.sortOrder && (this.options.sortOrder = this.options.sortReset ? "desc" === s2 ? "asc" : void 0 : "asc"), void 0 === this.options.sortOrder && (this.options.sortName = void 0);
          } else
            this.options.sortName = o2.data("field"), this.options.rememberOrder ? this.options.sortOrder = "asc" === o2.data("order") ? "desc" : "asc" : this.options.sortOrder = this.columns[this.fieldsColumnsIndex[o2.data("field")]].sortOrder || this.columns[this.fieldsColumnsIndex[o2.data("field")]].order;
          o2.add(r2).data("order", this.options.sortOrder), this.getCaret(), this._sort();
        } }, { key: "_sort", value: function() {
          if (this.trigger("sort", this.options.sortName, this.options.sortOrder), "server" === this.options.sidePagination && this.options.serverSort)
            return this.options.pageNumber = 1, void this.initServer(this.options.silentSort);
          this.options.pagination && this.options.sortResetPage && (this.options.pageNumber = 1, this.initPagination()), this.initSort(), this.initBody();
        } }, { key: "initToolbar", value: function() {
          var i2, n3 = this, o2 = this.options, a2 = [], s2 = 0, l2 = 0;
          this.$toolbar.find(".bs-bars").children().length && t("body").append(t(o2.toolbar)), this.$toolbar.html(""), "string" != typeof o2.toolbar && "object" !== e(o2.toolbar) || t(gv.sprintf('<div class="bs-bars %s-%s"></div>', this.constants.classes.pull, o2.toolbarAlign)).appendTo(this.$toolbar).append(t(o2.toolbar)), a2 = ['<div class="'.concat(["columns", "columns-".concat(o2.buttonsAlign), this.constants.classes.buttonsGroup, "".concat(this.constants.classes.pull, "-").concat(o2.buttonsAlign)].join(" "), '">')], "string" == typeof o2.buttonsOrder && (o2.buttonsOrder = o2.buttonsOrder.replace(/\[|\]| |'/g, "").split(",")), this.buttons = Object.assign(this.buttons, { paginationSwitch: { text: o2.pagination ? o2.formatPaginationSwitchUp() : o2.formatPaginationSwitchDown(), icon: o2.pagination ? o2.icons.paginationSwitchDown : o2.icons.paginationSwitchUp, render: false, event: this.togglePagination, attributes: { "aria-label": o2.formatPaginationSwitch(), title: o2.formatPaginationSwitch() } }, refresh: { text: o2.formatRefresh(), icon: o2.icons.refresh, render: false, event: this.refresh, attributes: { "aria-label": o2.formatRefresh(), title: o2.formatRefresh() } }, toggle: { text: o2.formatToggleOn(), icon: o2.icons.toggleOff, render: false, event: this.toggleView, attributes: { "aria-label": o2.formatToggleOn(), title: o2.formatToggleOn() } }, fullscreen: { text: o2.formatFullscreen(), icon: o2.icons.fullscreen, render: false, event: this.toggleFullscreen, attributes: { "aria-label": o2.formatFullscreen(), title: o2.formatFullscreen() } }, columns: { render: false, html: function() {
            var t2 = [];
            if (t2.push('<div class="keep-open '.concat(n3.constants.classes.buttonsDropdown, '">\n            <button class="').concat(n3.constants.buttonsClass, ' dropdown-toggle" type="button" ').concat(n3.constants.dataToggle, '="dropdown"\n            aria-label="').concat(o2.formatColumns(), '" title="').concat(o2.formatColumns(), '">\n            ').concat(o2.showButtonIcons ? gv.sprintf(n3.constants.html.icon, o2.iconsPrefix, o2.icons.columns) : "", "\n            ").concat(o2.showButtonText ? o2.formatColumns() : "", "\n            ").concat(n3.constants.html.dropdownCaret, "\n            </button>\n            ").concat(n3.constants.html.toolbarDropdown[0])), o2.showColumnsSearch && (t2.push(gv.sprintf(n3.constants.html.toolbarDropdownItem, gv.sprintf('<input type="text" class="%s" name="columnsSearch" placeholder="%s" autocomplete="off">', n3.constants.classes.input, o2.formatSearch()))), t2.push(n3.constants.html.toolbarDropdownSeparator)), o2.showColumnsToggleAll) {
              var e2 = n3.getVisibleColumns().length === n3.columns.filter(function(t3) {
                return !n3.isSelectionColumn(t3);
              }).length;
              t2.push(gv.sprintf(n3.constants.html.toolbarDropdownItem, gv.sprintf('<input type="checkbox" class="toggle-all" %s> <span>%s</span>', e2 ? 'checked="checked"' : "", o2.formatColumnsToggleAll()))), t2.push(n3.constants.html.toolbarDropdownSeparator);
            }
            var i3 = 0;
            return n3.columns.forEach(function(t3) {
              t3.visible && i3++;
            }), n3.columns.forEach(function(e3, r2) {
              if (!n3.isSelectionColumn(e3) && (!o2.cardView || e3.cardVisible)) {
                var a3 = e3.visible ? ' checked="checked"' : "", s3 = i3 <= o2.minimumCountColumns && a3 ? ' disabled="disabled"' : "";
                e3.switchable && (t2.push(gv.sprintf(n3.constants.html.toolbarDropdownItem, gv.sprintf('<input type="checkbox" data-field="%s" value="%s"%s%s> <span>%s</span>', e3.field, r2, a3, s3, e3.switchableLabel ? e3.switchableLabel : e3.title))), l2++);
              }
            }), t2.push(n3.constants.html.toolbarDropdown[1], "</div>"), t2.join("");
          } } });
          for (var h2 = {}, u2 = 0, d2 = Object.entries(this.buttons); u2 < d2.length; u2++) {
            var p2 = r(d2[u2], 2), f2 = p2[0], g2 = p2[1], v2 = void 0;
            if (g2.hasOwnProperty("html"))
              "function" == typeof g2.html ? v2 = g2.html() : "string" == typeof g2.html && (v2 = g2.html);
            else {
              var b2 = this.constants.buttonsClass;
              if (g2.hasOwnProperty("attributes") && g2.attributes.class && (b2 += " ".concat(g2.attributes.class)), v2 = '<button class="'.concat(b2, '" type="button" name="').concat(f2, '"'), g2.hasOwnProperty("attributes"))
                for (var m2 = 0, y2 = Object.entries(g2.attributes); m2 < y2.length; m2++) {
                  var w2 = r(y2[m2], 2), S2 = w2[0], x2 = w2[1];
                  "class" !== S2 && (v2 += " ".concat(S2, '="').concat(x2, '"'));
                }
              v2 += ">", o2.showButtonIcons && g2.hasOwnProperty("icon") && (v2 += "".concat(gv.sprintf(this.constants.html.icon, o2.iconsPrefix, g2.icon), " ")), o2.showButtonText && g2.hasOwnProperty("text") && (v2 += g2.text), v2 += "</button>";
            }
            h2[f2] = v2;
            var O2 = "show".concat(f2.charAt(0).toUpperCase()).concat(f2.substring(1)), k2 = o2[O2];
            !(!g2.hasOwnProperty("render") || g2.hasOwnProperty("render") && g2.render) || void 0 !== k2 && true !== k2 || (o2[O2] = true), o2.buttonsOrder.includes(f2) || o2.buttonsOrder.push(f2);
          }
          var C2, T2 = c(o2.buttonsOrder);
          try {
            for (T2.s(); !(C2 = T2.n()).done; ) {
              var P2 = C2.value;
              o2["show".concat(P2.charAt(0).toUpperCase()).concat(P2.substring(1))] && a2.push(h2[P2]);
            }
          } catch (t2) {
            T2.e(t2);
          } finally {
            T2.f();
          }
          a2.push("</div>"), (this.showToolbar || a2.length > 2) && this.$toolbar.append(a2.join(""));
          for (var I2 = 0, A2 = Object.entries(this.buttons); I2 < A2.length; I2++) {
            var $2 = r(A2[I2], 2), R2 = $2[0], E2 = $2[1];
            if (E2.hasOwnProperty("event")) {
              if ("function" == typeof E2.event || "string" == typeof E2.event) {
                if ("continue" === function() {
                  var t2 = "string" == typeof E2.event ? window[E2.event] : E2.event;
                  return n3.$toolbar.find('button[name="'.concat(R2, '"]')).off("click").on("click", function() {
                    return t2.call(n3);
                  }), "continue";
                }())
                  continue;
              }
              for (var j2 = function() {
                var t2 = r(F2[_2], 2), e2 = t2[0], i3 = t2[1], o3 = "string" == typeof i3 ? window[i3] : i3;
                n3.$toolbar.find('button[name="'.concat(R2, '"]')).off(e2).on(e2, function() {
                  return o3.call(n3);
                });
              }, _2 = 0, F2 = Object.entries(E2.event); _2 < F2.length; _2++)
                j2();
            }
          }
          if (o2.showColumns) {
            var N2 = (i2 = this.$toolbar.find(".keep-open")).find('input[type="checkbox"]:not(".toggle-all")'), D2 = i2.find('input[type="checkbox"].toggle-all');
            if (l2 <= o2.minimumCountColumns && i2.find("input").prop("disabled", true), i2.find("li, label").off("click").on("click", function(t2) {
              t2.stopImmediatePropagation();
            }), N2.off("click").on("click", function(e2) {
              var i3 = e2.currentTarget, o3 = t(i3);
              n3._toggleColumn(o3.val(), o3.prop("checked"), false), n3.trigger("column-switch", o3.data("field"), o3.prop("checked")), D2.prop("checked", N2.filter(":checked").length === n3.columns.filter(function(t2) {
                return !n3.isSelectionColumn(t2);
              }).length);
            }), D2.off("click").on("click", function(e2) {
              var i3 = e2.currentTarget;
              n3._toggleAllColumns(t(i3).prop("checked")), n3.trigger("column-switch-all", t(i3).prop("checked"));
            }), o2.showColumnsSearch) {
              var V2 = i2.find('[name="columnsSearch"]'), B2 = i2.find(".dropdown-item-marker");
              V2.on("keyup paste change", function(e2) {
                var i3 = e2.currentTarget, n4 = t(i3).val().toLowerCase();
                B2.show(), N2.each(function(e3, i4) {
                  var o3 = t(i4).parents(".dropdown-item-marker");
                  o3.text().toLowerCase().includes(n4) || o3.hide();
                });
              });
            }
          }
          var L2 = function(t2) {
            var e2 = t2.is("select") ? "change" : "keyup drop blur mouseup";
            t2.off(e2).on(e2, function(t3) {
              o2.searchOnEnterKey && 13 !== t3.keyCode || [37, 38, 39, 40].includes(t3.keyCode) || (clearTimeout(s2), s2 = setTimeout(function() {
                n3.onSearch({ currentTarget: t3.currentTarget });
              }, o2.searchTimeOut));
            });
          };
          if ((o2.search || this.showSearchClearButton) && "string" != typeof o2.searchSelector) {
            a2 = [];
            var H2 = gv.sprintf(this.constants.html.searchButton, this.constants.buttonsClass, o2.formatSearch(), o2.showButtonIcons ? gv.sprintf(this.constants.html.icon, o2.iconsPrefix, o2.icons.search) : "", o2.showButtonText ? o2.formatSearch() : ""), M2 = gv.sprintf(this.constants.html.searchClearButton, this.constants.buttonsClass, o2.formatClearSearch(), o2.showButtonIcons ? gv.sprintf(this.constants.html.icon, o2.iconsPrefix, o2.icons.clearSearch) : "", o2.showButtonText ? o2.formatClearSearch() : ""), U2 = '<input class="'.concat(this.constants.classes.input, "\n        ").concat(gv.sprintf(" %s%s", this.constants.classes.inputPrefix, o2.iconSize), '\n        search-input" type="search" aria-label="').concat(o2.formatSearch(), '" placeholder="').concat(o2.formatSearch(), '" autocomplete="off">'), z2 = U2;
            if (o2.showSearchButton || o2.showSearchClearButton) {
              var q2 = (o2.showSearchButton ? H2 : "") + (o2.showSearchClearButton ? M2 : "");
              z2 = o2.search ? gv.sprintf(this.constants.html.inputGroup, U2, q2) : q2;
            }
            a2.push(gv.sprintf('\n        <div class="'.concat(this.constants.classes.pull, "-").concat(o2.searchAlign, " search ").concat(this.constants.classes.inputGroup, '">\n          %s\n        </div>\n      '), z2)), this.$toolbar.append(a2.join(""));
            var W2 = gv.getSearchInput(this);
            o2.showSearchButton ? (this.$toolbar.find(".search button[name=search]").off("click").on("click", function() {
              clearTimeout(s2), s2 = setTimeout(function() {
                n3.onSearch({ currentTarget: W2 });
              }, o2.searchTimeOut);
            }), o2.searchOnEnterKey && L2(W2)) : L2(W2), o2.showSearchClearButton && this.$toolbar.find(".search button[name=clearSearch]").click(function() {
              n3.resetSearch();
            });
          } else if ("string" == typeof o2.searchSelector) {
            L2(gv.getSearchInput(this));
          }
        } }, { key: "onSearch", value: function() {
          var e2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, i2 = e2.currentTarget, n3 = e2.firedByInitSearchText, o2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          if (void 0 !== i2 && t(i2).length && o2) {
            var r2 = t(i2).val().trim();
            if (this.options.trimOnSearch && t(i2).val() !== r2 && t(i2).val(r2), this.searchText === r2)
              return;
            var a2 = gv.getSearchInput(this), s2 = i2 instanceof jQuery ? i2 : t(i2);
            (s2.is(a2) || s2.hasClass("search-input")) && (this.searchText = r2, this.options.searchText = r2);
          }
          n3 || (this.options.pageNumber = 1), this.initSearch(), n3 ? "client" === this.options.sidePagination && this.updatePagination() : this.updatePagination(), this.trigger("search", this.searchText);
        } }, { key: "initSearch", value: function() {
          var t2 = this;
          if (this.filterOptions = this.filterOptions || this.options.filterOptions, "server" !== this.options.sidePagination) {
            if (this.options.customSearch)
              return this.data = gv.calculateObjectValue(this.options, this.options.customSearch, [this.options.data, this.searchText, this.filterColumns]), this.options.sortReset && (this.unsortedData = a(this.data)), void this.initSort();
            var e2 = this.searchText && (this.fromHtml ? gv.escapeHTML(this.searchText) : this.searchText), i2 = e2 ? e2.toLowerCase() : "", n3 = gv.isEmptyObject(this.filterColumns) ? null : this.filterColumns;
            this.options.searchAccentNeutralise && (i2 = gv.normalizeAccent(i2)), "function" == typeof this.filterOptions.filterAlgorithm ? this.data = this.options.data.filter(function(e3) {
              return t2.filterOptions.filterAlgorithm.apply(null, [e3, n3]);
            }) : "string" == typeof this.filterOptions.filterAlgorithm && (this.data = n3 ? this.options.data.filter(function(e3) {
              var i3 = t2.filterOptions.filterAlgorithm;
              if ("and" === i3) {
                for (var o3 in n3)
                  if (Array.isArray(n3[o3]) && !n3[o3].includes(e3[o3]) || !Array.isArray(n3[o3]) && e3[o3] !== n3[o3])
                    return false;
              } else if ("or" === i3) {
                var r2 = false;
                for (var a2 in n3)
                  (Array.isArray(n3[a2]) && n3[a2].includes(e3[a2]) || !Array.isArray(n3[a2]) && e3[a2] === n3[a2]) && (r2 = true);
                return r2;
              }
              return true;
            }) : a(this.options.data));
            var o2 = this.getVisibleFields();
            this.data = i2 ? this.data.filter(function(n4, r2) {
              for (var a2 = 0; a2 < t2.header.fields.length; a2++)
                if (t2.header.searchables[a2] && (!t2.options.visibleSearch || -1 !== o2.indexOf(t2.header.fields[a2]))) {
                  var s2 = gv.isNumeric(t2.header.fields[a2]) ? parseInt(t2.header.fields[a2], 10) : t2.header.fields[a2], l2 = t2.columns[t2.fieldsColumnsIndex[s2]], c2 = void 0;
                  if ("string" == typeof s2) {
                    c2 = n4;
                    for (var h2 = s2.split("."), u2 = 0; u2 < h2.length; u2++) {
                      if (null === c2[h2[u2]]) {
                        c2 = null;
                        break;
                      }
                      c2 = c2[h2[u2]];
                    }
                  } else
                    c2 = n4[s2];
                  if (t2.options.searchAccentNeutralise && (c2 = gv.normalizeAccent(c2)), l2 && l2.searchFormatter && (c2 = gv.calculateObjectValue(l2, t2.header.formatters[a2], [c2, n4, r2, l2.field], c2)), "string" == typeof c2 || "number" == typeof c2) {
                    if (t2.options.strictSearch && "".concat(c2).toLowerCase() === i2 || t2.options.regexSearch && gv.regexCompare(c2, e2))
                      return true;
                    var d2 = /(?:(<=|=>|=<|>=|>|<)(?:\s+)?(-?\d+)?|(-?\d+)?(\s+)?(<=|=>|=<|>=|>|<))/gm.exec(t2.searchText), p2 = false;
                    if (d2) {
                      var f2 = d2[1] || "".concat(d2[5], "l"), g2 = d2[2] || d2[3], v2 = parseInt(c2, 10), b2 = parseInt(g2, 10);
                      switch (f2) {
                        case ">":
                        case "<l":
                          p2 = v2 > b2;
                          break;
                        case "<":
                        case ">l":
                          p2 = v2 < b2;
                          break;
                        case "<=":
                        case "=<":
                        case ">=l":
                        case "=>l":
                          p2 = v2 <= b2;
                          break;
                        case ">=":
                        case "=>":
                        case "<=l":
                        case "=<l":
                          p2 = v2 >= b2;
                      }
                    }
                    if (p2 || "".concat(c2).toLowerCase().includes(i2))
                      return true;
                  }
                }
              return false;
            }) : this.data, this.options.sortReset && (this.unsortedData = a(this.data)), this.initSort();
          }
        } }, { key: "initPagination", value: function() {
          var t2 = this, e2 = this.options;
          if (e2.pagination) {
            this.$pagination.show();
            var i2, n3, o2, r2, a2, s2, l2, c2 = [], h2 = false, u2 = this.getData({ includeHiddenRows: false }), d2 = e2.pageList;
            if ("string" == typeof d2 && (d2 = d2.replace(/\[|\]| /g, "").toLowerCase().split(",")), d2 = d2.map(function(t3) {
              return "string" == typeof t3 ? t3.toLowerCase() === e2.formatAllRows().toLowerCase() || ["all", "unlimited"].includes(t3.toLowerCase()) ? e2.formatAllRows() : +t3 : t3;
            }), this.paginationParts = e2.paginationParts, "string" == typeof this.paginationParts && (this.paginationParts = this.paginationParts.replace(/\[|\]| |'/g, "").split(",")), "server" !== e2.sidePagination && (e2.totalRows = u2.length), this.totalPages = 0, e2.totalRows && (e2.pageSize === e2.formatAllRows() && (e2.pageSize = e2.totalRows, h2 = true), this.totalPages = 1 + ~~((e2.totalRows - 1) / e2.pageSize), e2.totalPages = this.totalPages), this.totalPages > 0 && e2.pageNumber > this.totalPages && (e2.pageNumber = this.totalPages), this.pageFrom = (e2.pageNumber - 1) * e2.pageSize + 1, this.pageTo = e2.pageNumber * e2.pageSize, this.pageTo > e2.totalRows && (this.pageTo = e2.totalRows), this.options.pagination && "server" !== this.options.sidePagination && (this.options.totalNotFiltered = this.options.data.length), this.options.showExtendedPagination || (this.options.totalNotFiltered = void 0), (this.paginationParts.includes("pageInfo") || this.paginationParts.includes("pageInfoShort") || this.paginationParts.includes("pageSize")) && c2.push('<div class="'.concat(this.constants.classes.pull, "-").concat(e2.paginationDetailHAlign, ' pagination-detail">')), this.paginationParts.includes("pageInfo") || this.paginationParts.includes("pageInfoShort")) {
              var p2 = this.paginationParts.includes("pageInfoShort") ? e2.formatDetailPagination(e2.totalRows) : e2.formatShowingRows(this.pageFrom, this.pageTo, e2.totalRows, e2.totalNotFiltered);
              c2.push('<span class="pagination-info">\n      '.concat(p2, "\n      </span>"));
            }
            if (this.paginationParts.includes("pageSize")) {
              c2.push('<div class="page-list">');
              var f2 = ['<div class="'.concat(this.constants.classes.paginationDropdown, '">\n        <button class="').concat(this.constants.buttonsClass, ' dropdown-toggle" type="button" ').concat(this.constants.dataToggle, '="dropdown">\n        <span class="page-size">\n        ').concat(h2 ? e2.formatAllRows() : e2.pageSize, "\n        </span>\n        ").concat(this.constants.html.dropdownCaret, "\n        </button>\n        ").concat(this.constants.html.pageDropdown[0])];
              d2.forEach(function(i3, n4) {
                var o3;
                (!e2.smartDisplay || 0 === n4 || d2[n4 - 1] < e2.totalRows || i3 === e2.formatAllRows()) && (o3 = h2 ? i3 === e2.formatAllRows() ? t2.constants.classes.dropdownActive : "" : i3 === e2.pageSize ? t2.constants.classes.dropdownActive : "", f2.push(gv.sprintf(t2.constants.html.pageDropdownItem, o3, i3)));
              }), f2.push("".concat(this.constants.html.pageDropdown[1], "</div>")), c2.push(e2.formatRecordsPerPage(f2.join("")));
            }
            if ((this.paginationParts.includes("pageInfo") || this.paginationParts.includes("pageInfoShort") || this.paginationParts.includes("pageSize")) && c2.push("</div></div>"), this.paginationParts.includes("pageList")) {
              c2.push('<div class="'.concat(this.constants.classes.pull, "-").concat(e2.paginationHAlign, ' pagination">'), gv.sprintf(this.constants.html.pagination[0], gv.sprintf(" pagination-%s", e2.iconSize)), gv.sprintf(this.constants.html.paginationItem, " page-pre", e2.formatSRPaginationPreText(), e2.paginationPreText)), this.totalPages < e2.paginationSuccessivelySize ? (n3 = 1, o2 = this.totalPages) : o2 = (n3 = e2.pageNumber - e2.paginationPagesBySide) + 2 * e2.paginationPagesBySide, e2.pageNumber < e2.paginationSuccessivelySize - 1 && (o2 = e2.paginationSuccessivelySize), e2.paginationSuccessivelySize > this.totalPages - n3 && (n3 = n3 - (e2.paginationSuccessivelySize - (this.totalPages - n3)) + 1), n3 < 1 && (n3 = 1), o2 > this.totalPages && (o2 = this.totalPages);
              var g2 = Math.round(e2.paginationPagesBySide / 2), v2 = function(i3) {
                var n4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
                return gv.sprintf(t2.constants.html.paginationItem, n4 + (i3 === e2.pageNumber ? " ".concat(t2.constants.classes.paginationActive) : ""), e2.formatSRPaginationPageText(i3), i3);
              };
              if (n3 > 1) {
                var b2 = e2.paginationPagesBySide;
                for (b2 >= n3 && (b2 = n3 - 1), i2 = 1; i2 <= b2; i2++)
                  c2.push(v2(i2));
                n3 - 1 === b2 + 1 ? (i2 = n3 - 1, c2.push(v2(i2))) : n3 - 1 > b2 && (n3 - 2 * e2.paginationPagesBySide > e2.paginationPagesBySide && e2.paginationUseIntermediate ? (i2 = Math.round((n3 - g2) / 2 + g2), c2.push(v2(i2, " page-intermediate"))) : c2.push(gv.sprintf(this.constants.html.paginationItem, " page-first-separator disabled", "", "...")));
              }
              for (i2 = n3; i2 <= o2; i2++)
                c2.push(v2(i2));
              if (this.totalPages > o2) {
                var m2 = this.totalPages - (e2.paginationPagesBySide - 1);
                for (o2 >= m2 && (m2 = o2 + 1), o2 + 1 === m2 - 1 ? (i2 = o2 + 1, c2.push(v2(i2))) : m2 > o2 + 1 && (this.totalPages - o2 > 2 * e2.paginationPagesBySide && e2.paginationUseIntermediate ? (i2 = Math.round((this.totalPages - g2 - o2) / 2 + o2), c2.push(v2(i2, " page-intermediate"))) : c2.push(gv.sprintf(this.constants.html.paginationItem, " page-last-separator disabled", "", "..."))), i2 = m2; i2 <= this.totalPages; i2++)
                  c2.push(v2(i2));
              }
              c2.push(gv.sprintf(this.constants.html.paginationItem, " page-next", e2.formatSRPaginationNextText(), e2.paginationNextText)), c2.push(this.constants.html.pagination[1], "</div>");
            }
            this.$pagination.html(c2.join(""));
            var y2 = ["bottom", "both"].includes(e2.paginationVAlign) ? " ".concat(this.constants.classes.dropup) : "";
            this.$pagination.last().find(".page-list > div").addClass(y2), e2.onlyInfoPagination || (r2 = this.$pagination.find(".page-list a"), a2 = this.$pagination.find(".page-pre"), s2 = this.$pagination.find(".page-next"), l2 = this.$pagination.find(".page-item").not(".page-next, .page-pre, .page-last-separator, .page-first-separator"), this.totalPages <= 1 && this.$pagination.find("div.pagination").hide(), e2.smartDisplay && (d2.length < 2 || e2.totalRows <= d2[0]) && this.$pagination.find("div.page-list").hide(), this.$pagination[this.getData().length ? "show" : "hide"](), e2.paginationLoop || (1 === e2.pageNumber && a2.addClass("disabled"), e2.pageNumber === this.totalPages && s2.addClass("disabled")), h2 && (e2.pageSize = e2.formatAllRows()), r2.off("click").on("click", function(e3) {
              return t2.onPageListChange(e3);
            }), a2.off("click").on("click", function(e3) {
              return t2.onPagePre(e3);
            }), s2.off("click").on("click", function(e3) {
              return t2.onPageNext(e3);
            }), l2.off("click").on("click", function(e3) {
              return t2.onPageNumber(e3);
            }));
          } else
            this.$pagination.hide();
        } }, { key: "updatePagination", value: function(e2) {
          e2 && t(e2.currentTarget).hasClass("disabled") || (this.options.maintainMetaData || this.resetRows(), this.initPagination(), this.trigger("page-change", this.options.pageNumber, this.options.pageSize), "server" === this.options.sidePagination ? this.initServer() : this.initBody());
        } }, { key: "onPageListChange", value: function(e2) {
          e2.preventDefault();
          var i2 = t(e2.currentTarget);
          return i2.parent().addClass(this.constants.classes.dropdownActive).siblings().removeClass(this.constants.classes.dropdownActive), this.options.pageSize = i2.text().toUpperCase() === this.options.formatAllRows().toUpperCase() ? this.options.formatAllRows() : +i2.text(), this.$toolbar.find(".page-size").text(this.options.pageSize), this.updatePagination(e2), false;
        } }, { key: "onPagePre", value: function(e2) {
          if (!t(e2.target).hasClass("disabled"))
            return e2.preventDefault(), this.options.pageNumber - 1 == 0 ? this.options.pageNumber = this.options.totalPages : this.options.pageNumber--, this.updatePagination(e2), false;
        } }, { key: "onPageNext", value: function(e2) {
          if (!t(e2.target).hasClass("disabled"))
            return e2.preventDefault(), this.options.pageNumber + 1 > this.options.totalPages ? this.options.pageNumber = 1 : this.options.pageNumber++, this.updatePagination(e2), false;
        } }, { key: "onPageNumber", value: function(e2) {
          if (e2.preventDefault(), this.options.pageNumber !== +t(e2.currentTarget).text())
            return this.options.pageNumber = +t(e2.currentTarget).text(), this.updatePagination(e2), false;
        } }, { key: "initRow", value: function(t2, i2, n3, o2) {
          var a2 = this, s2 = [], l2 = {}, c2 = [], h2 = "", u2 = {}, d2 = [];
          if (!(gv.findIndex(this.hiddenRows, t2) > -1)) {
            if ((l2 = gv.calculateObjectValue(this.options, this.options.rowStyle, [t2, i2], l2)) && l2.css)
              for (var p2 = 0, f2 = Object.entries(l2.css); p2 < f2.length; p2++) {
                var g2 = r(f2[p2], 2), v2 = g2[0], b2 = g2[1];
                c2.push("".concat(v2, ": ").concat(b2));
              }
            if (u2 = gv.calculateObjectValue(this.options, this.options.rowAttributes, [t2, i2], u2))
              for (var m2 = 0, y2 = Object.entries(u2); m2 < y2.length; m2++) {
                var w2 = r(y2[m2], 2), S2 = w2[0], x2 = w2[1];
                d2.push("".concat(S2, '="').concat(gv.escapeHTML(x2), '"'));
              }
            if (t2._data && !gv.isEmptyObject(t2._data))
              for (var O2 = 0, k2 = Object.entries(t2._data); O2 < k2.length; O2++) {
                var C2 = r(k2[O2], 2), T2 = C2[0], P2 = C2[1];
                if ("index" === T2)
                  return;
                h2 += " data-".concat(T2, "='").concat("object" === e(P2) ? JSON.stringify(P2) : P2, "'");
              }
            s2.push("<tr", gv.sprintf(" %s", d2.length ? d2.join(" ") : void 0), gv.sprintf(' id="%s"', Array.isArray(t2) ? void 0 : t2._id), gv.sprintf(' class="%s"', l2.classes || (Array.isArray(t2) ? void 0 : t2._class)), gv.sprintf(' style="%s"', Array.isArray(t2) ? void 0 : t2._style), ' data-index="'.concat(i2, '"'), gv.sprintf(' data-uniqueid="%s"', gv.getItemField(t2, this.options.uniqueId, false)), gv.sprintf(' data-has-detail-view="%s"', this.options.detailView && gv.calculateObjectValue(null, this.options.detailFilter, [i2, t2]) ? "true" : void 0), gv.sprintf("%s", h2), ">"), this.options.cardView && s2.push('<td colspan="'.concat(this.header.fields.length, '"><div class="card-views">'));
            var I2 = "";
            return gv.hasDetailViewIcon(this.options) && (I2 = "<td>", gv.calculateObjectValue(null, this.options.detailFilter, [i2, t2]) && (I2 += '\n          <a class="detail-icon" href="#">\n          '.concat(gv.sprintf(this.constants.html.icon, this.options.iconsPrefix, this.options.icons.detailOpen), "\n          </a>\n        ")), I2 += "</td>"), I2 && "right" !== this.options.detailViewAlign && s2.push(I2), this.header.fields.forEach(function(e2, n4) {
              var o3 = a2.columns[n4], l3 = "", h3 = gv.getItemField(t2, e2, a2.options.escape, o3.escape), u3 = "", d3 = "", p3 = {}, f3 = "", g3 = a2.header.classes[n4], v3 = "", b3 = "", m3 = "", y3 = "", w3 = "", S3 = "";
              if ((!a2.fromHtml && !a2.autoMergeCells || void 0 !== h3 || o3.checkbox || o3.radio) && o3.visible && (!a2.options.cardView || o3.cardVisible)) {
                if (c2.concat([a2.header.styles[n4]]).length && (b3 += "".concat(c2.concat([a2.header.styles[n4]]).join("; "))), t2["_".concat(e2, "_style")] && (b3 += "".concat(t2["_".concat(e2, "_style")])), b3 && (v3 = ' style="'.concat(b3, '"')), t2["_".concat(e2, "_id")] && (f3 = gv.sprintf(' id="%s"', t2["_".concat(e2, "_id")])), t2["_".concat(e2, "_class")] && (g3 = gv.sprintf(' class="%s"', t2["_".concat(e2, "_class")])), t2["_".concat(e2, "_rowspan")] && (y3 = gv.sprintf(' rowspan="%s"', t2["_".concat(e2, "_rowspan")])), t2["_".concat(e2, "_colspan")] && (w3 = gv.sprintf(' colspan="%s"', t2["_".concat(e2, "_colspan")])), t2["_".concat(e2, "_title")] && (S3 = gv.sprintf(' title="%s"', t2["_".concat(e2, "_title")])), (p3 = gv.calculateObjectValue(a2.header, a2.header.cellStyles[n4], [h3, t2, i2, e2], p3)).classes && (g3 = ' class="'.concat(p3.classes, '"')), p3.css) {
                  for (var x3 = [], O3 = 0, k3 = Object.entries(p3.css); O3 < k3.length; O3++) {
                    var C3 = r(k3[O3], 2), T3 = C3[0], P3 = C3[1];
                    x3.push("".concat(T3, ": ").concat(P3));
                  }
                  v3 = ' style="'.concat(x3.concat(a2.header.styles[n4]).join("; "), '"');
                }
                if (u3 = gv.calculateObjectValue(o3, a2.header.formatters[n4], [h3, t2, i2, e2], h3), o3.checkbox || o3.radio || (u3 = null == u3 ? a2.options.undefinedText : u3), o3.searchable && a2.searchText && a2.options.searchHighlight && !o3.checkbox && !o3.radio) {
                  var I3 = "", A2 = a2.searchText.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
                  if (a2.options.searchAccentNeutralise) {
                    var $2 = new RegExp("".concat(gv.normalizeAccent(A2)), "gmi").exec(gv.normalizeAccent(u3));
                    $2 && (A2 = u3.substring($2.index, $2.index + A2.length));
                  }
                  var R2 = new RegExp("(".concat(A2, ")"), "gim"), E2 = "<mark>$1</mark>";
                  if (u3 && /<(?=.*? .*?\/ ?>|br|hr|input|!--|wbr)[a-z]+.*?>|<([a-z]+).*?<\/\1>/i.test(u3)) {
                    var j2 = new DOMParser().parseFromString(u3.toString(), "text/html").documentElement.textContent, _2 = j2.replace(R2, E2);
                    j2 = j2.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"), I3 = u3.replace(new RegExp("(>\\s*)(".concat(j2, ")(\\s*)"), "gm"), "$1".concat(_2, "$3"));
                  } else
                    I3 = u3.toString().replace(R2, E2);
                  u3 = gv.calculateObjectValue(o3, o3.searchHighlightFormatter, [u3, a2.searchText], I3);
                }
                if (t2["_".concat(e2, "_data")] && !gv.isEmptyObject(t2["_".concat(e2, "_data")]))
                  for (var F2 = 0, N2 = Object.entries(t2["_".concat(e2, "_data")]); F2 < N2.length; F2++) {
                    var D2 = r(N2[F2], 2), V2 = D2[0], B2 = D2[1];
                    if ("index" === V2)
                      return;
                    m3 += " data-".concat(V2, '="').concat(B2, '"');
                  }
                if (o3.checkbox || o3.radio) {
                  d3 = o3.checkbox ? "checkbox" : d3, d3 = o3.radio ? "radio" : d3;
                  var L2 = o3.class || "", H2 = gv.isObject(u3) && u3.hasOwnProperty("checked") ? u3.checked : (true === u3 || h3) && false !== u3, M2 = !o3.checkboxEnabled || u3 && u3.disabled;
                  l3 = [a2.options.cardView ? '<div class="card-view '.concat(L2, '">') : '<td class="bs-checkbox '.concat(L2, '"').concat(g3).concat(v3, ">"), '<label>\n            <input\n            data-index="'.concat(i2, '"\n            name="').concat(a2.options.selectItemName, '"\n            type="').concat(d3, '"\n            ').concat(gv.sprintf('value="%s"', t2[a2.options.idField]), "\n            ").concat(gv.sprintf('checked="%s"', H2 ? "checked" : void 0), "\n            ").concat(gv.sprintf('disabled="%s"', M2 ? "disabled" : void 0), " />\n            <span></span>\n            </label>"), a2.header.formatters[n4] && "string" == typeof u3 ? u3 : "", a2.options.cardView ? "</div>" : "</td>"].join(""), t2[a2.header.stateField] = true === u3 || !!h3 || u3 && u3.checked;
                } else if (a2.options.cardView) {
                  var U2 = a2.options.showHeader ? '<span class="card-view-title '.concat(p3.classes || "", '"').concat(v3, ">").concat(gv.getFieldTitle(a2.columns, e2), "</span>") : "";
                  l3 = '<div class="card-view">'.concat(U2, '<span class="card-view-value ').concat(p3.classes || "", '"').concat(v3, ">").concat(u3, "</span></div>"), a2.options.smartDisplay && "" === u3 && (l3 = '<div class="card-view"></div>');
                } else
                  l3 = "<td".concat(f3).concat(g3).concat(v3).concat(m3).concat(y3).concat(w3).concat(S3, ">").concat(u3, "</td>");
                s2.push(l3);
              }
            }), I2 && "right" === this.options.detailViewAlign && s2.push(I2), this.options.cardView && s2.push("</div></td>"), s2.push("</tr>"), s2.join("");
          }
        } }, { key: "initBody", value: function(e2, i2) {
          var n3 = this, o2 = this.getData();
          this.trigger("pre-body", o2), this.$body = this.$el.find(">tbody"), this.$body.length || (this.$body = t("<tbody></tbody>").appendTo(this.$el)), this.options.pagination && "server" !== this.options.sidePagination || (this.pageFrom = 1, this.pageTo = o2.length);
          var r2 = [], a2 = t(document.createDocumentFragment()), s2 = false, l2 = [];
          this.autoMergeCells = gv.checkAutoMergeCells(o2.slice(this.pageFrom - 1, this.pageTo));
          for (var c2 = this.pageFrom - 1; c2 < this.pageTo; c2++) {
            var h2 = o2[c2], u2 = this.initRow(h2, c2, o2, a2);
            if (s2 = s2 || !!u2, u2 && "string" == typeof u2) {
              var d2 = this.options.uniqueId;
              if (d2 && h2.hasOwnProperty(d2)) {
                var p2 = h2[d2], f2 = this.$body.find(gv.sprintf('> tr[data-uniqueid="%s"][data-has-detail-view]', p2)).next();
                f2.is("tr.detail-view") && (l2.push(c2), i2 && p2 === i2 || (u2 += f2[0].outerHTML));
              }
              this.options.virtualScroll ? r2.push(u2) : a2.append(u2);
            }
          }
          s2 ? this.options.virtualScroll ? (this.virtualScroll && this.virtualScroll.destroy(), this.virtualScroll = new xv({ rows: r2, fixedScroll: e2, scrollEl: this.$tableBody[0], contentEl: this.$body[0], itemHeight: this.options.virtualScrollItemHeight, callback: function(t2, e3) {
            n3.fitHeader(), n3.initBodyEvent(), n3.trigger("virtual-scroll", t2, e3);
          } })) : this.$body.html(a2) : this.$body.html('<tr class="no-records-found">'.concat(gv.sprintf('<td colspan="%s">%s</td>', this.getVisibleFields().length + gv.getDetailViewIndexOffset(this.options), this.options.formatNoMatches()), "</tr>")), l2.forEach(function(t2) {
            n3.expandRow(t2);
          }), e2 || this.scrollTo(0), this.initBodyEvent(), this.initFooter(), this.resetView(), this.updateSelected(), "server" !== this.options.sidePagination && (this.options.totalRows = o2.length), this.trigger("post-body", o2);
        } }, { key: "initBodyEvent", value: function() {
          var e2 = this;
          this.$body.find("> tr[data-index] > td").off("click dblclick").on("click dblclick", function(i2) {
            var n3 = t(i2.currentTarget);
            if (!(n3.find(".detail-icon").length || n3.index() - gv.getDetailViewIndexOffset(e2.options) < 0)) {
              var o2 = n3.parent(), r2 = t(i2.target).parents(".card-views").children(), a2 = t(i2.target).parents(".card-view"), s2 = o2.data("index"), l2 = e2.data[s2], c2 = e2.options.cardView ? r2.index(a2) : n3[0].cellIndex, h2 = e2.getVisibleFields()[c2 - gv.getDetailViewIndexOffset(e2.options)], u2 = e2.columns[e2.fieldsColumnsIndex[h2]], d2 = gv.getItemField(l2, h2, e2.options.escape, u2.escape);
              if (e2.trigger("click" === i2.type ? "click-cell" : "dbl-click-cell", h2, d2, l2, n3), e2.trigger("click" === i2.type ? "click-row" : "dbl-click-row", l2, o2, h2), "click" === i2.type && e2.options.clickToSelect && u2.clickToSelect && !gv.calculateObjectValue(e2.options, e2.options.ignoreClickToSelectOn, [i2.target])) {
                var p2 = o2.find(gv.sprintf('[name="%s"]', e2.options.selectItemName));
                p2.length && p2[0].click();
              }
              "click" === i2.type && e2.options.detailViewByClick && e2.toggleDetailView(s2, e2.header.detailFormatters[e2.fieldsColumnsIndex[h2]]);
            }
          }).off("mousedown").on("mousedown", function(t2) {
            e2.multipleSelectRowCtrlKey = t2.ctrlKey || t2.metaKey, e2.multipleSelectRowShiftKey = t2.shiftKey;
          }), this.$body.find("> tr[data-index] > td > .detail-icon").off("click").on("click", function(i2) {
            return i2.preventDefault(), e2.toggleDetailView(t(i2.currentTarget).parent().parent().data("index")), false;
          }), this.$selectItem = this.$body.find(gv.sprintf('[name="%s"]', this.options.selectItemName)), this.$selectItem.off("click").on("click", function(i2) {
            i2.stopImmediatePropagation();
            var n3 = t(i2.currentTarget);
            e2._toggleCheck(n3.prop("checked"), n3.data("index"));
          }), this.header.events.forEach(function(i2, n3) {
            var o2 = i2;
            if (o2) {
              if ("string" == typeof o2 && (o2 = gv.calculateObjectValue(null, o2)), !o2)
                throw new Error("Unknown event in the scope: ".concat(i2));
              var r2 = e2.header.fields[n3], a2 = e2.getVisibleFields().indexOf(r2);
              if (-1 !== a2) {
                a2 += gv.getDetailViewIndexOffset(e2.options);
                var s2 = function(i3) {
                  if (!o2.hasOwnProperty(i3))
                    return "continue";
                  var n4 = o2[i3];
                  e2.$body.find(">tr:not(.no-records-found)").each(function(o3, s3) {
                    var l3 = t(s3), c2 = l3.find(e2.options.cardView ? ".card-views>.card-view" : ">td").eq(a2), h2 = i3.indexOf(" "), u2 = i3.substring(0, h2), d2 = i3.substring(h2 + 1);
                    c2.find(d2).off(u2).on(u2, function(t2) {
                      var i4 = l3.data("index"), o4 = e2.data[i4], a3 = o4[r2];
                      n4.apply(e2, [t2, a3, o4, i4]);
                    });
                  });
                };
                for (var l2 in o2)
                  s2(l2);
              }
            }
          });
        } }, { key: "initServer", value: function(e2, i2, n3) {
          var o2 = this, r2 = {}, a2 = this.header.fields.indexOf(this.options.sortName), s2 = { searchText: this.searchText, sortName: this.options.sortName, sortOrder: this.options.sortOrder };
          if (this.header.sortNames[a2] && (s2.sortName = this.header.sortNames[a2]), this.options.pagination && "server" === this.options.sidePagination && (s2.pageSize = this.options.pageSize === this.options.formatAllRows() ? this.options.totalRows : this.options.pageSize, s2.pageNumber = this.options.pageNumber), n3 || this.options.url || this.options.ajax) {
            if ("limit" === this.options.queryParamsType && (s2 = { search: s2.searchText, sort: s2.sortName, order: s2.sortOrder }, this.options.pagination && "server" === this.options.sidePagination && (s2.offset = this.options.pageSize === this.options.formatAllRows() ? 0 : this.options.pageSize * (this.options.pageNumber - 1), s2.limit = this.options.pageSize, 0 !== s2.limit && this.options.pageSize !== this.options.formatAllRows() || delete s2.limit)), this.options.search && "server" === this.options.sidePagination && this.options.searchable && this.columns.filter(function(t2) {
              return t2.searchable;
            }).length) {
              s2.searchable = [];
              var l2, h2 = c(this.columns);
              try {
                for (h2.s(); !(l2 = h2.n()).done; ) {
                  var u2 = l2.value;
                  !u2.checkbox && u2.searchable && (this.options.visibleSearch && u2.visible || !this.options.visibleSearch) && s2.searchable.push(u2.field);
                }
              } catch (t2) {
                h2.e(t2);
              } finally {
                h2.f();
              }
            }
            if (gv.isEmptyObject(this.filterColumnsPartial) || (s2.filter = JSON.stringify(this.filterColumnsPartial, null)), gv.extend(s2, i2 || {}), false !== (r2 = gv.calculateObjectValue(this.options, this.options.queryParams, [s2], r2))) {
              e2 || this.showLoading();
              var d2 = gv.extend({}, gv.calculateObjectValue(null, this.options.ajaxOptions), { type: this.options.method, url: n3 || this.options.url, data: "application/json" === this.options.contentType && "post" === this.options.method ? JSON.stringify(r2) : r2, cache: this.options.cache, contentType: this.options.contentType, dataType: this.options.dataType, success: function(t2, i3, n4) {
                var r3 = gv.calculateObjectValue(o2.options, o2.options.responseHandler, [t2, n4], t2);
                o2.load(r3), o2.trigger("load-success", r3, n4 && n4.status, n4), e2 || o2.hideLoading(), "server" === o2.options.sidePagination && o2.options.pageNumber > 1 && r3[o2.options.totalField] > 0 && !r3[o2.options.dataField].length && o2.updatePagination();
              }, error: function(t2) {
                if (t2 && 0 === t2.status && o2._xhrAbort)
                  o2._xhrAbort = false;
                else {
                  var i3 = [];
                  "server" === o2.options.sidePagination && ((i3 = {})[o2.options.totalField] = 0, i3[o2.options.dataField] = []), o2.load(i3), o2.trigger("load-error", t2 && t2.status, t2), e2 || o2.hideLoading();
                }
              } });
              return this.options.ajax ? gv.calculateObjectValue(this, this.options.ajax, [d2], null) : (this._xhr && 4 !== this._xhr.readyState && (this._xhrAbort = true, this._xhr.abort()), this._xhr = t.ajax(d2)), r2;
            }
          }
        } }, { key: "initSearchText", value: function() {
          if (this.options.search && (this.searchText = "", "" !== this.options.searchText)) {
            var t2 = gv.getSearchInput(this);
            t2.val(this.options.searchText), this.onSearch({ currentTarget: t2, firedByInitSearchText: true });
          }
        } }, { key: "getCaret", value: function() {
          var e2 = this;
          this.$header.find("th").each(function(i2, n3) {
            t(n3).find(".sortable").removeClass("desc asc").addClass(t(n3).data("field") === e2.options.sortName ? e2.options.sortOrder : "both");
          });
        } }, { key: "updateSelected", value: function() {
          var e2 = this.$selectItem.filter(":enabled").length && this.$selectItem.filter(":enabled").length === this.$selectItem.filter(":enabled").filter(":checked").length;
          this.$selectAll.add(this.$selectAll_).prop("checked", e2), this.$selectItem.each(function(e3, i2) {
            t(i2).closest("tr")[t(i2).prop("checked") ? "addClass" : "removeClass"]("selected");
          });
        } }, { key: "updateRows", value: function() {
          var e2 = this;
          this.$selectItem.each(function(i2, n3) {
            e2.data[t(n3).data("index")][e2.header.stateField] = t(n3).prop("checked");
          });
        } }, { key: "resetRows", value: function() {
          var t2, e2 = c(this.data);
          try {
            for (e2.s(); !(t2 = e2.n()).done; ) {
              var i2 = t2.value;
              this.$selectAll.prop("checked", false), this.$selectItem.prop("checked", false), this.header.stateField && (i2[this.header.stateField] = false);
            }
          } catch (t3) {
            e2.e(t3);
          } finally {
            e2.f();
          }
          this.initHiddenRows();
        } }, { key: "trigger", value: function(e2) {
          for (var i2, o2, r2 = "".concat(e2, ".bs.table"), a2 = arguments.length, s2 = new Array(a2 > 1 ? a2 - 1 : 0), l2 = 1; l2 < a2; l2++)
            s2[l2 - 1] = arguments[l2];
          (i2 = this.options)[n2.EVENTS[r2]].apply(i2, [].concat(s2, [this])), this.$el.trigger(t.Event(r2, { sender: this }), s2), (o2 = this.options).onAll.apply(o2, [r2].concat([].concat(s2, [this]))), this.$el.trigger(t.Event("all.bs.table", { sender: this }), [r2, s2]);
        } }, { key: "resetHeader", value: function() {
          var t2 = this;
          clearTimeout(this.timeoutId_), this.timeoutId_ = setTimeout(function() {
            return t2.fitHeader();
          }, this.$el.is(":hidden") ? 100 : 0);
        } }, { key: "fitHeader", value: function() {
          var e2 = this;
          if (this.$el.is(":hidden"))
            this.timeoutId_ = setTimeout(function() {
              return e2.fitHeader();
            }, 100);
          else {
            var i2 = this.$tableBody.get(0), n3 = this.hasScrollBar && i2.scrollHeight > i2.clientHeight + this.$header.outerHeight() ? gv.getScrollBarWidth() : 0;
            this.$el.css("margin-top", -this.$header.outerHeight());
            var o2 = this.$tableHeader.find(":focus");
            if (o2.length > 0) {
              var r2 = o2.parents("th");
              if (r2.length > 0) {
                var a2 = r2.attr("data-field");
                if (void 0 !== a2) {
                  var s2 = this.$header.find("[data-field='".concat(a2, "']"));
                  s2.length > 0 && s2.find(":input").addClass("focus-temp");
                }
              }
            }
            this.$header_ = this.$header.clone(true, true), this.$selectAll_ = this.$header_.find('[name="btSelectAll"]'), this.$tableHeader.css("margin-right", n3).find("table").css("width", this.$el.outerWidth()).html("").attr("class", this.$el.attr("class")).append(this.$header_), this.$tableLoading.css("width", this.$el.outerWidth());
            var l2 = t(".focus-temp:visible:eq(0)");
            l2.length > 0 && (l2.focus(), this.$header.find(".focus-temp").removeClass("focus-temp")), this.$header.find("th[data-field]").each(function(i3, n4) {
              e2.$header_.find(gv.sprintf('th[data-field="%s"]', t(n4).data("field"))).data(t(n4).data());
            });
            for (var c2 = this.getVisibleFields(), h2 = this.$header_.find("th"), u2 = this.$body.find(">tr:not(.no-records-found,.virtual-scroll-top)").eq(0); u2.length && u2.find('>td[colspan]:not([colspan="1"])').length; )
              u2 = u2.next();
            var d2 = u2.find("> *").length;
            u2.find("> *").each(function(i3, n4) {
              var o3 = t(n4);
              if (gv.hasDetailViewIcon(e2.options) && (0 === i3 && "right" !== e2.options.detailViewAlign || i3 === d2 - 1 && "right" === e2.options.detailViewAlign)) {
                var r3 = h2.filter(".detail"), a3 = r3.innerWidth() - r3.find(".fht-cell").width();
                r3.find(".fht-cell").width(o3.innerWidth() - a3);
              } else {
                var s3 = i3 - gv.getDetailViewIndexOffset(e2.options), l3 = e2.$header_.find(gv.sprintf('th[data-field="%s"]', c2[s3]));
                l3.length > 1 && (l3 = t(h2[o3[0].cellIndex]));
                var u3 = l3.innerWidth() - l3.find(".fht-cell").width();
                l3.find(".fht-cell").width(o3.innerWidth() - u3);
              }
            }), this.horizontalScroll(), this.trigger("post-header");
          }
        } }, { key: "initFooter", value: function() {
          if (this.options.showFooter && !this.options.cardView) {
            var t2 = this.getData(), e2 = [], i2 = "";
            gv.hasDetailViewIcon(this.options) && (i2 = '<th class="detail"><div class="th-inner"></div><div class="fht-cell"></div></th>'), i2 && "right" !== this.options.detailViewAlign && e2.push(i2);
            var n3, o2 = c(this.columns);
            try {
              for (o2.s(); !(n3 = o2.n()).done; ) {
                var a2, s2, l2 = n3.value, h2 = [], u2 = {}, d2 = gv.sprintf(' class="%s"', l2.class);
                if (!(!l2.visible || this.footerData && this.footerData.length > 0 && !(l2.field in this.footerData[0]))) {
                  if (this.options.cardView && !l2.cardVisible)
                    return;
                  if (a2 = gv.sprintf("text-align: %s; ", l2.falign ? l2.falign : l2.align), s2 = gv.sprintf("vertical-align: %s; ", l2.valign), (u2 = gv.calculateObjectValue(null, this.options.footerStyle, [l2])) && u2.css)
                    for (var p2 = 0, f2 = Object.entries(u2.css); p2 < f2.length; p2++) {
                      var g2 = r(f2[p2], 2), v2 = g2[0], b2 = g2[1];
                      h2.push("".concat(v2, ": ").concat(b2));
                    }
                  u2 && u2.classes && (d2 = gv.sprintf(' class="%s"', l2.class ? [l2.class, u2.classes].join(" ") : u2.classes)), e2.push("<th", d2, gv.sprintf(' style="%s"', a2 + s2 + h2.concat().join("; ")));
                  var m2 = 0;
                  this.footerData && this.footerData.length > 0 && (m2 = this.footerData[0]["_".concat(l2.field, "_colspan")] || 0), m2 && e2.push(' colspan="'.concat(m2, '" ')), e2.push(">"), e2.push('<div class="th-inner">');
                  var y2 = "";
                  this.footerData && this.footerData.length > 0 && (y2 = this.footerData[0][l2.field] || ""), e2.push(gv.calculateObjectValue(l2, l2.footerFormatter, [t2, y2], y2)), e2.push("</div>"), e2.push('<div class="fht-cell"></div>'), e2.push("</div>"), e2.push("</th>");
                }
              }
            } catch (t3) {
              o2.e(t3);
            } finally {
              o2.f();
            }
            i2 && "right" === this.options.detailViewAlign && e2.push(i2), this.options.height || this.$tableFooter.length || (this.$el.append("<tfoot><tr></tr></tfoot>"), this.$tableFooter = this.$el.find("tfoot")), this.$tableFooter.find("tr").length || this.$tableFooter.html("<table><thead><tr></tr></thead></table>"), this.$tableFooter.find("tr").html(e2.join("")), this.trigger("post-footer", this.$tableFooter);
          }
        } }, { key: "fitFooter", value: function() {
          var e2 = this;
          if (this.$el.is(":hidden"))
            setTimeout(function() {
              return e2.fitFooter();
            }, 100);
          else {
            var i2 = this.$tableBody.get(0), n3 = this.hasScrollBar && i2.scrollHeight > i2.clientHeight + this.$header.outerHeight() ? gv.getScrollBarWidth() : 0;
            this.$tableFooter.css("margin-right", n3).find("table").css("width", this.$el.outerWidth()).attr("class", this.$el.attr("class"));
            var o2 = this.$tableFooter.find("th"), r2 = this.$body.find(">tr:first-child:not(.no-records-found)");
            for (o2.find(".fht-cell").width("auto"); r2.length && r2.find('>td[colspan]:not([colspan="1"])').length; )
              r2 = r2.next();
            var a2 = r2.find("> *").length;
            r2.find("> *").each(function(i3, n4) {
              var r3 = t(n4);
              if (gv.hasDetailViewIcon(e2.options) && (0 === i3 && "left" === e2.options.detailViewAlign || i3 === a2 - 1 && "right" === e2.options.detailViewAlign)) {
                var s2 = o2.filter(".detail"), l2 = s2.innerWidth() - s2.find(".fht-cell").width();
                s2.find(".fht-cell").width(r3.innerWidth() - l2);
              } else {
                var c2 = o2.eq(i3), h2 = c2.innerWidth() - c2.find(".fht-cell").width();
                c2.find(".fht-cell").width(r3.innerWidth() - h2);
              }
            }), this.horizontalScroll();
          }
        } }, { key: "horizontalScroll", value: function() {
          var t2 = this;
          this.$tableBody.off("scroll").on("scroll", function() {
            var e2 = t2.$tableBody.scrollLeft();
            t2.options.showHeader && t2.options.height && t2.$tableHeader.scrollLeft(e2), t2.options.showFooter && !t2.options.cardView && t2.$tableFooter.scrollLeft(e2), t2.trigger("scroll-body", t2.$tableBody);
          });
        } }, { key: "getVisibleFields", value: function() {
          var t2, e2 = [], i2 = c(this.header.fields);
          try {
            for (i2.s(); !(t2 = i2.n()).done; ) {
              var n3 = t2.value, o2 = this.columns[this.fieldsColumnsIndex[n3]];
              o2 && o2.visible && (!this.options.cardView || o2.cardVisible) && e2.push(n3);
            }
          } catch (t3) {
            i2.e(t3);
          } finally {
            i2.f();
          }
          return e2;
        } }, { key: "initHiddenRows", value: function() {
          this.hiddenRows = [];
        } }, { key: "getOptions", value: function() {
          var t2 = gv.extend({}, this.options);
          return delete t2.data, gv.extend(true, {}, t2);
        } }, { key: "refreshOptions", value: function(t2) {
          gv.compareObjects(this.options, t2, true) || (this.options = gv.extend(this.options, t2), this.trigger("refresh-options", this.options), this.destroy(), this.init());
        } }, { key: "getData", value: function(t2) {
          var e2 = this, i2 = this.options.data;
          if (!(this.searchText || this.options.customSearch || void 0 !== this.options.sortName || this.enableCustomSort) && gv.isEmptyObject(this.filterColumns) && "function" != typeof this.options.filterOptions.filterAlgorithm && gv.isEmptyObject(this.filterColumnsPartial) || t2 && t2.unfiltered || (i2 = this.data), t2 && !t2.includeHiddenRows) {
            var n3 = this.getHiddenRows();
            i2 = i2.filter(function(t3) {
              return -1 === gv.findIndex(n3, t3);
            });
          }
          return t2 && t2.useCurrentPage && (i2 = i2.slice(this.pageFrom - 1, this.pageTo)), t2 && t2.formatted && i2.forEach(function(t3) {
            for (var i3 = 0, n4 = Object.entries(t3); i3 < n4.length; i3++) {
              var o2 = r(n4[i3], 2), a2 = o2[0], s2 = o2[1], l2 = e2.columns[e2.fieldsColumnsIndex[a2]];
              if (!l2)
                return;
              t3[a2] = gv.calculateObjectValue(l2, e2.header.formatters[l2.fieldIndex], [s2, t3, t3.index, l2.field], s2);
            }
          }), i2;
        } }, { key: "getSelections", value: function() {
          var t2 = this;
          return (this.options.maintainMetaData ? this.options.data : this.data).filter(function(e2) {
            return true === e2[t2.header.stateField];
          });
        } }, { key: "load", value: function(t2) {
          var e2, i2 = t2;
          this.options.pagination && "server" === this.options.sidePagination && (this.options.totalRows = i2[this.options.totalField], this.options.totalNotFiltered = i2[this.options.totalNotFilteredField], this.footerData = i2[this.options.footerField] ? [i2[this.options.footerField]] : void 0), e2 = i2.fixedScroll, i2 = Array.isArray(i2) ? i2 : i2[this.options.dataField], this.initData(i2), this.initSearch(), this.initPagination(), this.initBody(e2);
        } }, { key: "append", value: function(t2) {
          this.initData(t2, "append"), this.initSearch(), this.initPagination(), this.initSort(), this.initBody(true);
        } }, { key: "prepend", value: function(t2) {
          this.initData(t2, "prepend"), this.initSearch(), this.initPagination(), this.initSort(), this.initBody(true);
        } }, { key: "remove", value: function(t2) {
          for (var e2 = 0, i2 = this.options.data.length - 1; i2 >= 0; i2--) {
            var n3 = this.options.data[i2], o2 = gv.getItemField(n3, t2.field, this.options.escape, n3.escape);
            void 0 === o2 && "$index" !== t2.field || (!n3.hasOwnProperty(t2.field) && "$index" === t2.field && t2.values.includes(i2) || t2.values.includes(o2)) && (e2++, this.options.data.splice(i2, 1));
          }
          e2 && ("server" === this.options.sidePagination && (this.options.totalRows -= e2, this.data = a(this.options.data)), this.initSearch(), this.initPagination(), this.initSort(), this.initBody(true));
        } }, { key: "removeAll", value: function() {
          this.options.data.length > 0 && (this.options.data.splice(0, this.options.data.length), this.initSearch(), this.initPagination(), this.initBody(true));
        } }, { key: "insertRow", value: function(t2) {
          t2.hasOwnProperty("index") && t2.hasOwnProperty("row") && (this.options.data.splice(t2.index, 0, t2.row), this.initSearch(), this.initPagination(), this.initSort(), this.initBody(true));
        } }, { key: "updateRow", value: function(t2) {
          var e2, i2 = c(Array.isArray(t2) ? t2 : [t2]);
          try {
            for (i2.s(); !(e2 = i2.n()).done; ) {
              var n3 = e2.value;
              n3.hasOwnProperty("index") && n3.hasOwnProperty("row") && (n3.hasOwnProperty("replace") && n3.replace ? this.options.data[n3.index] = n3.row : gv.extend(this.options.data[n3.index], n3.row));
            }
          } catch (t3) {
            i2.e(t3);
          } finally {
            i2.f();
          }
          this.initSearch(), this.initPagination(), this.initSort(), this.initBody(true);
        } }, { key: "getRowByUniqueId", value: function(t2) {
          var e2, i2, n3 = this.options.uniqueId, o2 = t2, r2 = null;
          for (e2 = this.options.data.length - 1; e2 >= 0; e2--) {
            i2 = this.options.data[e2];
            var a2 = gv.getItemField(i2, n3, this.options.escape, i2.escape);
            if (void 0 !== a2 && ("string" == typeof a2 ? o2 = o2.toString() : "number" == typeof a2 && (Number(a2) === a2 && a2 % 1 == 0 ? o2 = parseInt(o2, 10) : a2 === Number(a2) && 0 !== a2 && (o2 = parseFloat(o2))), a2 === o2)) {
              r2 = i2;
              break;
            }
          }
          return r2;
        } }, { key: "updateByUniqueId", value: function(t2) {
          var e2, i2 = null, n3 = c(Array.isArray(t2) ? t2 : [t2]);
          try {
            for (n3.s(); !(e2 = n3.n()).done; ) {
              var o2 = e2.value;
              if (o2.hasOwnProperty("id") && o2.hasOwnProperty("row")) {
                var r2 = this.options.data.indexOf(this.getRowByUniqueId(o2.id));
                -1 !== r2 && (o2.hasOwnProperty("replace") && o2.replace ? this.options.data[r2] = o2.row : gv.extend(this.options.data[r2], o2.row), i2 = o2.id);
              }
            }
          } catch (t3) {
            n3.e(t3);
          } finally {
            n3.f();
          }
          this.initSearch(), this.initPagination(), this.initSort(), this.initBody(true, i2);
        } }, { key: "removeByUniqueId", value: function(t2) {
          var e2 = this.options.data.length, i2 = this.getRowByUniqueId(t2);
          i2 && this.options.data.splice(this.options.data.indexOf(i2), 1), e2 !== this.options.data.length && ("server" === this.options.sidePagination && (this.options.totalRows -= 1, this.data = a(this.options.data)), this.initSearch(), this.initPagination(), this.initBody(true));
        } }, { key: "_updateCellOnly", value: function(e2, i2) {
          var n3 = this.initRow(this.options.data[i2], i2), o2 = this.getVisibleFields().indexOf(e2);
          -1 !== o2 && (o2 += gv.getDetailViewIndexOffset(this.options), this.$body.find(">tr[data-index=".concat(i2, "]")).find(">td:eq(".concat(o2, ")")).replaceWith(t(n3).find(">td:eq(".concat(o2, ")"))), this.initBodyEvent(), this.initFooter(), this.resetView(), this.updateSelected());
        } }, { key: "updateCell", value: function(t2) {
          t2.hasOwnProperty("index") && t2.hasOwnProperty("field") && t2.hasOwnProperty("value") && (this.options.data[t2.index][t2.field] = t2.value, false !== t2.reinit ? (this.initSort(), this.initBody(true)) : this._updateCellOnly(t2.field, t2.index));
        } }, { key: "updateCellByUniqueId", value: function(t2) {
          var e2 = this;
          (Array.isArray(t2) ? t2 : [t2]).forEach(function(t3) {
            var i2 = t3.id, n3 = t3.field, o2 = t3.value, r2 = e2.options.data.indexOf(e2.getRowByUniqueId(i2));
            -1 !== r2 && (e2.options.data[r2][n3] = o2);
          }), false !== t2.reinit ? (this.initSort(), this.initBody(true)) : this._updateCellOnly(t2.field, this.options.data.indexOf(this.getRowByUniqueId(t2.id)));
        } }, { key: "showRow", value: function(t2) {
          this._toggleRow(t2, true);
        } }, { key: "hideRow", value: function(t2) {
          this._toggleRow(t2, false);
        } }, { key: "_toggleRow", value: function(t2, e2) {
          var i2;
          if (t2.hasOwnProperty("index") ? i2 = this.getData()[t2.index] : t2.hasOwnProperty("uniqueId") && (i2 = this.getRowByUniqueId(t2.uniqueId)), i2) {
            var n3 = gv.findIndex(this.hiddenRows, i2);
            e2 || -1 !== n3 ? e2 && n3 > -1 && this.hiddenRows.splice(n3, 1) : this.hiddenRows.push(i2), this.initBody(true), this.initPagination();
          }
        } }, { key: "getHiddenRows", value: function(t2) {
          if (t2)
            return this.initHiddenRows(), this.initBody(true), void this.initPagination();
          var e2, i2 = [], n3 = c(this.getData());
          try {
            for (n3.s(); !(e2 = n3.n()).done; ) {
              var o2 = e2.value;
              this.hiddenRows.includes(o2) && i2.push(o2);
            }
          } catch (t3) {
            n3.e(t3);
          } finally {
            n3.f();
          }
          return this.hiddenRows = i2, i2;
        } }, { key: "showColumn", value: function(t2) {
          var e2 = this;
          (Array.isArray(t2) ? t2 : [t2]).forEach(function(t3) {
            e2._toggleColumn(e2.fieldsColumnsIndex[t3], true, true);
          });
        } }, { key: "hideColumn", value: function(t2) {
          var e2 = this;
          (Array.isArray(t2) ? t2 : [t2]).forEach(function(t3) {
            e2._toggleColumn(e2.fieldsColumnsIndex[t3], false, true);
          });
        } }, { key: "_toggleColumn", value: function(t2, e2, i2) {
          if (-1 !== t2 && this.columns[t2].visible !== e2 && (this.columns[t2].visible = e2, this.initHeader(), this.initSearch(), this.initPagination(), this.initBody(), this.options.showColumns)) {
            var n3 = this.$toolbar.find('.keep-open input:not(".toggle-all")').prop("disabled", false);
            i2 && n3.filter(gv.sprintf('[value="%s"]', t2)).prop("checked", e2), n3.filter(":checked").length <= this.options.minimumCountColumns && n3.filter(":checked").prop("disabled", true);
          }
        } }, { key: "getVisibleColumns", value: function() {
          var t2 = this;
          return this.columns.filter(function(e2) {
            return e2.visible && !t2.isSelectionColumn(e2);
          });
        } }, { key: "getHiddenColumns", value: function() {
          return this.columns.filter(function(t2) {
            return !t2.visible;
          });
        } }, { key: "isSelectionColumn", value: function(t2) {
          return t2.radio || t2.checkbox;
        } }, { key: "showAllColumns", value: function() {
          this._toggleAllColumns(true);
        } }, { key: "hideAllColumns", value: function() {
          this._toggleAllColumns(false);
        } }, { key: "_toggleAllColumns", value: function(e2) {
          var i2, n3 = this, o2 = c(this.columns.slice().reverse());
          try {
            for (o2.s(); !(i2 = o2.n()).done; ) {
              var r2 = i2.value;
              if (r2.switchable) {
                if (!e2 && this.options.showColumns && this.getVisibleColumns().filter(function(t2) {
                  return t2.switchable;
                }).length === this.options.minimumCountColumns)
                  continue;
                r2.visible = e2;
              }
            }
          } catch (t2) {
            o2.e(t2);
          } finally {
            o2.f();
          }
          if (this.initHeader(), this.initSearch(), this.initPagination(), this.initBody(), this.options.showColumns) {
            var a2 = this.$toolbar.find('.keep-open input[type="checkbox"]:not(".toggle-all")').prop("disabled", false);
            e2 ? a2.prop("checked", e2) : a2.get().reverse().forEach(function(i3) {
              a2.filter(":checked").length > n3.options.minimumCountColumns && t(i3).prop("checked", e2);
            }), a2.filter(":checked").length <= this.options.minimumCountColumns && a2.filter(":checked").prop("disabled", true);
          }
        } }, { key: "mergeCells", value: function(t2) {
          var e2, i2, n3 = t2.index, o2 = this.getVisibleFields().indexOf(t2.field), r2 = t2.rowspan || 1, a2 = t2.colspan || 1, s2 = this.$body.find(">tr[data-index]");
          o2 += gv.getDetailViewIndexOffset(this.options);
          var l2 = s2.eq(n3).find(">td").eq(o2);
          if (!(n3 < 0 || o2 < 0 || n3 >= this.data.length)) {
            for (e2 = n3; e2 < n3 + r2; e2++)
              for (i2 = o2; i2 < o2 + a2; i2++)
                s2.eq(e2).find(">td").eq(i2).hide();
            l2.attr("rowspan", r2).attr("colspan", a2).show();
          }
        } }, { key: "checkAll", value: function() {
          this._toggleCheckAll(true);
        } }, { key: "uncheckAll", value: function() {
          this._toggleCheckAll(false);
        } }, { key: "_toggleCheckAll", value: function(t2) {
          var e2 = this.getSelections();
          this.$selectAll.add(this.$selectAll_).prop("checked", t2), this.$selectItem.filter(":enabled").prop("checked", t2), this.updateRows(), this.updateSelected();
          var i2 = this.getSelections();
          t2 ? this.trigger("check-all", i2, e2) : this.trigger("uncheck-all", i2, e2);
        } }, { key: "checkInvert", value: function() {
          var e2 = this.$selectItem.filter(":enabled"), i2 = e2.filter(":checked");
          e2.each(function(e3, i3) {
            t(i3).prop("checked", !t(i3).prop("checked"));
          }), this.updateRows(), this.updateSelected(), this.trigger("uncheck-some", i2), i2 = this.getSelections(), this.trigger("check-some", i2);
        } }, { key: "check", value: function(t2) {
          this._toggleCheck(true, t2);
        } }, { key: "uncheck", value: function(t2) {
          this._toggleCheck(false, t2);
        } }, { key: "_toggleCheck", value: function(t2, e2) {
          var i2 = this.$selectItem.filter('[data-index="'.concat(e2, '"]')), n3 = this.data[e2];
          if (i2.is(":radio") || this.options.singleSelect || this.options.multipleSelectRow && !this.multipleSelectRowCtrlKey && !this.multipleSelectRowShiftKey) {
            var o2, a2 = c(this.options.data);
            try {
              for (a2.s(); !(o2 = a2.n()).done; ) {
                o2.value[this.header.stateField] = false;
              }
            } catch (t3) {
              a2.e(t3);
            } finally {
              a2.f();
            }
            this.$selectItem.filter(":checked").not(i2).prop("checked", false);
          }
          if (n3[this.header.stateField] = t2, this.options.multipleSelectRow) {
            if (this.multipleSelectRowShiftKey && this.multipleSelectRowLastSelectedIndex >= 0)
              for (var s2 = r(this.multipleSelectRowLastSelectedIndex < e2 ? [this.multipleSelectRowLastSelectedIndex, e2] : [e2, this.multipleSelectRowLastSelectedIndex], 2), l2 = s2[0], h2 = s2[1], u2 = l2 + 1; u2 < h2; u2++)
                this.data[u2][this.header.stateField] = true, this.$selectItem.filter('[data-index="'.concat(u2, '"]')).prop("checked", true);
            this.multipleSelectRowCtrlKey = false, this.multipleSelectRowShiftKey = false, this.multipleSelectRowLastSelectedIndex = t2 ? e2 : -1;
          }
          i2.prop("checked", t2), this.updateSelected(), this.trigger(t2 ? "check" : "uncheck", this.data[e2], i2);
        } }, { key: "checkBy", value: function(t2) {
          this._toggleCheckBy(true, t2);
        } }, { key: "uncheckBy", value: function(t2) {
          this._toggleCheckBy(false, t2);
        } }, { key: "_toggleCheckBy", value: function(t2, e2) {
          var i2 = this;
          if (e2.hasOwnProperty("field") && e2.hasOwnProperty("values")) {
            var n3 = [];
            this.data.forEach(function(o2, r2) {
              if (!o2.hasOwnProperty(e2.field))
                return false;
              if (e2.values.includes(o2[e2.field])) {
                var a2 = i2.$selectItem.filter(":enabled").filter(gv.sprintf('[data-index="%s"]', r2)), s2 = !!e2.hasOwnProperty("onlyCurrentPage") && e2.onlyCurrentPage;
                if (!(a2 = t2 ? a2.not(":checked") : a2.filter(":checked")).length && s2)
                  return;
                a2.prop("checked", t2), o2[i2.header.stateField] = t2, n3.push(o2), i2.trigger(t2 ? "check" : "uncheck", o2, a2);
              }
            }), this.updateSelected(), this.trigger(t2 ? "check-some" : "uncheck-some", n3);
          }
        } }, { key: "refresh", value: function(t2) {
          t2 && t2.url && (this.options.url = t2.url), t2 && t2.pageNumber && (this.options.pageNumber = t2.pageNumber), t2 && t2.pageSize && (this.options.pageSize = t2.pageSize), this.trigger("refresh", this.initServer(t2 && t2.silent, t2 && t2.query, t2 && t2.url));
        } }, { key: "destroy", value: function() {
          this.$el.insertBefore(this.$container), t(this.options.toolbar).insertBefore(this.$el), this.$container.next().remove(), this.$container.remove(), this.$el.html(this.$el_.html()).css("margin-top", "0").attr("class", this.$el_.attr("class") || "");
          var e2 = gv.getEventName("resize.bootstrap-table", this.$el.attr("id"));
          t(window).off(e2);
        } }, { key: "resetView", value: function(t2) {
          var e2 = 0;
          if (t2 && t2.height && (this.options.height = t2.height), this.$tableContainer.toggleClass("has-card-view", this.options.cardView), this.options.height) {
            var i2 = this.$tableBody.get(0);
            this.hasScrollBar = i2.scrollWidth > i2.clientWidth;
          }
          if (!this.options.cardView && this.options.showHeader && this.options.height ? (this.$tableHeader.show(), this.resetHeader(), e2 += this.$header.outerHeight(true) + 1) : (this.$tableHeader.hide(), this.trigger("post-header")), !this.options.cardView && this.options.showFooter && (this.$tableFooter.show(), this.fitFooter(), this.options.height && (e2 += this.$tableFooter.outerHeight(true))), this.$container.hasClass("fullscreen"))
            this.$tableContainer.css("height", ""), this.$tableContainer.css("width", "");
          else if (this.options.height) {
            this.$tableBorder && (this.$tableBorder.css("width", ""), this.$tableBorder.css("height", ""));
            var n3 = this.$toolbar.outerHeight(true), o2 = this.$pagination.outerHeight(true), r2 = this.options.height - n3 - o2, a2 = this.$tableBody.find(">table"), s2 = a2.outerHeight();
            if (this.$tableContainer.css("height", "".concat(r2, "px")), this.$tableBorder && a2.is(":visible")) {
              var l2 = r2 - s2 - 2;
              this.hasScrollBar && (l2 -= gv.getScrollBarWidth()), this.$tableBorder.css("width", "".concat(a2.outerWidth(), "px")), this.$tableBorder.css("height", "".concat(l2, "px"));
            }
          }
          this.options.cardView ? (this.$el.css("margin-top", "0"), this.$tableContainer.css("padding-bottom", "0"), this.$tableFooter.hide()) : (this.getCaret(), this.$tableContainer.css("padding-bottom", "".concat(e2, "px"))), this.trigger("reset-view");
        } }, { key: "showLoading", value: function() {
          this.$tableLoading.toggleClass("open", true);
          var t2 = this.options.loadingFontSize;
          "auto" === this.options.loadingFontSize && (t2 = 0.04 * this.$tableLoading.width(), t2 = Math.max(12, t2), t2 = Math.min(32, t2), t2 = "".concat(t2, "px")), this.$tableLoading.find(".loading-text").css("font-size", t2);
        } }, { key: "hideLoading", value: function() {
          this.$tableLoading.toggleClass("open", false);
        } }, { key: "togglePagination", value: function() {
          this.options.pagination = !this.options.pagination;
          var t2 = this.options.showButtonIcons ? this.options.pagination ? this.options.icons.paginationSwitchDown : this.options.icons.paginationSwitchUp : "", e2 = this.options.showButtonText ? this.options.pagination ? this.options.formatPaginationSwitchUp() : this.options.formatPaginationSwitchDown() : "";
          this.$toolbar.find('button[name="paginationSwitch"]').html("".concat(gv.sprintf(this.constants.html.icon, this.options.iconsPrefix, t2), " ").concat(e2)), this.updatePagination(), this.trigger("toggle-pagination", this.options.pagination);
        } }, { key: "toggleFullscreen", value: function() {
          this.$el.closest(".bootstrap-table").toggleClass("fullscreen"), this.resetView();
        } }, { key: "toggleView", value: function() {
          this.options.cardView = !this.options.cardView, this.initHeader();
          var t2 = this.options.showButtonIcons ? this.options.cardView ? this.options.icons.toggleOn : this.options.icons.toggleOff : "", e2 = this.options.showButtonText ? this.options.cardView ? this.options.formatToggleOff() : this.options.formatToggleOn() : "";
          this.$toolbar.find('button[name="toggle"]').html("".concat(gv.sprintf(this.constants.html.icon, this.options.iconsPrefix, t2), " ").concat(e2)).attr("aria-label", e2).attr("title", e2), this.initBody(), this.trigger("toggle", this.options.cardView);
        } }, { key: "resetSearch", value: function(t2) {
          var e2 = gv.getSearchInput(this), i2 = t2 || "";
          e2.val(i2), this.searchText = i2, this.onSearch({ currentTarget: e2 }, false);
        } }, { key: "filterBy", value: function(t2, e2) {
          this.filterOptions = gv.isEmptyObject(e2) ? this.options.filterOptions : gv.extend(this.options.filterOptions, e2), this.filterColumns = gv.isEmptyObject(t2) ? {} : t2, this.options.pageNumber = 1, this.initSearch(), this.updatePagination();
        } }, { key: "scrollTo", value: function(i2) {
          var n3 = { unit: "px", value: 0 };
          "object" === e(i2) ? n3 = Object.assign(n3, i2) : "string" == typeof i2 && "bottom" === i2 ? n3.value = this.$tableBody[0].scrollHeight : "string" != typeof i2 && "number" != typeof i2 || (n3.value = i2);
          var o2 = n3.value;
          "rows" === n3.unit && (o2 = 0, this.$body.find("> tr:lt(".concat(n3.value, ")")).each(function(e2, i3) {
            o2 += t(i3).outerHeight(true);
          })), this.$tableBody.scrollTop(o2);
        } }, { key: "getScrollPosition", value: function() {
          return this.$tableBody.scrollTop();
        } }, { key: "selectPage", value: function(t2) {
          t2 > 0 && t2 <= this.options.totalPages && (this.options.pageNumber = t2, this.updatePagination());
        } }, { key: "prevPage", value: function() {
          this.options.pageNumber > 1 && (this.options.pageNumber--, this.updatePagination());
        } }, { key: "nextPage", value: function() {
          this.options.pageNumber < this.options.totalPages && (this.options.pageNumber++, this.updatePagination());
        } }, { key: "toggleDetailView", value: function(t2, e2) {
          this.$body.find(gv.sprintf('> tr[data-index="%s"]', t2)).next().is("tr.detail-view") ? this.collapseRow(t2) : this.expandRow(t2, e2), this.resetView();
        } }, { key: "expandRow", value: function(t2, e2) {
          var i2 = this.data[t2], n3 = this.$body.find(gv.sprintf('> tr[data-index="%s"][data-has-detail-view]', t2));
          if (this.options.detailViewIcon && n3.find("a.detail-icon").html(gv.sprintf(this.constants.html.icon, this.options.iconsPrefix, this.options.icons.detailClose)), !n3.next().is("tr.detail-view")) {
            n3.after(gv.sprintf('<tr class="detail-view"><td colspan="%s"></td></tr>', n3.children("td").length));
            var o2 = n3.next().find("td"), r2 = e2 || this.options.detailFormatter, a2 = gv.calculateObjectValue(this.options, r2, [t2, i2, o2], "");
            1 === o2.length && o2.append(a2), this.trigger("expand-row", t2, i2, o2);
          }
        } }, { key: "expandRowByUniqueId", value: function(t2) {
          var e2 = this.getRowByUniqueId(t2);
          e2 && this.expandRow(this.data.indexOf(e2));
        } }, { key: "collapseRow", value: function(t2) {
          var e2 = this.data[t2], i2 = this.$body.find(gv.sprintf('> tr[data-index="%s"][data-has-detail-view]', t2));
          i2.next().is("tr.detail-view") && (this.options.detailViewIcon && i2.find("a.detail-icon").html(gv.sprintf(this.constants.html.icon, this.options.iconsPrefix, this.options.icons.detailOpen)), this.trigger("collapse-row", t2, e2, i2.next()), i2.next().remove());
        } }, { key: "collapseRowByUniqueId", value: function(t2) {
          var e2 = this.getRowByUniqueId(t2);
          e2 && this.collapseRow(this.data.indexOf(e2));
        } }, { key: "expandAllRows", value: function() {
          for (var e2 = this.$body.find("> tr[data-index][data-has-detail-view]"), i2 = 0; i2 < e2.length; i2++)
            this.expandRow(t(e2[i2]).data("index"));
        } }, { key: "collapseAllRows", value: function() {
          for (var e2 = this.$body.find("> tr[data-index][data-has-detail-view]"), i2 = 0; i2 < e2.length; i2++)
            this.collapseRow(t(e2[i2]).data("index"));
        } }, { key: "updateColumnTitle", value: function(e2) {
          e2.hasOwnProperty("field") && e2.hasOwnProperty("title") && (this.columns[this.fieldsColumnsIndex[e2.field]].title = this.options.escape && this.options.escapeTitle ? gv.escapeHTML(e2.title) : e2.title, this.columns[this.fieldsColumnsIndex[e2.field]].visible && (this.$header.find("th[data-field]").each(function(i2, n3) {
            if (t(n3).data("field") === e2.field)
              return t(t(n3).find(".th-inner")[0]).text(e2.title), false;
          }), this.resetView()));
        } }, { key: "updateFormatText", value: function(t2, e2) {
          /^format/.test(t2) && this.options[t2] && ("string" == typeof e2 ? this.options[t2] = function() {
            return e2;
          } : "function" == typeof e2 && (this.options[t2] = e2), this.initToolbar(), this.initPagination(), this.initBody());
        } }]), n2;
      }();
      return Ov.VERSION = Sv.VERSION, Ov.DEFAULTS = Sv.DEFAULTS, Ov.LOCALES = Sv.LOCALES, Ov.COLUMN_DEFAULTS = Sv.COLUMN_DEFAULTS, Ov.METHODS = Sv.METHODS, Ov.EVENTS = Sv.EVENTS, t.BootstrapTable = Ov, t.fn.bootstrapTable = function(i2) {
        for (var n2 = arguments.length, o2 = new Array(n2 > 1 ? n2 - 1 : 0), r2 = 1; r2 < n2; r2++)
          o2[r2 - 1] = arguments[r2];
        var a2;
        return this.each(function(n3, r3) {
          var s2 = t(r3).data("bootstrap.table");
          if ("string" == typeof i2) {
            var l2;
            if (!Sv.METHODS.includes(i2))
              throw new Error("Unknown method: ".concat(i2));
            if (!s2)
              return;
            return a2 = (l2 = s2)[i2].apply(l2, o2), void ("destroy" === i2 && t(r3).removeData("bootstrap.table"));
          }
          if (s2)
            console.warn("You cannot initialize the table more than once!");
          else {
            var c2 = gv.extend(true, {}, Ov.DEFAULTS, t(r3).data(), "object" === e(i2) && i2);
            s2 = new t.BootstrapTable(r3, c2), t(r3).data("bootstrap.table", s2), s2.init();
          }
        }), void 0 === a2 ? this : a2;
      }, t.fn.bootstrapTable.Constructor = Ov, t.fn.bootstrapTable.theme = Sv.THEME, t.fn.bootstrapTable.VERSION = Sv.VERSION, t.fn.bootstrapTable.defaults = Ov.DEFAULTS, t.fn.bootstrapTable.columnDefaults = Ov.COLUMN_DEFAULTS, t.fn.bootstrapTable.events = Ov.EVENTS, t.fn.bootstrapTable.locales = Ov.LOCALES, t.fn.bootstrapTable.methods = Ov.METHODS, t.fn.bootstrapTable.utils = gv, t(function() {
        t('[data-toggle="table"]').bootstrapTable();
      }), Ov;
    });
  }
});
export default require_bootstrap_table_min();
/*! Bundled license information:

bootstrap-table/dist/bootstrap-table.min.js:
  (**
    * bootstrap-table - An extended table to integration with some of the most widely used CSS frameworks. (Supports Bootstrap, Semantic UI, Bulma, Material Design, Foundation)
    *
    * @version v1.22.1
    * @homepage https://bootstrap-table.com
    * @author wenzhixin <wenzhixin2010@gmail.com> (http://wenzhixin.net.cn/)
    * @license MIT
    *)
*/
//# sourceMappingURL=bootstrap-table.js.map
